{
  "questions": [
    {
      "id": "Q001",
      "q": "Tell me about yourself / walk me through your background",
      "type": "beh",
      "a": "I'm a Power BI developer with just over six years in BI and analytics. I came up through economics, so I naturally translate business problems into data questions. Over time I leaned into the Microsoft stack—Power BI, Power Query, DAX—and ended up leading migrations from Tableau to Power BI, building enterprise data models for 500+ users, and automating refresh and governance. What I enjoy most is turning messy, multi-source data into clean, decision-ready stories that actually change how teams operate.",
      "category": "Career Narrative",
      "difficulty": "Beginner",
      "keywords": [
        "background",
        "Power BI",
        "economics",
        "migration",
        "enterprise"
      ],
      "company_fit": "Shows pragmatic modernization aligned to AGR’s transformation focus."
    },
    {
      "id": "Q002",
      "q": "Why do you want to work at AGR (or for this company)?",
      "type": "beh",
      "a": "Your work sits where I do my best thinking—modernizing legacy environments with measurable outcomes. I like that AGR partners on the process, not just the tech. Federal programs, compliance, and high-stakes stakeholders mean reliability matters, and that’s where my Power BI and governance experience pays off. I’d love to help you ship analytics that people actually trust and use.",
      "category": "Motivation",
      "difficulty": "Beginner",
      "keywords": [
        "AGR",
        "motivation",
        "public sector",
        "governance"
      ],
      "company_fit": "Aligns with AGR’s “partner not vendor” mindset and measurable impact."
    },
    {
      "id": "Q003",
      "q": "Describe a challenging Power BI project and how you handled it.",
      "type": "beh",
      "a": "We had conflicting KPIs across departments—same metric, different math. I ran short discovery sessions to lock definitions, designed a star schema, and built parameterized Power Query pipelines with error handling. We added incremental refresh and refactored the heaviest measures with VAR and proper filter context. Rollout was staged with short demos and training. Result: refresh failures down ~60%, page load ~30% faster, and stakeholders finally quoting the same numbers.",
      "category": "Delivery",
      "difficulty": "Intermediate",
      "keywords": [
        "KPIs",
        "star schema",
        "incremental refresh",
        "DAX"
      ],
      "company_fit": "Demonstrates stakeholder empathy and legacy optimization."
    },
    {
      "id": "Q004",
      "q": "What is Power BI? Describe its main components.",
      "type": "tech",
      "a": "Power BI has several key components: Desktop is where you build models and author reports. The Service is your cloud platform for publishing, sharing, scheduled refresh, Row-Level Security, and governance. Gateways securely connect to on-premises data sources. Dataflows provide reusable ETL logic. And then you have the core artifacts people interact with—datasets, reports, and dashboards for consumption.",
      "category": "Power BI - Platform",
      "difficulty": "Beginner",
      "keywords": [
        "desktop",
        "service",
        "gateway",
        "dataflows",
        "artifacts"
      ],
      "company_fit": "Grounded understanding of the stack for enterprise deployment."
    },
    {
      "id": "Q005",
      "q": "What's the difference between a measure and a calculated column?",
      "type": "tech",
      "a": "Calculated columns are computed at refresh time and stored in the model, so they increase model size. They work with row context, evaluating each row individually. Measures, on the other hand, compute on the fly using filter context—which makes them perfect for KPIs and dynamic calculations. I typically default to measures unless I genuinely need a persisted row-level value.",
      "category": "Power BI - DAX",
      "difficulty": "Beginner",
      "keywords": [
        "calculated column",
        "measure",
        "row context",
        "filter context"
      ],
      "company_fit": "Signals performance-first, maintainable modeling choices."
    },
    {
      "id": "Q006",
      "q": "How do you manage relationships in data models—cardinality and direction?",
      "type": "tech",
      "a": "I prefer one-to-many relationships with a clear flow from dimension to fact table. I keep the filter direction single unless there's a real business need for bi-directional filtering. For many-to-many scenarios, I use a proper bridge table and keep any bi-directional relationships scoped to the smallest safe area. And for inactive relationships, I only activate them explicitly in measures using USERELATIONSHIP.",
      "category": "Power BI - Modeling",
      "difficulty": "Intermediate",
      "keywords": [
        "relationships",
        "cardinality",
        "bi-directional",
        "USERELATIONSHIP"
      ],
      "company_fit": "Reflects careful governance and ambiguity reduction."
    },
    {
      "id": "Q008",
      "q": "How do you prioritize multiple requests?",
      "type": "beh",
      "a": "I use an impact vs. urgency grid, confirm dependencies, and get alignment on what “done” means. I time-box discovery, deliver a thin slice first, then sequence enhancements so the highest-value users see progress quickly.",
      "category": "Stakeholders",
      "difficulty": "Beginner",
      "keywords": [
        "prioritization",
        "impact",
        "urgency",
        "MVP"
      ],
      "company_fit": "Balances speed and reliability under public sector constraints."
    },
    {
      "id": "Q009",
      "q": "What is a Slowly Changing Dimension and how do you handle it?",
      "type": "tech",
      "a": "There are three main types: Type 1 simply overwrites the old value. Type 2 keeps full history with effective dates and a current flag. Type 3 stores just one previous value in an additional column. I typically default to Type 2 for auditability, and I use surrogate keys along with date ranges to keep fact tables history-accurate.",
      "category": "Power BI - ETL",
      "difficulty": "Intermediate",
      "keywords": [
        "SCD",
        "Type 2",
        "effective dates",
        "surrogate key"
      ],
      "company_fit": "Supports traceability and compliance—critical for AGR clients."
    },
    {
      "id": "Q010",
      "q": "How would you design a sales dashboard for leadership?",
      "type": "tech",
      "a": "I'd start with top-row KPIs showing revenue, growth, and margin. Below that, trend lines with year-over-year comparisons and segmentation by region or customer. The key is providing a clear path to drill into what's driving those numbers. I'd keep slicers minimal, use a neutral color palette, and add a call-out section for exceptions. For the mobile view, I'd include only the essential KPIs and the primary trend to keep it focused.",
      "category": "Power BI - Design",
      "difficulty": "Intermediate",
      "keywords": [
        "KPI",
        "trend",
        "drill",
        "mobile"
      ],
      "company_fit": "Emphasizes clarity and decision-readiness."
    },
    {
      "id": "Q011",
      "q": "Describe a time you found a data issue after deployment.",
      "type": "beh",
      "a": "A filter combo produced off totals. I paused refresh, reproduced the path, traced to a non-folding Power Query step plus a DAX iterator. I fixed folding, refactored the measure with VAR, validated against source totals, and posted a short post-mortem so it didn’t repeat.",
      "category": "Resilience",
      "difficulty": "Intermediate",
      "keywords": [
        "debug",
        "query folding",
        "VAR",
        "post-mortem"
      ],
      "company_fit": "Shows ownership and transparent communication."
    },
    {
      "id": "Q012",
      "q": "How do you stay current in Power BI?",
      "type": "beh",
      "a": "Release notes, Fabric/Power BI blogs, a couple of MVPs I follow, and small weekend prototypes to try new features on fake data. Teaching teammates what I learned makes it stick.",
      "category": "Growth",
      "difficulty": "Beginner",
      "keywords": [
        "learning",
        "release notes",
        "prototyping"
      ],
      "company_fit": "Continuous improvement—key to pragmatic modernization."
    },
    {
      "id": "Q013",
      "q": "What is incremental refresh? How do you implement it?",
      "type": "tech",
      "a": "Incremental refresh lets you partition data by date and only refresh the recent, 'hot' data instead of everything. You define parameters called RangeStart and RangeEnd, configure the policy in Desktop, then publish to the Service. The key is ensuring query folding works so the filters push down to the source. This approach significantly cuts runtime, reduces cost, and lowers gateway load.",
      "category": "Power BI - Performance",
      "difficulty": "Intermediate",
      "keywords": [
        "incremental refresh",
        "partitions",
        "RangeStart",
        "folding"
      ],
      "company_fit": "Efficient at scale—important for 1,000-user environments."
    },
    {
      "id": "Q014",
      "q": "Star vs. Snowflake—when and why?",
      "type": "tech",
      "a": "I default to star for performance and simplicity in DAX. Snowflake can make sense for shared conformed dimensions or governance reasons, but I’ll denormalize if it simplifies the semantic layer without breaking lineage.",
      "category": "Power BI - Modeling",
      "difficulty": "Intermediate",
      "keywords": [
        "star schema",
        "snowflake",
        "conformed dimensions"
      ],
      "company_fit": "Prefers clarity but respects enterprise constraints."
    },
    {
      "id": "Q015",
      "q": "What is query folding and why should I care?",
      "type": "tech",
      "a": "Query folding pushes your transformations back to the data source, so you scan less data and run faster. I always check 'View Native Query' to verify folding is happening. The trick is to keep foldable steps early in your query and avoid actions that break folding before your filters are applied—that way the source database does the heavy lifting.",
      "category": "Power BI - ETL",
      "difficulty": "Intermediate",
      "keywords": [
        "folding",
        "native query",
        "Power Query"
      ],
      "company_fit": "Performance discipline that pays off in the Service."
    },
    {
      "id": "Q016",
      "q": "How do you handle data quality issues?",
      "type": "tech",
      "a": "Profile first, add validation rules, and stage data with clear error buckets. I prefer visible data-quality tiles in the report so users see recency and coverage, not just the pretty charts.",
      "category": "Power BI - Governance",
      "difficulty": "Intermediate",
      "keywords": [
        "profiling",
        "validation",
        "staging",
        "DQ tiles"
      ],
      "company_fit": "Builds trust through transparency—vital in public programs."
    },
    {
      "id": "Q017",
      "q": "What’s your experience with Power BI Premium?",
      "type": "tech",
      "a": "Large models, incremental refresh at scale, paginated reports for pixel-perfect needs, and deployment pipelines. I’m mindful of capacities, artifact ownership, and refresh concurrency so nothing starves.",
      "category": "Power BI - Platform",
      "difficulty": "Advanced",
      "keywords": [
        "Premium",
        "capacity",
        "paginated",
        "pipelines"
      ],
      "company_fit": "Understands enterprise levers for reliability and scale."
    },
    {
      "id": "Q018",
      "q": "How do you ensure data security and compliance?",
      "type": "tech",
      "a": "RLS and, when needed, dynamic RLS. Sensitivity labels, least-privilege via AAD groups, and audit logs. I document rules, test with real personas, and keep secrets in Key Vault—never in queries.",
      "category": "Power BI - Security",
      "difficulty": "Advanced",
      "keywords": [
        "RLS",
        "AAD",
        "labels",
        "audit"
      ],
      "company_fit": "Matches AGR’s compliance and governance expectations."
    },
    {
      "id": "Q019",
      "q": "Your approach to testing before deployment?",
      "type": "tech",
      "a": "Source-to-target checks, sample recon, performance profiling with Performance Analyzer and DAX Studio, and quick UAT scripts. I also test mobile and common filter paths users will actually click.",
      "category": "Power BI - Quality",
      "difficulty": "Intermediate",
      "keywords": [
        "testing",
        "reconciliation",
        "UAT",
        "performance"
      ],
      "company_fit": "Bakes in quality to reduce support load later."
    },
    {
      "id": "Q020",
      "q": "How do you handle large datasets?",
      "type": "tech",
      "a": "I use a combination of techniques: aggregations to pre-summarize data, composite models to mix import and DirectQuery, incremental refresh for historical data, and careful column encoding to optimize memory. I keep visuals lean on each page and avoid putting slicers on high-cardinality columns. When these techniques aren't enough, I'll switch specific tables to DirectQuery for narrow, targeted paths.",
      "category": "Power BI - Performance",
      "difficulty": "Advanced",
      "keywords": [
        "aggregations",
        "composite",
        "DirectQuery",
        "encoding"
      ],
      "company_fit": "Scales without sacrificing usability."
    },
    {
      "id": "Q021",
      "q": "Describe a time you learned a new tech quickly.",
      "type": "beh",
      "a": "We needed anomaly detection in a metrics tile. I built a tiny Python proof, validated the lift on past data, and then integrated only the useful part. The trick was validating with real historical edge cases.",
      "category": "Growth",
      "difficulty": "Beginner",
      "keywords": [
        "learning",
        "prototype",
        "validation"
      ],
      "company_fit": "Bias for action with measured risk."
    },
    {
      "id": "Q022",
      "q": "How do you handle conflicting stakeholder requirements?",
      "type": "beh",
      "a": "I get both groups in the same room, restate goals, and show a quick prototype to surface tradeoffs. Often the answer is a layered design—executive summary first with drill-ins for detail-hungry teams.",
      "category": "Stakeholders",
      "difficulty": "Intermediate",
      "keywords": [
        "conflict",
        "alignment",
        "prototype"
      ],
      "company_fit": "Bridges priorities without losing momentum."
    },
    {
      "id": "Q023",
      "q": "Components of a Power BI enterprise architecture?",
      "type": "tech",
      "a": "A solid Power BI enterprise architecture flows like this: source systems feed into ETL processes or Dataflows, which populate semantic datasets with Row-Level Security built in. These datasets live in governed workspaces and are distributed through apps to end users. Deployment pipelines manage the Dev/Test/Prod lifecycle. Gateways handle on-premises connectivity, and sensitivity labels travel with the data throughout the entire chain.",
      "category": "Power BI - Architecture",
      "difficulty": "Advanced",
      "keywords": [
        "workspaces",
        "apps",
        "pipelines",
        "RLS"
      ],
      "company_fit": "Structured, governable, and scalable."
    },
    {
      "id": "Q024",
      "q": "How do you handle many-to-many relationships?",
      "type": "tech",
      "a": "I prefer using a bridge table to properly model the many-to-many relationship, and I'll use TREATAS when I need virtual relationships. When bi-directional filtering is necessary, I keep it tightly scoped and well-documented. Before releasing, I always test that totals add up correctly under the most common slicer combinations users will encounter.",
      "category": "Power BI - Modeling",
      "difficulty": "Advanced",
      "keywords": [
        "M2M",
        "bridge",
        "TREATAS",
        "bi-directional"
      ],
      "company_fit": "Avoids ambiguity and protects performance."
    },
    {
      "id": "Q025",
      "q": "Explain DAX context to a non-technical executive.",
      "type": "tech",
      "a": "Think of the report as a camera. Filters are the lens—what’s in the frame changes the number you see. Measures read whatever is in the frame at that moment. Change the lens, the number changes—on purpose.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "context",
        "analogy",
        "executive"
      ],
      "company_fit": "Translates technical ideas into business language."
    },
    {
      "id": "Q026",
      "q": "Give an example of a complex measure you optimized.",
      "type": "tech",
      "a": "A churn KPI iterated across customers and months. I rewrote it using SUMMARIZE to pre-stage the grain, used VAR to cache, and replaced nested FILTER with KEEPFILTERS. The calc time dropped from seconds to sub-second.",
      "category": "Power BI - DAX",
      "difficulty": "Advanced",
      "keywords": [
        "optimization",
        "VAR",
        "SUMMARIZE",
        "KEEPFILTERS"
      ],
      "company_fit": "Delivers speed without changing the truth."
    },
    {
      "id": "Q027",
      "q": "How would you implement audit tracking and lineage?",
      "type": "tech",
      "a": "Store effective dates and user stamps, keep ETL run logs, and maintain a simple lineage table mapping source → transformations → target fields. I also annotate queries and measures, so the why is visible later.",
      "category": "Power BI - Governance",
      "difficulty": "Advanced",
      "keywords": [
        "lineage",
        "audit",
        "logs",
        "annotations"
      ],
      "company_fit": "Supports compliance and maintainability."
    },
    {
      "id": "Q028",
      "q": "Azure Analysis Services vs. Power BI datasets?",
      "type": "tech",
      "a": "They share the same tabular engine roots, but Power BI datasets integrate more tightly with the Service, deployment pipelines, and security labels. Azure Analysis Services can be the right choice for specific enterprise patterns or when you need more control. But for most new builds, I'd lean toward Power BI datasets for the velocity and cost advantages they offer.",
      "category": "Power BI - Platform",
      "difficulty": "Advanced",
      "keywords": [
        "AAS",
        "tabular",
        "datasets",
        "tradeoffs"
      ],
      "company_fit": "Chooses the simplest platform that meets needs."
    },
    {
      "id": "Q029",
      "q": "Common ETL transformations you rely on.",
      "type": "tech",
      "a": "Type coercion early, deduping on business keys, tidy joins, pivot/unpivot for tidy facts, and late filters that still fold. Anything slow moves upstream if possible.",
      "category": "Power BI - ETL",
      "difficulty": "Intermediate",
      "keywords": [
        "joins",
        "pivot",
        "dedupe",
        "folding"
      ],
      "company_fit": "Makes downstream modeling simpler and faster."
    },
    {
      "id": "Q030",
      "q": "What is a staging area and why use it?",
      "type": "tech",
      "a": "It’s a safe landing zone for raw data and validation. It lets you quarantine errors, replay loads, and keep a clean separation from curated models.",
      "category": "Power BI - ETL",
      "difficulty": "Beginner",
      "keywords": [
        "staging",
        "validation",
        "quarantine"
      ],
      "company_fit": "Improves reliability and auditability."
    },
    {
      "id": "Q031",
      "q": "Design an incremental/delta load approach.",
      "type": "tech",
      "a": "Track last-modified timestamps or version IDs, UPSERT into facts with effective dating on dimensions, and backfill late-arriving records on a weekly job. Keep metrics proving what changed.",
      "category": "Power BI - ETL",
      "difficulty": "Advanced",
      "keywords": [
        "UPSERT",
        "delta",
        "late arriving"
      ],
      "company_fit": "Balances freshness and cost in government data estates."
    },
    {
      "id": "Q032",
      "q": "How do you write efficient ETL SQL?",
      "type": "tech",
      "a": "Set-based ops, indexes on join/filter columns, filter early, keep scans narrow, and use window functions thoughtfully. Batch commits to avoid log bloat.",
      "category": "Power BI - ETL",
      "difficulty": "Intermediate",
      "keywords": [
        "window",
        "index",
        "batch",
        "set-based"
      ],
      "company_fit": "Production-ready engineering thinking."
    },
    {
      "id": "Q033",
      "q": "How do you manage ETL errors?",
      "type": "tech",
      "a": "Structured error tables, retries with exponential backoff, and notifications with enough context to fix fast. I tag rows we skipped so we can re-process once fixed.",
      "category": "Power BI - ETL",
      "difficulty": "Intermediate",
      "keywords": [
        "error handling",
        "retry",
        "alerts"
      ],
      "company_fit": "Operational discipline for dependable refreshes."
    },
    {
      "id": "Q034",
      "q": "How do you reconcile data source vs. report?",
      "type": "tech",
      "a": "Row counts and sums by grain, checksums where possible, and a quick curated table of known exceptions. I document any intentional differences so audits aren’t a scavenger hunt.",
      "category": "Power BI - Quality",
      "difficulty": "Intermediate",
      "keywords": [
        "reconciliation",
        "checksum",
        "grain"
      ],
      "company_fit": "Prevents trust issues in executive reviews."
    },
    {
      "id": "Q035",
      "q": "When do you choose partitions?",
      "type": "tech",
      "a": "Date-based partitions are my default for facts. They pair well with incremental refresh, reduce memory spikes, and keep troubleshooting surgical.",
      "category": "Power BI - Performance",
      "difficulty": "Advanced",
      "keywords": [
        "partitions",
        "incremental",
        "memory"
      ],
      "company_fit": "Designs for scale from day one."
    },
    {
      "id": "Q036",
      "q": "What’s your biggest weakness and how are you improving it?",
      "type": "beh",
      "a": "I can over-optimize too early. I’m better now at shipping the simplest working version, then iterating with real usage. Time-boxing design and keeping a small “optimize later” backlog helps.",
      "category": "Self-Awareness",
      "difficulty": "Beginner",
      "keywords": [
        "weakness",
        "iteration",
        "time-boxing"
      ],
      "company_fit": "Healthy bias for incremental, measurable improvement."
    },
    {
      "id": "Q037",
      "q": "Where do you see yourself in 3–5 years?",
      "type": "beh",
      "a": "Leading data products end-to-end—designing semantic models, setting governance patterns, and mentoring analysts so the organization moves faster with confidence.",
      "category": "Career Narrative",
      "difficulty": "Beginner",
      "keywords": [
        "growth",
        "leadership",
        "governance"
      ],
      "company_fit": "Invests in people and sustainable practices."
    },
    {
      "id": "Q038",
      "q": "Tell me about a time you refactored a working model.",
      "type": "beh",
      "a": "The model worked but every new metric felt heavy. I split a wide dimension, standardized naming, and replaced four custom calcs with one reusable pattern. Future features took half the time.",
      "category": "Maintainability",
      "difficulty": "Intermediate",
      "keywords": [
        "refactor",
        "naming",
        "reusability"
      ],
      "company_fit": "Prefers maintainable solutions over clever one-offs."
    },
    {
      "id": "Q039",
      "q": "How do you avoid burnout on long projects?",
      "type": "beh",
      "a": "Slice work into visible wins, automate repeatable checks, and keep weekly demos so progress is real, not just tickets moving. I also block focus time and protect it.",
      "category": "Resilience",
      "difficulty": "Beginner",
      "keywords": [
        "burnout",
        "cadence",
        "automation"
      ],
      "company_fit": "Sustains delivery without heroics."
    },
    {
      "id": "Q040",
      "q": "Describe a time you pushed back constructively.",
      "type": "beh",
      "a": "A custom visual looked great but tanked performance. I demoed the load impact and offered a near-identical native visual. We shipped fast and nobody missed the original.",
      "category": "Stakeholders",
      "difficulty": "Intermediate",
      "keywords": [
        "pushback",
        "performance",
        "alternatives"
      ],
      "company_fit": "Data-backed persuasion with empathy."
    },
    {
      "id": "Q041",
      "q": "Leadership: your style with exec stakeholders?",
      "type": "beh",
      "a": "I keep the conversation about decisions, not charts. One slide for context, one for the number, and one for the driver. If there’s risk or caveat, I say it plainly.",
      "category": "Leadership",
      "difficulty": "Intermediate",
      "keywords": [
        "exec",
        "communication",
        "decision-focused"
      ],
      "company_fit": "Respects time and communicates with clarity."
    },
    {
      "id": "Q042",
      "q": "How would you handle executives demanding instant metrics with incomplete data?",
      "type": "beh",
      "a": "I’d offer a clearly labeled early view—define what's missing and what might swing the result. Then commit to a timeline for the complete version. Fast, honest, and safe.",
      "category": "Stakeholders",
      "difficulty": "Advanced",
      "keywords": [
        "incomplete data",
        "expectations",
        "risk"
      ],
      "company_fit": "Protects trust while enabling progress."
    },
    {
      "id": "Q043",
      "q": "Design an enterprise-grade Power BI environment for ~1,000 users with security layers.",
      "type": "tech",
      "a": "I'd build it around shared semantic datasets with thin reports on top. Set up separate Dev/Test/Prod workspaces connected by deployment pipelines. Use Azure AD groups for access control, implement dynamic Row-Level Security for data filtering, apply sensitivity labels for compliance, and monitor capacity health. Add gateways for on-premises connections and dataflows for shared data preparation logic.",
      "category": "Power BI - Architecture",
      "difficulty": "Advanced",
      "keywords": [
        "semantic",
        "thin reports",
        "pipelines",
        "RLS"
      ],
      "company_fit": "Scalable, governable, and auditable by design."
    },
    {
      "id": "Q044",
      "q": "How does your non-CS background help you think differently?",
      "type": "beh",
      "a": "Economics trained me to ask ‘what decision changes with this number?’ I’m comfortable with tradeoffs and communicating uncertainty, which keeps dashboards honest and useful.",
      "category": "Career Narrative",
      "difficulty": "Beginner",
      "keywords": [
        "economics",
        "storytelling",
        "uncertainty"
      ],
      "company_fit": "Values outcome-driven analytics."
    },
    {
      "id": "Q045",
      "q": "What kind of team environment helps you do your best work?",
      "type": "beh",
      "a": "Short feedback loops, clear ownership, and lightweight standards for naming, folders, and testing. Less arguing over tabs vs spaces, more alignment on what ‘good’ looks like.",
      "category": "Culture",
      "difficulty": "Beginner",
      "keywords": [
        "team",
        "standards",
        "feedback"
      ],
      "company_fit": "Matches AGR’s pragmatic, outcome-first culture."
    },
    {
      "id": "Q046",
      "q": "What would you do if asked to present data you knew was incomplete?",
      "type": "beh",
      "a": "I’d present it with a visible disclaimer and a confidence band: ‘Here’s the early read; margin of error is X because Y is pending.’ Then I’d outline what will change once the missing slice lands.",
      "category": "Ethics",
      "difficulty": "Intermediate",
      "keywords": [
        "incomplete",
        "disclaimer",
        "confidence"
      ],
      "company_fit": "Protects integrity while serving urgency."
    },
    {
      "id": "Q047",
      "q": "Explain a DAX measure to a non-technical executive.",
      "type": "tech",
      "a": "A measure is a smart calculator. It always answers ‘given what we’re looking at right now, what’s the number?’ If you filter to the West, it answers for the West—no rewiring needed.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "explain",
        "executive",
        "filter"
      ],
      "company_fit": "Keeps data literacy high across roles."
    },
    {
      "id": "Q048",
      "q": "System design: shared dataset strategy vs. single monolith.",
      "type": "tech",
      "a": "I prefer a small set of conformed shared datasets and publish thin reports. It reduces duplication, simplifies governance, and lets us optimize once for everyone.",
      "category": "Power BI - Architecture",
      "difficulty": "Advanced",
      "keywords": [
        "shared dataset",
        "thin report",
        "governance"
      ],
      "company_fit": "Promotes reuse and consistency."
    },
    {
      "id": "Q049",
      "q": "Handling last-minute scope changes mid-sprint?",
      "type": "beh",
      "a": "I clarify impact, show what moves out, and propose the smallest slice that hits the goal. I document the change so it’s visible and we don’t quietly burn the team.",
      "category": "Delivery",
      "difficulty": "Intermediate",
      "keywords": [
        "scope",
        "tradeoffs",
        "visibility"
      ],
      "company_fit": "Transparent, predictable delivery."
    },
    {
      "id": "Q050",
      "q": "How do you make dashboards accessible?",
      "type": "tech",
      "a": "High contrast themes, descriptive titles and alt text, focus order that makes sense, and avoiding color-only encoding. I test with keyboard navigation and a color-blind simulator.",
      "category": "Power BI - Design",
      "difficulty": "Intermediate",
      "keywords": [
        "accessibility",
        "contrast",
        "alt text"
      ],
      "company_fit": "Inclusive by default for broad adoption."
    },
    {
      "id": "Q051",
      "q": "How do you manage DirectQuery tradeoffs?",
      "type": "tech",
      "a": "Keep visuals lean, cache what can be cached, and push logic to the source with views. If latency hurts, hybrid with import at higher grains and keep DirectQuery for the hot, narrow slice.",
      "category": "Power BI - Performance",
      "difficulty": "Advanced",
      "keywords": [
        "DirectQuery",
        "hybrid",
        "latency"
      ],
      "company_fit": "Balances freshness and usability."
    },
    {
      "id": "Q052",
      "q": "Favorite Power Query practices?",
      "type": "tech",
      "a": "Name steps clearly, keep foldable steps early, isolate merges, and parameterize paths and ranges. Comment like someone else will read it—because they will.",
      "category": "Power BI - ETL",
      "difficulty": "Intermediate",
      "keywords": [
        "Power Query",
        "folding",
        "parameters"
      ],
      "company_fit": "Smoother operations and handoffs."
    },
    {
      "id": "Q053",
      "q": "When do you use calculated tables?",
      "type": "tech",
      "a": "Sparingly—when a modeling helper improves clarity (like a calendar with special flags) and the logic doesn’t belong in ETL. I watch size and recalc cost.",
      "category": "Power BI - Modeling",
      "difficulty": "Advanced",
      "keywords": [
        "calculated table",
        "calendar",
        "size"
      ],
      "company_fit": "Chooses the right layer for the job."
    },
    {
      "id": "Q054",
      "q": "Gateway reliability tips?",
      "type": "tech",
      "a": "I recommend using a gateway cluster for redundancy. Stagger heavy refreshes to avoid overwhelming the gateway. Monitor CPU, memory, and query duration closely, and keep drivers consistent across all cluster nodes. Set up alerts for failures that include enough context to troubleshoot quickly.",
      "category": "Power BI - Platform",
      "difficulty": "Advanced",
      "keywords": [
        "gateway",
        "cluster",
        "monitoring"
      ],
      "company_fit": "Keeps production steady for mission-critical reports."
    },
    {
      "id": "Q055",
      "q": "How do you onboard to a new team fast?",
      "type": "beh",
      "a": "Read the docs, learn the naming, fix a small bug to touch the stack, and book short listening sessions with owners. Then I propose a tiny improvement to show traction.",
      "category": "Culture",
      "difficulty": "Beginner",
      "keywords": [
        "onboarding",
        "listening",
        "quick win"
      ],
      "company_fit": "Low-friction integration into client teams."
    },
    {
      "id": "Q056",
      "q": "Design a KPI review page that execs will actually use.",
      "type": "tech",
      "a": "Three rows: KPIs with sparklines, drivers vs. target, and risks/caveats. Each tile is clickable; the mobile synopsis keeps only the KPI row and a single driver chart.",
      "category": "Power BI - Design",
      "difficulty": "Intermediate",
      "keywords": [
        "KPI",
        "sparkline",
        "mobile"
      ],
      "company_fit": "Decision-first design for busy leaders."
    },
    {
      "id": "Q057",
      "q": "How do you prevent measure sprawl?",
      "type": "tech",
      "a": "I use display folders to organize measures into logical groups, follow consistent naming conventions, and create base measures that more complex measures build upon. I also document everything with a quick 'measure dictionary' page that explains what each measure does and how to use it.",
      "category": "Power BI - Governance",
      "difficulty": "Intermediate",
      "keywords": [
        "naming",
        "folders",
        "dictionary"
      ],
      "company_fit": "Keeps complexity understandable at scale."
    },
    {
      "id": "Q058",
      "q": "What’s your approach to paginated reports?",
      "type": "tech",
      "a": "Use for pixel-perfect, printable layouts and regulatory outputs. Keep logic centralized in the dataset where possible so paginated draws from the same truth.",
      "category": "Power BI - Platform",
      "difficulty": "Intermediate",
      "keywords": [
        "paginated",
        "pixel perfect",
        "dataset"
      ],
      "company_fit": "Meets compliance needs without model drift."
    },
    {
      "id": "Q059",
      "q": "How do you communicate uncertainty?",
      "type": "beh",
      "a": "Say it plainly: ‘This is an early read; margin of error is ±X because we’re missing Y.’ Then show what would change if Y shifts by a realistic amount.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "uncertainty",
        "risk",
        "communication"
      ],
      "company_fit": "Protects credibility in high-stakes settings."
    },
    {
      "id": "Q060",
      "q": "Explain aggregations in simple terms.",
      "type": "tech",
      "a": "We keep a small, summarized version of a huge table so most questions are answered fast. If someone zooms in too far, Power BI knows to ask the big table instead.",
      "category": "Power BI - Performance",
      "difficulty": "Intermediate",
      "keywords": [
        "aggregations",
        "summary",
        "fallback"
      ],
      "company_fit": "Scales gracefully for broad usage."
    },
    {
      "id": "Q061",
      "q": "A time you disagreed with a data-driven decision.",
      "type": "beh",
      "a": "A conversion metric looked amazing after a filter change. I showed the pre/post definition and a like-for-like comparison. We restored the original KPI and added a small governance step to review definition updates.",
      "category": "Ethics",
      "difficulty": "Intermediate",
      "keywords": [
        "definitions",
        "like-for-like",
        "governance"
      ],
      "company_fit": "Defends data truth over vanity metrics."
    },
    {
      "id": "Q062",
      "q": "Handling PII in reports?",
      "type": "tech",
      "a": "Minimize by design, mask where needed, and aggregate until the business case for detail is justified and approved. Labels + RLS + workspace access reviews close the loop.",
      "category": "Power BI - Security",
      "difficulty": "Advanced",
      "keywords": [
        "PII",
        "masking",
        "labels",
        "RLS"
      ],
      "company_fit": "Security-first in regulated environments."
    },
    {
      "id": "Q063",
      "q": "Fabric lakehouse and Power BI—how would you use them together?",
      "type": "tech",
      "a": "Use the lakehouse for open-format storage and transformations, then expose curated Delta tables to semantic models. It keeps prep flexible and reporting fast.",
      "category": "Power BI - Architecture",
      "difficulty": "Advanced",
      "keywords": [
        "Fabric",
        "lakehouse",
        "Delta",
        "semantic"
      ],
      "company_fit": "Future-friendly while practical today."
    },
    {
      "id": "Q064",
      "q": "How do you react when a big assumption breaks late?",
      "type": "beh",
      "a": "Call it early, isolate the impact, and ship a safe subset while we fix the core. I write down the assumption in the doc so we don’t repeat the surprise.",
      "category": "Resilience",
      "difficulty": "Intermediate",
      "keywords": [
        "assumption",
        "subset",
        "communication"
      ],
      "company_fit": "Keeps delivery predictable under change."
    },
    {
      "id": "Q066",
      "q": "Your go-to visualization mistakes to avoid?",
      "type": "tech",
      "a": "Too many visuals per page, color as decoration, and unlabeled axes. I keep pages lean, use color with intent, and label what matters.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "visual clutter",
        "color",
        "labels"
      ],
      "company_fit": "Clarity over flashiness."
    },
    {
      "id": "Q067",
      "q": "What metrics do you track post-launch?",
      "type": "tech",
      "a": "Refresh success, load times, and usage patterns by page. I also scan the top filters applied—those tell me where to refine the next iteration.",
      "category": "Power BI - Quality",
      "difficulty": "Intermediate",
      "keywords": [
        "usage",
        "performance",
        "refresh"
      ],
      "company_fit": "Closes the loop for continuous improvement."
    },
    {
      "id": "Q068",
      "q": "How do you introduce self-service safely?",
      "type": "tech",
      "a": "I provide curated shared datasets, report templates, and a lightweight certification program. This way analysts can build reports confidently without creating their own versions of truth. It enables self-service while maintaining governance and consistency.",
      "category": "Power BI - Governance",
      "difficulty": "Advanced",
      "keywords": [
        "self-service",
        "certified",
        "templates"
      ],
      "company_fit": "Enables scale without chaos."
    },
    {
      "id": "Q069",
      "q": "You’re asked to add a chart you believe is misleading. Then what?",
      "type": "beh",
      "a": "I’ll mock it up and show how it misleads with a concrete example, then propose a safer alternative that answers the same question. Usually, seeing the risk wins the argument.",
      "category": "Ethics",
      "difficulty": "Intermediate",
      "keywords": [
        "misleading",
        "alternative",
        "example"
      ],
      "company_fit": "Protects user trust and outcomes."
    },
    {
      "id": "Q070",
      "q": "When would you choose a funnel vs. a waterfall chart?",
      "type": "tech",
      "a": "Funnel shows stage drop-offs in a process. Waterfall shows how components add/subtract to a total over steps. If we’re telling a contribution story, it’s waterfall every time.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "funnel",
        "waterfall",
        "story"
      ],
      "company_fit": "Picks visuals that match the decision."
    },
    {
      "id": "Q071",
      "q": "Your approach to version control with PBIX?",
      "type": "tech",
      "a": "Thin report files help. I store data model artifacts where possible and keep a naming/versioning scheme. Pipelines provide the Dev/Test/Prod gates we need.",
      "category": "Power BI - Governance",
      "difficulty": "Intermediate",
      "keywords": [
        "versioning",
        "thin report",
        "pipelines"
      ],
      "company_fit": "Change control that suits BI reality."
    },
    {
      "id": "Q072",
      "q": "How do you reduce model size?",
      "type": "tech",
      "a": "I start by removing any unused columns from the model. Then I use efficient encodings like integers instead of text, and booleans where appropriate. For high-cardinality text columns, I'll split them or normalize them. I also push heavy calculations upstream to the source when possible. The principle is simple: smaller models are faster models.",
      "category": "Power BI - Performance",
      "difficulty": "Intermediate",
      "keywords": [
        "encoding",
        "cardinality",
        "pruning"
      ],
      "company_fit": "Lowers cost and speeds up UX."
    },
    {
      "id": "Q073",
      "q": "Stakeholder says, ‘We need real-time.’ What’s your next question?",
      "type": "beh",
      "a": "‘Which decisions fail without it—and what latency is truly acceptable?’ Often 15-minute freshness solves the real problem without the cost of streaming.",
      "category": "Stakeholders",
      "difficulty": "Beginner",
      "keywords": [
        "real-time",
        "latency",
        "tradeoff"
      ],
      "company_fit": "Challenges assumptions respectfully."
    },
    {
      "id": "Q074",
      "q": "How do you use tooltips effectively?",
      "type": "tech",
      "a": "Add context that would clutter the page—definitions, data freshness, and small breakdowns. Keep them consistent and short.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "tooltips",
        "context",
        "definitions"
      ],
      "company_fit": "Boosts clarity without adding noise."
    },
    {
      "id": "Q075",
      "q": "Explain composite models to a product owner.",
      "type": "tech",
      "a": "We can mix imported, fast data with live, fresh data in one model—import for the heavy history and DirectQuery for the hot slice. Users get speed and freshness together.",
      "category": "Power BI - Architecture",
      "difficulty": "Intermediate",
      "keywords": [
        "composite",
        "import",
        "DirectQuery"
      ],
      "company_fit": "Practical performance for mixed needs."
    },
    {
      "id": "Q076",
      "q": "A stressful deadline and how you handled it.",
      "type": "beh",
      "a": "Two high-profile pages due at once. I negotiated scope to one KPI page first, shipped it with a caveat panel, and delivered the second page 48 hours later. Both landed clean.",
      "category": "Resilience",
      "difficulty": "Beginner",
      "keywords": [
        "deadline",
        "scope",
        "sequencing"
      ],
      "company_fit": "Protects quality under pressure."
    },
    {
      "id": "Q077",
      "q": "Design: how many visuals per page is reasonable?",
      "type": "tech",
      "a": "Usually under 10. Past that, I split pages or group details behind drill-through so the main page stays readable and fast.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "layout",
        "performance",
        "drill-through"
      ],
      "company_fit": "Prefers clarity and speed."
    },
    {
      "id": "Q078",
      "q": "Dealing with vague requirements?",
      "type": "beh",
      "a": "I write what I think I heard, make a 1-page wireframe, and ask, ‘What would make this wrong?’ That question gets fast, actionable feedback.",
      "category": "Stakeholders",
      "difficulty": "Beginner",
      "keywords": [
        "ambiguity",
        "wireframe",
        "feedback"
      ],
      "company_fit": "Efficient discovery style."
    },
    {
      "id": "Q079",
      "q": "How do you keep measure logic consistent across reports?",
      "type": "tech",
      "a": "Central shared datasets with certified measures. If a new report needs a variant, we add it centrally so the definition stays single-sourced.",
      "category": "Power BI - Governance",
      "difficulty": "Advanced",
      "keywords": [
        "shared dataset",
        "certified",
        "single source"
      ],
      "company_fit": "Prevents definition drift."
    },
    {
      "id": "Q080",
      "q": "You discover a risky dependency the day before launch.",
      "type": "beh",
      "a": "I raise it, propose a safe fallback, and document the gap. If we ship, we ship with eyes open and a date for the fix.",
      "category": "Delivery",
      "difficulty": "Intermediate",
      "keywords": [
        "risk",
        "fallback",
        "communication"
      ],
      "company_fit": "Transparent risk management."
    },
    {
      "id": "Q081",
      "q": "How do you teach DAX to new analysts?",
      "type": "beh",
      "a": "Start with context and CALCULATE, then hands-on examples with ‘why this changed’ moments. Small wins build intuition faster than theory.",
      "category": "Leadership",
      "difficulty": "Beginner",
      "keywords": [
        "teaching",
        "context",
        "CALCULATE"
      ],
      "company_fit": "Builds team capability."
    },
    {
      "id": "Q082",
      "q": "A time your solution failed and what you learned.",
      "type": "beh",
      "a": "A date logic edge case broke under a rare filter. I owned it, patched it same day, and added a test case to catch it in the future. It taught me to test the ‘weird’ filters people actually try.",
      "category": "Resilience",
      "difficulty": "Beginner",
      "keywords": [
        "failure",
        "edge case",
        "learning"
      ],
      "company_fit": "Accountability and improvement."
    },
    {
      "id": "Q083",
      "q": "Executive wants a single number: what do you provide around it?",
      "type": "tech",
      "a": "Number, small trend, and a one-line driver note. If it moved a lot, an icon links to the driver breakdown.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "KPI",
        "trend",
        "driver"
      ],
      "company_fit": "Minimalism with context."
    },
    {
      "id": "Q084",
      "q": "Handling many custom visuals in a report?",
      "type": "tech",
      "a": "Limit to where they’re essential. For everything else, use native visuals for stability and performance. Keep a short whitelist.",
      "category": "Power BI - Performance",
      "difficulty": "Intermediate",
      "keywords": [
        "custom visual",
        "whitelist",
        "stability"
      ],
      "company_fit": "Reliability over novelty."
    },
    {
      "id": "Q085",
      "q": "How do you maintain documentation without slowing down?",
      "type": "tech",
      "a": "Doc the model as you build: naming rules, a short lineage map, and a measure dictionary. Ten minutes per feature saves hours later.",
      "category": "Power BI - Governance",
      "difficulty": "Beginner",
      "keywords": [
        "documentation",
        "naming",
        "dictionary"
      ],
      "company_fit": "Lightweight, useful documentation."
    },
    {
      "id": "Q086",
      "q": "You inherit a messy workspace. First move?",
      "type": "beh",
      "a": "Inventory, tag owners, group by purpose, and archive safely. Then standardize names and certify the few datasets everyone should build on.",
      "category": "Leadership",
      "difficulty": "Intermediate",
      "keywords": [
        "cleanup",
        "certify",
        "naming"
      ],
      "company_fit": "Turns chaos into a platform."
    },
    {
      "id": "Q087",
      "q": "How would you use deployment pipelines well?",
      "type": "tech",
      "a": "I treat Development as the collaborative space where we experiment. Test should be stable with user acceptance testing scripts in place. Production is locked down tight. I automate the promotion process between environments with validation checks for Row-Level Security, parameters, and refresh settings to catch issues before they reach production.",
      "category": "Power BI - Platform",
      "difficulty": "Intermediate",
      "keywords": [
        "pipelines",
        "UAT",
        "automation"
      ],
      "company_fit": "Reduces release risk."
    },
    {
      "id": "Q088",
      "q": "Handling time intelligence across fiscal calendars?",
      "type": "tech",
      "a": "I create a robust date table that includes both calendar and fiscal columns. For scenarios where you need multiple date relationships, I use inactive relationships and activate them explicitly in measures with USERELATIONSHIP. This keeps the model clean while supporting both fiscal and calendar time intelligence calculations.",
      "category": "Power BI - DAX",
      "difficulty": "Advanced",
      "keywords": [
        "time intelligence",
        "fiscal",
        "USERELATIONSHIP"
      ],
      "company_fit": "Flexible while consistent."
    },
    {
      "id": "Q089",
      "q": "How do you keep mobile users in mind?",
      "type": "tech",
      "a": "Design a dedicated mobile layout with the top KPIs and one trend. Large tap targets and minimal slicers. If it’s not critical on the go, it’s not on mobile.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "mobile",
        "layout",
        "prioritization"
      ],
      "company_fit": "User-centric delivery."
    },
    {
      "id": "Q090",
      "q": "What’s your stance on pie charts?",
      "type": "tech",
      "a": "Under five categories max, otherwise it’s a bar. If precision matters, it’s a bar anyway.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "pie",
        "bar",
        "precision"
      ],
      "company_fit": "Clarity over habit."
    },
    {
      "id": "Q091",
      "q": "Argue for a semantic model to a skeptical team.",
      "type": "beh",
      "a": "One place to define revenue once and reuse forever. Fewer arguments, faster builds, easier audits. We optimize once and everyone benefits.",
      "category": "Leadership",
      "difficulty": "Intermediate",
      "keywords": [
        "semantic",
        "reuse",
        "audit"
      ],
      "company_fit": "Drives consistency at scale."
    },
    {
      "id": "Q092",
      "q": "What’s your personal performance checklist?",
      "type": "tech",
      "a": "I check several key areas: model size, number of visuals per page, use of DAX iterators, query folding status, refresh strategy, gateway health, and whether aggregations are being used effectively. Before any release, I run Performance Analyzer to identify bottlenecks and validate that everything performs well under realistic loads.",
      "category": "Power BI - Performance",
      "difficulty": "Intermediate",
      "keywords": [
        "checklist",
        "iterators",
        "folding"
      ],
      "company_fit": "Methodical performance culture."
    },
    {
      "id": "Q093",
      "q": "How do you structure drill-through pages?",
      "type": "tech",
      "a": "Keep the same visual language, show the immediate breakdown, and put the next ‘why’ one click away. Clear ‘Back’ button always.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "drill-through",
        "breakdown",
        "navigation"
      ],
      "company_fit": "Predictable, learnable UX."
    },
    {
      "id": "Q094",
      "q": "When do you prefer a matrix over a chart?",
      "type": "tech",
      "a": "When the question is ‘what’s the exact number by category/subcategory?’ Matrices shine for known lookups; charts for patterns.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "matrix",
        "lookup",
        "pattern"
      ],
      "company_fit": "Picks tools to match questions."
    },
    {
      "id": "Q095",
      "q": "How do you think about cost control?",
      "type": "tech",
      "a": "Smaller models, fewer visuals, smart refresh windows, and right-sized capacity. Metering usage tells us where to prune or invest.",
      "category": "Power BI - Platform",
      "difficulty": "Intermediate",
      "keywords": [
        "cost",
        "capacity",
        "usage"
      ],
      "company_fit": "Responsible stewardship of resources."
    },
    {
      "id": "Q096",
      "q": "What motivates you about BI work?",
      "type": "beh",
      "a": "Seeing a number change a decision. When a messy process becomes a clear dashboard and people stop arguing and start acting—that’s the fuel.",
      "category": "Motivation",
      "difficulty": "Beginner",
      "keywords": [
        "impact",
        "decisions",
        "clarity"
      ],
      "company_fit": "Outcome-oriented mindset."
    },
    {
      "id": "Q097",
      "q": "How do you measure your success on a project?",
      "type": "beh",
      "a": "Use, trust, and time saved. If the right people are using it weekly, quoting it in meetings, and the manual report died—that’s success.",
      "category": "Delivery",
      "difficulty": "Beginner",
      "keywords": [
        "adoption",
        "trust",
        "efficiency"
      ],
      "company_fit": "Measurable impact over output."
    },
    {
      "id": "Q098",
      "q": "Favorite way to explain refresh windows?",
      "type": "tech",
      "a": "Think of it like traffic cams: we snapshot most roads hourly, but the highway every 15 minutes. We refresh more where decisions are faster.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "refresh",
        "analogy",
        "latency"
      ],
      "company_fit": "Sets expectations cleanly."
    },
    {
      "id": "Q099",
      "q": "How do you keep new features from breaking old logic?",
      "type": "tech",
      "a": "Feature flags in measures, a small regression test sheet with core totals, and one certified dataset as the reference truth.",
      "category": "Power BI - Governance",
      "difficulty": "Intermediate",
      "keywords": [
        "regression",
        "certified",
        "flags"
      ],
      "company_fit": "Safe evolution over time."
    },
    {
      "id": "Q100",
      "q": "What soft skills make BI teams effective?",
      "type": "beh",
      "a": "Curiosity, plain-language communication, and the discipline to document decisions. The tech changes; those habits keep value flowing.",
      "category": "Culture",
      "difficulty": "Beginner",
      "keywords": [
        "communication",
        "documentation",
        "curiosity"
      ],
      "company_fit": "Matches AGR’s collaborative culture."
    },
    {
      "id": "Q101",
      "q": "Leadership: mentoring juniors on modeling.",
      "type": "beh",
      "a": "I pair on one small feature—naming, relationships, and a test. Then I let them teach it back to me next sprint. Teaching locks it in.",
      "category": "Leadership",
      "difficulty": "Beginner",
      "keywords": [
        "mentoring",
        "pairing",
        "teach back"
      ],
      "company_fit": "Grows capability inside the client."
    },
    {
      "id": "Q102",
      "q": "System design: disaster recovery for BI.",
      "type": "tech",
      "a": "I'd establish source data backups, maintain scripts for dataset re-deployment, ensure dataflows are reproducible, and keep Row-Level Security rules well-documented. The key is testing—I recommend running a small disaster recovery drill quarterly to verify everything actually works when you need it.",
      "category": "Power BI - Architecture",
      "difficulty": "Advanced",
      "keywords": [
        "DR",
        "backup",
        "scripted deploy"
      ],
      "company_fit": "Prepared for the bad day."
    },
    {
      "id": "Q103",
      "q": "Stress test: an exec challenges a KPI in a meeting.",
      "type": "beh",
      "a": "I show the definition link and last refresh time, then pull the driver breakdown. If it still looks off, I promise a same-day deep dive and follow up with the finding.",
      "category": "Resilience",
      "difficulty": "Intermediate",
      "keywords": [
        "challenge",
        "definition",
        "follow-up"
      ],
      "company_fit": "Calm, evidence-first communication."
    },
    {
      "id": "Q104",
      "q": "Ethics: pressure to inflate a number.",
      "type": "beh",
      "a": "I won’t. I’d offer the honest number with the best context and trend. Guardrails like certified datasets make this a non-discussion.",
      "category": "Ethics",
      "difficulty": "Intermediate",
      "keywords": [
        "integrity",
        "certified",
        "context"
      ],
      "company_fit": "Non-negotiable integrity."
    },
    {
      "id": "Q105",
      "q": "Communication: how do you name measures?",
      "type": "tech",
      "a": "Business-first, short, and consistent: ‘Revenue’, ‘Revenue YoY’, ‘Revenue Target %’. If the name needs a paragraph, the model needs a rethink.",
      "category": "Power BI - Governance",
      "difficulty": "Beginner",
      "keywords": [
        "naming",
        "consistency",
        "business terms"
      ],
      "company_fit": "Reduces confusion across teams."
    },
    {
      "id": "Q106",
      "q": "When would you use calculation groups?",
      "type": "tech",
      "a": "Calculation groups are perfect for standardizing time intelligence or formatting across many measures—you define the logic once and reuse it everywhere. I use them when I need consistent year-over-year, month-over-month, or other time calculations across dozens of measures. I keep them small, focused, and very well-documented since they can be complex for other developers to understand.",
      "category": "Power BI - DAX",
      "difficulty": "Advanced",
      "keywords": [
        "calculation groups",
        "time intelligence"
      ],
      "company_fit": "Powerful reuse with control."
    },
    {
      "id": "Q107",
      "q": "Design a KPI for service levels with a threshold.",
      "type": "tech",
      "a": "Single KPI card with current value, threshold color band, and a 12-week sparkline. A tooltip shows definition and recent incidents.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "KPI",
        "threshold",
        "sparkline"
      ],
      "company_fit": "Simple, decision-ready KPI."
    },
    {
      "id": "Q108",
      "q": "How do you make cross-report filters predictable?",
      "type": "tech",
      "a": "Keep conformed dimensions, avoid duplicate keys, and define cross-filtering rules explicitly. Test the common navigation paths users take.",
      "category": "Power BI - Modeling",
      "difficulty": "Advanced",
      "keywords": [
        "conformed",
        "cross-filter",
        "navigation"
      ],
      "company_fit": "Predictable user experience."
    },
    {
      "id": "Q109",
      "q": "Handling performance regressions after a feature add.",
      "type": "tech",
      "a": "Compare Analyzer traces pre/post, isolate the new measure or visual, and either cache, aggregate, or move logic upstream. If we can’t fix quickly, feature-flag it off.",
      "category": "Power BI - Performance",
      "difficulty": "Intermediate",
      "keywords": [
        "regression",
        "analyzer",
        "feature flag"
      ],
      "company_fit": "Protects reliability."
    },
    {
      "id": "Q110",
      "q": "Career: your favorite project and why.",
      "type": "beh",
      "a": "A cross-department model where definitions finally aligned. Watching meetings shift from debates to decisions was incredibly satisfying.",
      "category": "Career Narrative",
      "difficulty": "Beginner",
      "keywords": [
        "alignment",
        "impact",
        "definitions"
      ],
      "company_fit": "Focus on outcomes, not dashboards."
    },
    {
      "id": "Q111",
      "q": "System design: KPI certification process?",
      "type": "tech",
      "a": "Owner + steward approve definition, data checks pass, and we tag the measure in the shared dataset as certified. Changes require a quick review ticket.",
      "category": "Power BI - Governance",
      "difficulty": "Intermediate",
      "keywords": [
        "certification",
        "steward",
        "definition"
      ],
      "company_fit": "Prevents KPI drift."
    },
    {
      "id": "Q112",
      "q": "Explain VAR in DAX to a new analyst.",
      "type": "tech",
      "a": "VAR is a scratchpad for interim results—compute once, reuse. It makes code faster and easier to read. Most of my complex measures start with 2–3 VAR lines.",
      "category": "Power BI - DAX",
      "difficulty": "Beginner",
      "keywords": [
        "VAR",
        "readability",
        "performance"
      ],
      "company_fit": "Sets good coding habits."
    },
    {
      "id": "Q113",
      "q": "Stakeholder empathy: saying ‘no’ without friction.",
      "type": "beh",
      "a": "I reframe to the goal: ‘If the goal is X, here’s a faster, safer way to see it.’ Then I show it. People say yes to working solutions.",
      "category": "Stakeholders",
      "difficulty": "Beginner",
      "keywords": [
        "empathy",
        "reframe",
        "prototype"
      ],
      "company_fit": "Collaborative problem-solving."
    },
    {
      "id": "Q114",
      "q": "How do you keep slicers from killing performance?",
      "type": "tech",
      "a": "I use slicers only on low-cardinality dimensions like region or category. For common filter combinations, I'll replace slicers with buttons or bookmarks instead. When possible, I pre-aggregate data at the grain users actually need. The goal is less interactive chrome and more direct answers.",
      "category": "Power BI - Performance",
      "difficulty": "Intermediate",
      "keywords": [
        "slicer",
        "cardinality",
        "bookmarks"
      ],
      "company_fit": "Performance-conscious UX."
    },
    {
      "id": "Q115",
      "q": "When do you prefer a bookmark over a new page?",
      "type": "tech",
      "a": "When you’re toggling between a couple of curated views of the same data. New page if it’s a different question or audience.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "bookmark",
        "navigation",
        "audience"
      ],
      "company_fit": "Keeps reports tidy and learnable."
    },
    {
      "id": "Q116",
      "q": "Soft skills: your feedback style.",
      "type": "beh",
      "a": "Specific, kind, and immediate. I show one suggestion with why it matters and offer to pair for ten minutes to fix it together.",
      "category": "Culture",
      "difficulty": "Beginner",
      "keywords": [
        "feedback",
        "specific",
        "pairing"
      ],
      "company_fit": "Psychological safety with high standards."
    },
    {
      "id": "Q117",
      "q": "Stress: production refresh fails on a Monday morning.",
      "type": "beh",
      "a": "Communicate status in 10 minutes, roll back if needed, and ship a partial set if it’s clean. Root cause after lunch, not during the fire.",
      "category": "Resilience",
      "difficulty": "Intermediate",
      "keywords": [
        "incident",
        "rollback",
        "communication"
      ],
      "company_fit": "Calm incident playbook."
    },
    {
      "id": "Q118",
      "q": "Design: geospatial—choropleth vs. symbol map?",
      "type": "tech",
      "a": "Choropleth for rate/ratio by region; symbol for counts with overlapping points. If precision matters, add a table on drill-through.",
      "category": "Power BI - Design",
      "difficulty": "Intermediate",
      "keywords": [
        "map",
        "choropleth",
        "symbol"
      ],
      "company_fit": "Right visual for the story."
    },
    {
      "id": "Q119",
      "q": "How do you keep CI/CD realistic for BI?",
      "type": "tech",
      "a": "Automate what’s stable (promotion checks, refresh params) and keep human review for definitions and visual UX. Hybrid beats brittle.",
      "category": "Power BI - Platform",
      "difficulty": "Advanced",
      "keywords": [
        "CI/CD",
        "checks",
        "review"
      ],
      "company_fit": "Pragmatic automation."
    },
    {
      "id": "Q120",
      "q": "Career: what do teammates say about your style?",
      "type": "beh",
      "a": "Calm, clear, and dependable. If I say Friday, it’s Friday, and if something risks that, I’ll tell you early.",
      "category": "Culture",
      "difficulty": "Beginner",
      "keywords": [
        "reliability",
        "communication"
      ],
      "company_fit": "Dependability in client settings."
    },
    {
      "id": "Q121",
      "q": "Design: what’s your default color strategy?",
      "type": "tech",
      "a": "Neutral base, one highlight color for attention, and accessible contrasts. I avoid rainbow palettes unless the data demands it.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "color",
        "contrast",
        "highlight"
      ],
      "company_fit": "Professional, accessible visuals."
    },
    {
      "id": "Q122",
      "q": "Modeling: calendar table must-haves?",
      "type": "tech",
      "a": "Continuous dates, fiscal columns, holiday flags, and week starts that match the business. It’s the backbone of time intelligence.",
      "category": "Power BI - Modeling",
      "difficulty": "Beginner",
      "keywords": [
        "calendar",
        "fiscal",
        "holiday"
      ],
      "company_fit": "Prevents time-related headaches."
    },
    {
      "id": "Q123",
      "q": "Governance: naming standards example.",
      "type": "tech",
      "a": "Dimensions as Dim*, facts as Fact*, measures in PascalCase with clear suffixes: YoY, MoM, %Target. It keeps teams synchronized.",
      "category": "Power BI - Governance",
      "difficulty": "Beginner",
      "keywords": [
        "naming",
        "dim/fact",
        "suffixes"
      ],
      "company_fit": "Consistency across teams."
    },
    {
      "id": "Q124",
      "q": "When to use parameters in Power Query?",
      "type": "tech",
      "a": "For environment paths, date ranges, and toggles that should compile differently in Dev vs. Prod. Parameters + folding = fast pipeline.",
      "category": "Power BI - ETL",
      "difficulty": "Intermediate",
      "keywords": [
        "parameters",
        "environments",
        "folding"
      ],
      "company_fit": "Safer promotions between stages."
    },
    {
      "id": "Q125",
      "q": "Explaining margin of error to business users.",
      "type": "tech",
      "a": "I say, ‘This number is likely within this small band.’ Then I show if that band changes the decision. If not, we move on.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "uncertainty",
        "decision",
        "band"
      ],
      "company_fit": "Focus on decision-usefulness."
    },
    {
      "id": "Q126",
      "q": "How do you craft a crisp executive update?",
      "type": "beh",
      "a": "One slide: what changed, why, and what we’re doing next. Links to drill for anyone who wants more.",
      "category": "Leadership",
      "difficulty": "Beginner",
      "keywords": [
        "update",
        "why",
        "next"
      ],
      "company_fit": "Time-respectful communication."
    },
    {
      "id": "Q127",
      "q": "Handling KPI definitions that differ by region.",
      "type": "tech",
      "a": "Lock a global definition, then add a sanctioned regional variant with a clear label. Users can compare apples to apples—and choose the local view when needed.",
      "category": "Power BI - Governance",
      "difficulty": "Advanced",
      "keywords": [
        "KPI",
        "global vs local",
        "labeling"
      ],
      "company_fit": "Avoids hidden definition drift."
    },
    {
      "id": "Q128",
      "q": "Design: what belongs in a tooltip vs. page?",
      "type": "tech",
      "a": "Definitions, recency, and tiny breakdowns belong in tooltips. Anything users need to compare side-by-side belongs on a page.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "tooltip",
        "page",
        "comparison"
      ],
      "company_fit": "Clean, purposeful layouts."
    },
    {
      "id": "Q129",
      "q": "When would you switch to a paginated export?",
      "type": "tech",
      "a": "Regulatory layouts, exact pagination, and mail-merge-style distribution. If someone prints it weekly, it’s a paginated candidate.",
      "category": "Power BI - Platform",
      "difficulty": "Intermediate",
      "keywords": [
        "paginated",
        "print",
        "regulatory"
      ],
      "company_fit": "Meets real operational needs."
    },
    {
      "id": "Q130",
      "q": "Fabric OneLake value, in a sentence.",
      "type": "tech",
      "a": "One data fabric, many engines—store once, analyze many ways without copy-fest.",
      "category": "Power BI - Architecture",
      "difficulty": "Intermediate",
      "keywords": [
        "OneLake",
        "unification",
        "reuse"
      ],
      "company_fit": "Reduces duplication and data drift."
    },
    {
      "id": "Q131",
      "q": "Behavioral: a time you won trust with a skeptic.",
      "type": "beh",
      "a": "I shipped a small, un-flashy page that answered their exact weekly question and fixed two long-standing data nits. Consistency over a month flipped the relationship.",
      "category": "Stakeholders",
      "difficulty": "Intermediate",
      "keywords": [
        "trust",
        "consistency",
        "small wins"
      ],
      "company_fit": "Earns adoption through reliability."
    },
    {
      "id": "Q132",
      "q": "How do you structure measure folders?",
      "type": "tech",
      "a": "By domain (Revenue, Cost), then by pattern (Base, Variance, Ratios). It helps new folks find the right building blocks fast.",
      "category": "Power BI - Governance",
      "difficulty": "Beginner",
      "keywords": [
        "folders",
        "base measures",
        "ratios"
      ],
      "company_fit": "Onboards people faster."
    },
    {
      "id": "Q133",
      "q": "Explain KEEPFILTERS in plain English.",
      "type": "tech",
      "a": "When CALCULATE adds a new filter, KEEPFILTERS says ‘don’t blow away the existing filter—combine them.’ It protects intent in layered logic.",
      "category": "Power BI - DAX",
      "difficulty": "Advanced",
      "keywords": [
        "KEEPFILTERS",
        "CALCULATE",
        "layering"
      ],
      "company_fit": "Advanced DAX fluency."
    },
    {
      "id": "Q134",
      "q": "Designing for color-blind users?",
      "type": "tech",
      "a": "Avoid red/green contrasts, use texture or icons, and rely on labels. I sanity-check with a simulator before shipping.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "accessibility",
        "color-blind",
        "labels"
      ],
      "company_fit": "Inclusive analytics."
    },
    {
      "id": "Q135",
      "q": "How do you pick default slicer values?",
      "type": "tech",
      "a": "Last complete period or the period leadership reviews weekly. Defaults should match the most common decision window.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "defaults",
        "period",
        "leadership"
      ],
      "company_fit": "User-centered choices."
    },
    {
      "id": "Q136",
      "q": "What do you automate first in BI ops?",
      "type": "tech",
      "a": "Refresh checks, failure alerts with context, and promotion pre-checks. The boring stuff buys real engineering time.",
      "category": "Power BI - Platform",
      "difficulty": "Intermediate",
      "keywords": [
        "automation",
        "alerts",
        "pre-checks"
      ],
      "company_fit": "Ops maturity from day one."
    },
    {
      "id": "Q137",
      "q": "How do you prevent ‘filter traps’ users fall into?",
      "type": "tech",
      "a": "Limit exotic slicers, add reset buttons, and show active filters prominently. Design for the likely mistakes.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "filters",
        "reset",
        "mistakes"
      ],
      "company_fit": "Reduces support load."
    },
    {
      "id": "Q138",
      "q": "Explaining YoY to a non-analyst.",
      "type": "tech",
      "a": "‘Same month last year vs this year.’ I show the change and the driver that moved most. If seasonality matters, I add a 12-month rolling line.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "YoY",
        "seasonality",
        "rolling"
      ],
      "company_fit": "Plain-language analytics."
    },
    {
      "id": "Q139",
      "q": "How do you handle KPI targets?",
      "type": "tech",
      "a": "Separate target table by period/segment and a simple target % measure. Visuals show actual, target, and variance with consistent formatting.",
      "category": "Power BI - Modeling",
      "difficulty": "Intermediate",
      "keywords": [
        "targets",
        "variance",
        "formatting"
      ],
      "company_fit": "Comparable metrics across teams."
    },
    {
      "id": "Q140",
      "q": "What team habits create great BI outcomes?",
      "type": "beh",
      "a": "Short demos, a shared definition library, and a bias toward thin reports on shared models. It compounds fast.",
      "category": "Culture",
      "difficulty": "Beginner",
      "keywords": [
        "demo",
        "library",
        "thin"
      ],
      "company_fit": "Institutionalizes good practice."
    },
    {
      "id": "Q141",
      "q": "Career: how do you choose what to learn next?",
      "type": "beh",
      "a": "Follow the pain. If refresh failures or lineage confusion show up, I go deep there. It keeps learning practical.",
      "category": "Growth",
      "difficulty": "Beginner",
      "keywords": [
        "learning",
        "pain-driven",
        "practical"
      ],
      "company_fit": "Learns what moves the needle."
    },
    {
      "id": "Q142",
      "q": "System design: multi-tenant row security?",
      "type": "tech",
      "a": "Tenant table relates to facts; users map to tenants. Dynamic RLS filters rows by user’s tenant list. Keep admin bypass roles for testing.",
      "category": "Power BI - Security",
      "difficulty": "Advanced",
      "keywords": [
        "multi-tenant",
        "dynamic RLS",
        "bypass"
      ],
      "company_fit": "Secure by architecture."
    },
    {
      "id": "Q143",
      "q": "How do you deal with flaky upstream sources?",
      "type": "tech",
      "a": "Stage with retries and timeouts, cache the last good snapshot, and surface a clear 'data as of' tile so users know what they’re seeing. If it’s down, I say so and show the impact scope.",
      "category": "Power BI - Quality",
      "difficulty": "Intermediate",
      "keywords": [
        "upstream",
        "retry",
        "snapshot",
        "recency"
      ],
      "company_fit": "Keeps stakeholders informed and calm under outages."
    },
    {
      "id": "Q144",
      "q": "When do you favor Direct Lake / import over DirectQuery?",
      "type": "tech",
      "a": "If most questions are aggregations on big history, import/Direct Lake wins for speed; I reserve DirectQuery for narrow, hot paths where seconds matter.",
      "category": "Power BI - Architecture",
      "difficulty": "Advanced",
      "keywords": [
        "Direct Lake",
        "Import",
        "DirectQuery",
        "latency"
      ],
      "company_fit": "Optimizes for both speed and practicality."
    },
    {
      "id": "Q145",
      "q": "Explain TREATAS like I’m a PM.",
      "type": "tech",
      "a": "It’s a way to apply filters from a table that isn’t physically related—like saying ‘treat this list as if it were a real relationship’ to keep logic clean.",
      "category": "Power BI - DAX",
      "difficulty": "Advanced",
      "keywords": [
        "TREATAS",
        "filters",
        "virtual relationship"
      ],
      "company_fit": "Communicates advanced ideas simply."
    },
    {
      "id": "Q146",
      "q": "How do you keep bookmarks from confusing users?",
      "type": "tech",
      "a": "Name them in business terms, limit to a few curated states, and pair with a visible ‘Reset’ button. If it’s too many clicks, it’s too many bookmarks.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "bookmarks",
        "reset",
        "curation"
      ],
      "company_fit": "Prefers learnable, low-friction UX."
    },
    {
      "id": "Q147",
      "q": "Tell me a time you simplified a busy report.",
      "type": "beh",
      "a": "I trimmed visuals to under ten, moved detail to a drill-through, and used a single highlight color. Adoption spiked because people finally saw the story.",
      "category": "Delivery",
      "difficulty": "Beginner",
      "keywords": [
        "simplify",
        "adoption",
        "drill-through"
      ],
      "company_fit": "Clarity drives outcomes."
    },
    {
      "id": "Q148",
      "q": "How do you plan a KPI definition workshop?",
      "type": "beh",
      "a": "Bring sample data, draft definitions, and three ‘gotcha’ cases; leave with a one-pager and an owner. We test the definition live to lock trust.",
      "category": "Stakeholders",
      "difficulty": "Intermediate",
      "keywords": [
        "workshop",
        "definitions",
        "ownership"
      ],
      "company_fit": "Facilitates alignment quickly."
    },
    {
      "id": "Q149",
      "q": "When do you use field parameters?",
      "type": "tech",
      "a": "To let users switch measures or dimensions without exploding the page count. I pre-curate options to keep the story coherent.",
      "category": "Power BI - Design",
      "difficulty": "Intermediate",
      "keywords": [
        "field parameters",
        "interactivity",
        "curation"
      ],
      "company_fit": "Empowers self-service safely."
    },
    {
      "id": "Q150",
      "q": "Preventing duplicate business logic across reports?",
      "type": "tech",
      "a": "Shared certified datasets and a measure catalog page. New logic lands centrally, not in a forked PBIX.",
      "category": "Power BI - Governance",
      "difficulty": "Advanced",
      "keywords": [
        "duplication",
        "certified",
        "catalog"
      ],
      "company_fit": "One source of truth in practice."
    },
    {
      "id": "Q151",
      "q": "How do you pick default page layout?",
      "type": "tech",
      "a": "Z-pattern layout: headline KPI, trend, then drivers. Defaults match the weekly leadership view so it ‘just works’.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "layout",
        "Z-pattern",
        "defaults"
      ],
      "company_fit": "Designs for decision speed."
    },
    {
      "id": "Q152",
      "q": "Handling late-arriving facts without confusion?",
      "type": "tech",
      "a": "Backfill with effective dating and expose a small ‘data completeness’ indicator by period so no one overreacts to partial weeks.",
      "category": "Power BI - ETL",
      "difficulty": "Advanced",
      "keywords": [
        "late arriving",
        "effective dating",
        "completeness"
      ],
      "company_fit": "Honest storytelling around data."
    },
    {
      "id": "Q153",
      "q": "How do you keep model relationships healthy?",
      "type": "tech",
      "a": "Star shape, minimal bi-directional, and explicit bridge tables. If the diagram looks like spaghetti, I refactor.",
      "category": "Power BI - Modeling",
      "difficulty": "Intermediate",
      "keywords": [
        "star schema",
        "bridge",
        "bi-directional"
      ],
      "company_fit": "Favors maintainable models."
    },
    {
      "id": "Q154",
      "q": "Non-technical: explain incremental refresh.",
      "type": "tech",
      "a": "We update only the recent slices instead of reloading history every time—like updating this month’s pages, not reprinting the whole book.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "incremental",
        "analogy",
        "partitions"
      ],
      "company_fit": "Translates tech into outcomes."
    },
    {
      "id": "Q155",
      "q": "You notice a leader quoting an outdated KPI.",
      "type": "beh",
      "a": "I thank them for using the metric, share the updated definition link, and show the small delta. Then I ensure their team’s app uses the certified dataset.",
      "category": "Ethics",
      "difficulty": "Beginner",
      "keywords": [
        "outdated",
        "definition",
        "certified"
      ],
      "company_fit": "Corrects gently, safeguards truth."
    },
    {
      "id": "Q156",
      "q": "Your go-to DAX pattern for % of total?",
      "type": "tech",
      "a": "DIVIDE([Metric], CALCULATE([Metric], ALL(DimCategory))). I pair it with a toggle for row/column totals so behavior is explicit.",
      "category": "Power BI - DAX",
      "difficulty": "Intermediate",
      "keywords": [
        "percent of total",
        "ALL",
        "DIVIDE"
      ],
      "company_fit": "Reusable patterns reduce bugs."
    },
    {
      "id": "Q157",
      "q": "How do you avoid time-intelligence pitfalls?",
      "type": "tech",
      "a": "Use a proper date table, mark as date, and stick to one active relationship. USERELATIONSHIP only when needed and documented.",
      "category": "Power BI - DAX",
      "difficulty": "Intermediate",
      "keywords": [
        "time intelligence",
        "date table",
        "USERELATIONSHIP"
      ],
      "company_fit": "Disciplined foundations, fewer surprises."
    },
    {
      "id": "Q158",
      "q": "Handling executives who prefer slides over live reports?",
      "type": "beh",
      "a": "I export a tight KPI slide with a link to the live driver page. They get the headline; curious folks can click into the why.",
      "category": "Stakeholders",
      "difficulty": "Beginner",
      "keywords": [
        "slides",
        "link-out",
        "drivers"
      ],
      "company_fit": "Meets people where they are."
    },
    {
      "id": "Q159",
      "q": "How do you enforce least-privilege access?",
      "type": "tech",
      "a": "AAD groups, role-based workspace access, and dynamic RLS. Quarterly access reviews keep it honest.",
      "category": "Power BI - Security",
      "difficulty": "Advanced",
      "keywords": [
        "AAD",
        "RLS",
        "access review"
      ],
      "company_fit": "Security as a habit, not a sprint."
    },
    {
      "id": "Q160",
      "q": "Explain query folding breakage to a dev peer.",
      "type": "tech",
      "a": "Some transforms stop the pushdown; after that, everything runs client-side. Keep filters/joins early and non-foldable steps late—or move them upstream.",
      "category": "Power BI - ETL",
      "difficulty": "Intermediate",
      "keywords": [
        "folding",
        "pushdown",
        "ordering"
      ],
      "company_fit": "Performance-aware transformations."
    },
    {
      "id": "Q161",
      "q": "How do you structure a post-mortem after an outage?",
      "type": "beh",
      "a": "Timeline, impact, root cause, and two concrete prevention steps. Short, blameless, and shared.",
      "category": "Resilience",
      "difficulty": "Beginner",
      "keywords": [
        "post-mortem",
        "root cause",
        "prevention"
      ],
      "company_fit": "Learns fast without finger-pointing."
    },
    {
      "id": "Q162",
      "q": "Favorite small usability win?",
      "type": "tech",
      "a": "An ‘Active Filters’ strip and a ‘Reset View’ button. It saves users—and support—a ton of time.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "active filters",
        "reset",
        "usability"
      ],
      "company_fit": "Little touches, big impact."
    },
    {
      "id": "Q163",
      "q": "How do you avoid row context traps in measures?",
      "type": "tech",
      "a": "Use iterators intentionally and prefer filter context via CALCULATE. If I need row context, I’m explicit with SUMX over a small table.",
      "category": "Power BI - DAX",
      "difficulty": "Advanced",
      "keywords": [
        "row context",
        "iterators",
        "CALCULATE"
      ],
      "company_fit": "Precision in advanced DAX."
    },
    {
      "id": "Q164",
      "q": "A time you improved refresh reliability quickly.",
      "type": "beh",
      "a": "I split a single heavy pipeline into staged dataflows, enabled incremental, and staggered schedules. Failures vanished and gateway load normalized.",
      "category": "Delivery",
      "difficulty": "Intermediate",
      "keywords": [
        "staging",
        "incremental",
        "scheduling"
      ],
      "company_fit": "Practical engineering under time pressure."
    },
    {
      "id": "Q166",
      "q": "Designing a landing page for an app?",
      "type": "tech",
      "a": "Hero KPIs, three curated bookmarks (Exec, Ops, Region), and ‘What’s New’ notes. It orients users in seconds.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "landing",
        "bookmarks",
        "orientation"
      ],
      "company_fit": "Faster time-to-value."
    },
    {
      "id": "Q167",
      "q": "How do you keep exports aligned with dashboards?",
      "type": "tech",
      "a": "Paginated reports pull from the same dataset and definitions. One truth, two formats.",
      "category": "Power BI - Platform",
      "difficulty": "Intermediate",
      "keywords": [
        "paginated",
        "dataset",
        "alignment"
      ],
      "company_fit": "Consistency across channels."
    },
    {
      "id": "Q168",
      "q": "Explain ALLSELECTED vs. ALL to a teammate.",
      "type": "tech",
      "a": "ALL wipes filters; ALLSELECTED respects external context like page slicers. I pick based on whether comparisons should honor current selections.",
      "category": "Power BI - DAX",
      "difficulty": "Advanced",
      "keywords": [
        "ALLSELECTED",
        "ALL",
        "context"
      ],
      "company_fit": "Nuanced DAX choices explained clearly."
    },
    {
      "id": "Q169",
      "q": "Scaling governance with many teams?",
      "type": "tech",
      "a": "Light standards, certified datasets, and office hours. Tooling helps, but conversation and curation keep it human.",
      "category": "Power BI - Governance",
      "difficulty": "Advanced",
      "keywords": [
        "standards",
        "certification",
        "office hours"
      ],
      "company_fit": "Pragmatic, people-centered governance."
    },
    {
      "id": "Q170",
      "q": "Handling mixed time grains (daily vs. monthly)?",
      "type": "tech",
      "a": "Normalize to the lowest useful grain and provide roll-ups. I label charts clearly to avoid misreads.",
      "category": "Power BI - Modeling",
      "difficulty": "Intermediate",
      "keywords": [
        "grain",
        "roll-up",
        "labeling"
      ],
      "company_fit": "Prevents subtle accuracy issues."
    },
    {
      "id": "Q171",
      "q": "Your tactic for explaining data caveats to execs.",
      "type": "beh",
      "a": "One line at the top: ‘Early read; missing X may swing ±Y%.’ Then I show the decision impact if Y happens.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "caveat",
        "impact",
        "plain English"
      ],
      "company_fit": "Honest, decision-focused framing."
    },
    {
      "id": "Q172",
      "q": "When do you archive vs. delete artifacts?",
      "type": "tech",
      "a": "Archive with owner/tag when usage drops to zero; delete only after a quiet period and notice. I keep a lightweight changelog.",
      "category": "Power BI - Governance",
      "difficulty": "Beginner",
      "keywords": [
        "archive",
        "delete",
        "usage"
      ],
      "company_fit": "Respectful change management."
    },
    {
      "id": "Q173",
      "q": "Explain semantic models to non-BI teams.",
      "type": "tech",
      "a": "They’re curated data + definitions in one place so everyone uses the same math. Build once, reuse everywhere.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "semantic model",
        "reuse",
        "definitions"
      ],
      "company_fit": "Sets foundations for scale."
    },
    {
      "id": "Q174",
      "q": "How do you keep visual contrast accessible?",
      "type": "tech",
      "a": "Check contrast ratios, use neutral backgrounds, and reserve color for meaning. If color is removed, the chart should still make sense.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "contrast",
        "accessibility",
        "meaningful color"
      ],
      "company_fit": "Inclusive, standards-minded design."
    },
    {
      "id": "Q175",
      "q": "Balancing innovation vs. stability on a platform?",
      "type": "beh",
      "a": "Sandbox first, pilot with friendly users, then promote with a rollback plan. Excitement without risk to production.",
      "category": "Leadership",
      "difficulty": "Intermediate",
      "keywords": [
        "pilot",
        "rollback",
        "sandbox"
      ],
      "company_fit": "Change with control."
    },
    {
      "id": "Q176",
      "q": "Fabric shortcuts: when are they useful?",
      "type": "tech",
      "a": "To reference data without copying it—cleaner lineage, less drift. I still govern access with groups and labels.",
      "category": "Power BI - Architecture",
      "difficulty": "Advanced",
      "keywords": [
        "Fabric",
        "shortcuts",
        "lineage"
      ],
      "company_fit": "Modern patterns with governance."
    },
    {
      "id": "Q177",
      "q": "What’s your rule of thumb for slicers?",
      "type": "tech",
      "a": "Fewer, clearer, and business-first. If a slicer causes confusion, I replace it with buttons or a curated view.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "slicers",
        "curation",
        "buttons"
      ],
      "company_fit": "Reduces cognitive load."
    },
    {
      "id": "Q178",
      "q": "Handling KPI drift over time?",
      "type": "tech",
      "a": "Version KPI definitions and show the active version in the tooltip. Changes go through a small steward review.",
      "category": "Power BI - Governance",
      "difficulty": "Advanced",
      "keywords": [
        "versioning",
        "steward",
        "tooltip"
      ],
      "company_fit": "Trust through traceability."
    },
    {
      "id": "Q179",
      "q": "A time you turned around a skeptic quickly.",
      "type": "beh",
      "a": "Gave them a two-minute driver page with their exact filters pre-set. The first meeting after, they asked for the link.",
      "category": "Stakeholders",
      "difficulty": "Beginner",
      "keywords": [
        "skeptic",
        "personalization",
        "drivers"
      ],
      "company_fit": "Builds advocacy with small wins."
    },
    {
      "id": "Q180",
      "q": "How do you validate DAX without overfitting?",
      "type": "tech",
      "a": "Test against source totals at multiple grains, then throw weird filters at it. If it holds, it’s ready.",
      "category": "Power BI - Quality",
      "difficulty": "Intermediate",
      "keywords": [
        "validation",
        "grains",
        "edge cases"
      ],
      "company_fit": "Prevents fragile logic from shipping."
    },
    {
      "id": "Q181",
      "q": "Explain row vs. filter context in one breath.",
      "type": "tech",
      "a": "Row context is ‘this row at a time’; filter context is ‘the current slice of the data.’ CALCULATE lets me change that slice on purpose.",
      "category": "Power BI - DAX",
      "difficulty": "Beginner",
      "keywords": [
        "row context",
        "filter context",
        "CALCULATE"
      ],
      "company_fit": "Makes core concepts approachable."
    },
    {
      "id": "Q182",
      "q": "Mobile-first: what do you cut?",
      "type": "tech",
      "a": "All but the top KPIs and one trend; fewer slicers, bigger tap targets. If it’s nice-to-have, it lives on desktop.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "mobile",
        "prioritization",
        "tappable"
      ],
      "company_fit": "Design restraint for usability."
    },
    {
      "id": "Q183",
      "q": "Resilience: your on-call BI posture?",
      "type": "beh",
      "a": "Clear runbooks, alerts with context, and a ‘first clean data’ mindset. I fix the fire, then fix the cause.",
      "category": "Resilience",
      "difficulty": "Intermediate",
      "keywords": [
        "runbook",
        "alerts",
        "stabilize"
      ],
      "company_fit": "Reliable production behavior."
    },
    {
      "id": "Q184",
      "q": "How do you split models by domain?",
      "type": "tech",
      "a": "Core conformed dims in a shared dataset; domain-specific facts in separate models that point back. It keeps ownership clear and reuse high.",
      "category": "Power BI - Architecture",
      "difficulty": "Advanced",
      "keywords": [
        "conformed dimensions",
        "domain",
        "reuse"
      ],
      "company_fit": "Modular architecture for scale."
    },
    {
      "id": "Q185",
      "q": "Favorite small DAX readability tip?",
      "type": "tech",
      "a": "Use VARs with meaningful names and align columns/parentheses. Future me is a stakeholder too.",
      "category": "Power BI - DAX",
      "difficulty": "Beginner",
      "keywords": [
        "readability",
        "VAR",
        "style"
      ],
      "company_fit": "Craftsmanship that reduces errors."
    },
    {
      "id": "Q186",
      "q": "Handling nulls in critical metrics?",
      "type": "tech",
      "a": "Choose: show as zero, blank, or ‘N/A’—but be consistent and documented. I prefer blanks with an info tooltip.",
      "category": "Power BI - Quality",
      "difficulty": "Beginner",
      "keywords": [
        "nulls",
        "consistency",
        "tooltip"
      ],
      "company_fit": "Avoids silent misinterpretations."
    },
    {
      "id": "Q187",
      "q": "Communicating model limitations tactfully.",
      "type": "beh",
      "a": "I say what the model’s great at, what it isn’t, and the next best step. It keeps trust without overselling.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "limitations",
        "framing",
        "next step"
      ],
      "company_fit": "Honest expectations management."
    },
    {
      "id": "Q188",
      "q": "When do you add a data dictionary page?",
      "type": "tech",
      "a": "Any multi-team model. It lists KPIs, definitions, and owners. It’s the cheapest support ticket I’ll never get.",
      "category": "Power BI - Governance",
      "difficulty": "Beginner",
      "keywords": [
        "dictionary",
        "definitions",
        "owners"
      ],
      "company_fit": "Documentation that users actually read."
    },
    {
      "id": "Q189",
      "q": "How do you keep app navigation intuitive?",
      "type": "tech",
      "a": "Group pages by question, not by data source, and keep names in business language. Breadcrumbs help people not get lost.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "navigation",
        "naming",
        "breadcrumbs"
      ],
      "company_fit": "Business-first framing."
    },
    {
      "id": "Q190",
      "q": "Ethics: asked to hide an inconvenient outlier.",
      "type": "beh",
      "a": "I won’t hide it; I’ll annotate it—show why it happened and its impact. If it’s a data error, we fix; if it’s real, we explain.",
      "category": "Ethics",
      "difficulty": "Intermediate",
      "keywords": [
        "outlier",
        "annotation",
        "transparency"
      ],
      "company_fit": "Integrity under pressure."
    },
    {
      "id": "Q191",
      "q": "How do you detect unused columns/measures?",
      "type": "tech",
      "a": "Usage metrics and a quick scan with external tools. I prune anything unused for two releases.",
      "category": "Power BI - Performance",
      "difficulty": "Intermediate",
      "keywords": [
        "pruning",
        "usage metrics",
        "cleanup"
      ],
      "company_fit": "Keeps models lean and fast."
    },
    {
      "id": "Q192",
      "q": "Design: tables vs. matrices—your rule?",
      "type": "tech",
      "a": "Table for simple rows; matrix for pivots and hierarchies. If users squint, I picked the wrong one.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "table",
        "matrix",
        "hierarchy"
      ],
      "company_fit": "Chooses clarity every time."
    },
    {
      "id": "Q193",
      "q": "Leadership: getting buy-in for standards.",
      "type": "beh",
      "a": "Ship a small win using the standard, show time saved, then invite teams to copy. Winning examples beat memos.",
      "category": "Leadership",
      "difficulty": "Intermediate",
      "keywords": [
        "standards",
        "buy-in",
        "example"
      ],
      "company_fit": "Consensus through proof, not edict."
    },
    {
      "id": "Q194",
      "q": "How do you model targets vs. actuals cleanly?",
      "type": "tech",
      "a": "Separate target table keyed by time/segment and consistent variance measures. Visuals use the same axis for honest comparisons.",
      "category": "Power BI - Modeling",
      "difficulty": "Intermediate",
      "keywords": [
        "targets",
        "variance",
        "axis"
      ],
      "company_fit": "Comparability by design."
    },
    {
      "id": "Q195",
      "q": "Stress: a leader wants a new KPI hours before a board readout.",
      "type": "beh",
      "a": "I offer a labeled ‘preview’ tile with definition and caveat, then commit to hardening post-meeting. They get signal without risking trust.",
      "category": "Resilience",
      "difficulty": "Intermediate",
      "keywords": [
        "preview",
        "caveat",
        "hardening"
      ],
      "company_fit": "Balances urgency and integrity."
    },
    {
      "id": "Q196",
      "q": "Explain aggregations vs. summary tables to a dev.",
      "type": "tech",
      "a": "Aggregations are engine-aware summary tables the model can hit first; they auto-fallback to detail. Hand-rolled summaries don’t get that magic.",
      "category": "Power BI - Performance",
      "difficulty": "Advanced",
      "keywords": [
        "aggregations",
        "fallback",
        "engine"
      ],
      "company_fit": "Uses platform strengths smartly."
    },
    {
      "id": "Q197",
      "q": "Your simplest adoption lever post-launch?",
      "type": "tech",
      "a": "Pin the app for target groups and open with the KPI page. A 60-second loom video closes the loop.",
      "category": "Delivery",
      "difficulty": "Beginner",
      "keywords": [
        "adoption",
        "pin",
        "orientation video"
      ],
      "company_fit": "Drives real usage, not just delivery."
    },
    {
      "id": "Q198",
      "q": "Career: how does econ shape your BI style?",
      "type": "beh",
      "a": "I default to opportunity cost thinking and clear causal stories. Dashboards answer ‘what changed and why’—not just ‘what’.",
      "category": "Career Narrative",
      "difficulty": "Beginner",
      "keywords": [
        "economics",
        "causality",
        "story"
      ],
      "company_fit": "Decision-theory lens matches transformation work."
    },
    {
      "id": "Q199",
      "q": "Communication: what do you put in KPI tooltips?",
      "type": "tech",
      "a": "Definition, refresh time, and the top driver. If someone asks it weekly, it belongs there.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "tooltip",
        "definition",
        "driver"
      ],
      "company_fit": "Just-in-time context reduces confusion."
    },
    {
      "id": "Q200",
      "q": "Flashcard: 7 dashboard principles in one breath.",
      "type": "tech",
      "a": "Clarity, context, contrast, consistency, composition, color, cognition—say more with less and guide the eye to the decision.",
      "category": "Flashcard",
      "difficulty": "Beginner",
      "keywords": [
        "principles",
        "design",
        "flashcard"
      ],
      "company_fit": "Shared language for design quality."
    },
    {
      "id": "Q201",
      "q": "Flashcard: Power BI performance checklist (7).",
      "type": "tech",
      "a": "Model size, visual count, DAX iterators, folding, refresh strategy, gateway health, aggregations—check these before shipping.",
      "category": "Flashcard",
      "difficulty": "Intermediate",
      "keywords": [
        "performance",
        "checklist",
        "flashcard"
      ],
      "company_fit": "Ritualizes reliable delivery."
    },
    {
      "id": "Q202",
      "q": "Flashcard: STAR storytelling quick cue.",
      "type": "tech",
      "a": "Situation, Task, Action, Result—set the scene, state the goal, show what you did, and land the outcome.",
      "category": "Flashcard",
      "difficulty": "Beginner",
      "keywords": [
        "STAR",
        "storytelling",
        "flashcard"
      ],
      "company_fit": "Crisp communication in interviews and briefs."
    },
    {
      "id": "Q203",
      "q": "Flashcard: AGR value vocabulary to weave in.",
      "type": "tech",
      "a": "Digital transformation, pragmatic modernization, legacy optimization, stakeholder empathy, measurable impact, maintainability.",
      "category": "Flashcard",
      "difficulty": "Beginner",
      "keywords": [
        "AGR",
        "vocabulary",
        "values"
      ],
      "company_fit": "Language that mirrors client priorities."
    },
    {
      "id": "Q204",
      "q": "Communication: explain RLS vs. OLS simply.",
      "type": "tech",
      "a": "RLS hides rows you shouldn’t see; OLS hides columns you shouldn’t see. Same report, different views.",
      "category": "Power BI - Security",
      "difficulty": "Beginner",
      "keywords": [
        "RLS",
        "OLS",
        "privacy"
      ],
      "company_fit": "Clear on data protection options."
    },
    {
      "id": "Q205",
      "q": "Leadership: handling analytics debt on intake.",
      "type": "beh",
      "a": "I tag requests as ‘feature’ or ‘fix debt,’ reserve a slice for debt each sprint, and show the burn-down so leaders see payoff.",
      "category": "Leadership",
      "difficulty": "Intermediate",
      "keywords": [
        "tech debt",
        "intake",
        "burn-down"
      ],
      "company_fit": "Sustains velocity long-term."
    },
    {
      "id": "Q206",
      "q": "System design: secure external sharing?",
      "type": "tech",
      "a": "Separate workspaces, AAD B2B guest access, sensitivity labels, and RLS. Keep exported data paths audited.",
      "category": "Power BI - Security",
      "difficulty": "Advanced",
      "keywords": [
        "B2B",
        "labels",
        "audit"
      ],
      "company_fit": "Controls risk while enabling collaboration."
    },
    {
      "id": "Q207",
      "q": "Behavioral: when did you change your mind on a design?",
      "type": "beh",
      "a": "A Sankey looked cool but confused users; we swapped to a simple stacked bar and added a ‘Top 5 flows’ table. Usage doubled.",
      "category": "Culture",
      "difficulty": "Beginner",
      "keywords": [
        "humility",
        "iteration",
        "adoption"
      ],
      "company_fit": "User-first over ego."
    },
    {
      "id": "Q208",
      "q": "DAX: quick rule for DIVIDE vs. / operator.",
      "type": "tech",
      "a": "Use DIVIDE for safe math with a 0/blank alternate; ‘/’ is fine only when you’re certain the denominator isn’t zero.",
      "category": "Power BI - DAX",
      "difficulty": "Beginner",
      "keywords": [
        "DIVIDE",
        "safety",
        "alternates"
      ],
      "company_fit": "Prevents noisy errors in production."
    },
    {
      "id": "Q209",
      "q": "ETL: when to push logic upstream?",
      "type": "tech",
      "a": "Heavy joins, wide pivots, and dedupe best live in SQL/lakehouse for folding and reuse. Desktop should stay light.",
      "category": "Power BI - ETL",
      "difficulty": "Intermediate",
      "keywords": [
        "pushdown",
        "SQL",
        "reuse"
      ],
      "company_fit": "Right work in the right layer."
    },
    {
      "id": "Q210",
      "q": "Design: how do you handle long labels?",
      "type": "tech",
      "a": "Rename to business shorthand, rotate sparingly, and move detail into tooltips. Labels shouldn’t fight the chart.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "labels",
        "shorthand",
        "tooltips"
      ],
      "company_fit": "Polished, readable visuals."
    },
    {
      "id": "Q211",
      "q": "Stakeholders: setting expectations on first release.",
      "type": "beh",
      "a": "Call it a pilot, define the 3 questions it answers, and date the next iteration. It’s clarity, not hedging.",
      "category": "Stakeholders",
      "difficulty": "Beginner",
      "keywords": [
        "pilot",
        "scope",
        "iteration"
      ],
      "company_fit": "Predictable delivery cadence."
    },
    {
      "id": "Q212",
      "q": "Performance: top visual offenders to watch?",
      "type": "tech",
      "a": "High-cardinality slicers, heavy maps, and visuals with many data points. I cap points and move detail to drill.",
      "category": "Power BI - Performance",
      "difficulty": "Intermediate",
      "keywords": [
        "cardinality",
        "maps",
        "cap"
      ],
      "company_fit": "Designs for speed from the start."
    },
    {
      "id": "Q213",
      "q": "Security: testing dynamic RLS quickly.",
      "type": "tech",
      "a": "Use ‘View as’ with test users and a small RLS test page listing visible keys. It catches surprises early.",
      "category": "Power BI - Security",
      "difficulty": "Intermediate",
      "keywords": [
        "dynamic RLS",
        "testing",
        "view as"
      ],
      "company_fit": "Trustworthy security posture."
    },
    {
      "id": "Q214",
      "q": "Quality: reconciling across two sources that disagree.",
      "type": "tech",
      "a": "Find the business key, compare at the lowest shared grain, and document authoritative source per field. Then fix upstream.",
      "category": "Power BI - Quality",
      "difficulty": "Advanced",
      "keywords": [
        "reconciliation",
        "authoritative",
        "grain"
      ],
      "company_fit": "Cuts through ambiguity methodically."
    },
    {
      "id": "Q215",
      "q": "Architecture: handling multiple fiscal calendars.",
      "type": "tech",
      "a": "One date table with fiscal variants and calc groups to shift time logic. Users pick their calendar, the math stays correct.",
      "category": "Power BI - Architecture",
      "difficulty": "Advanced",
      "keywords": [
        "fiscal",
        "calc groups",
        "variants"
      ],
      "company_fit": "Enterprise-ready flexibility."
    },
    {
      "id": "Q216",
      "q": "Behavioral: giving hard feedback kindly.",
      "type": "beh",
      "a": "I point to the goal, show a concrete improvement, and pair for 10 minutes. It’s direct but supportive.",
      "category": "Culture",
      "difficulty": "Beginner",
      "keywords": [
        "feedback",
        "coaching",
        "specific"
      ],
      "company_fit": "High standards with empathy."
    },
    {
      "id": "Q217",
      "q": "DAX: quick mental model for FILTER vs. CALCULATE filter args.",
      "type": "tech",
      "a": "FILTER builds a table you then use; CALCULATE filter args are simpler and faster when you can express them directly.",
      "category": "Power BI - DAX",
      "difficulty": "Advanced",
      "keywords": [
        "FILTER",
        "CALCULATE",
        "performance"
      ],
      "company_fit": "Performance-savvy DAX habits."
    },
    {
      "id": "Q218",
      "q": "Design: when to annotate directly on charts.",
      "type": "tech",
      "a": "When a spike or change matters to the story—add a short, plain label. Annotations beat guessing.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "annotations",
        "spikes",
        "story"
      ],
      "company_fit": "Guides attention to decisions."
    },
    {
      "id": "Q219",
      "q": "Platform: how do you right-size capacity?",
      "type": "tech",
      "a": "Measure peak refresh and query load, then scale. Trim model bloat first; throwing hardware at waste is last.",
      "category": "Power BI - Platform",
      "difficulty": "Advanced",
      "keywords": [
        "capacity",
        "peak",
        "cost"
      ],
      "company_fit": "Cost-aware engineering."
    },
    {
      "id": "Q220",
      "q": "Flashcard: quick chart selection cues.",
      "type": "tech",
      "a": "Compare → bar/column; trend → line; composition → stacked/100%; distribution → histogram/box; relationship → scatter; flow → waterfall/sankey.",
      "category": "Flashcard",
      "difficulty": "Beginner",
      "keywords": [
        "charts",
        "selection",
        "flashcard"
      ],
      "company_fit": "Shared heuristics speed choices."
    },
    {
      "id": "Q221",
      "q": "System design: how would you structure shared vs. local dimensions?",
      "type": "tech",
      "a": "Conform shared dims (Date, Customer, Product) in a core dataset; let domains extend with local attributes via views. Reuse wins, local nuance stays local.",
      "category": "Power BI - Architecture",
      "difficulty": "Advanced",
      "keywords": [
        "conformed",
        "shared dataset",
        "views"
      ],
      "company_fit": "Balances standardization with domain agility."
    },
    {
      "id": "Q222",
      "q": "Behavioral: describe a time you reset a failing project.",
      "type": "beh",
      "a": "We paused feature churn, wrote a one-pager of goals, shipped a thin slice in 72 hours, and rebuilt momentum with weekly demos. Trust followed results.",
      "category": "Delivery",
      "difficulty": "Intermediate",
      "keywords": [
        "reset",
        "thin slice",
        "demos"
      ],
      "company_fit": "Gets stalled work moving fast."
    },
    {
      "id": "Q223",
      "q": "DAX: explain CONTEXT TRANSITION simply.",
      "type": "tech",
      "a": "When CALCULATE turns row context into filter context so measures ‘see’ the current row. It’s why calculated columns can feed measures correctly.",
      "category": "Power BI - DAX",
      "difficulty": "Advanced",
      "keywords": [
        "context transition",
        "CALCULATE"
      ],
      "company_fit": "Comfort with nuanced DAX."
    },
    {
      "id": "Q224",
      "q": "Governance: your lightweight data contract template?",
      "type": "tech",
      "a": "Fields, grain, refresh SLA, owner, and authoritative source. One page pinned in the app beats hunting through wikis.",
      "category": "Power BI - Governance",
      "difficulty": "Beginner",
      "keywords": [
        "contract",
        "SLA",
        "owner"
      ],
      "company_fit": "Clarity that scales across teams."
    },
    {
      "id": "Q225",
      "q": "Communication: how do you frame tradeoffs with leaders?",
      "type": "beh",
      "a": "Option A, Option B, risks, and my recommendation in one slide. Plain language, no surprises.",
      "category": "Stakeholders",
      "difficulty": "Beginner",
      "keywords": [
        "tradeoffs",
        "recommendation",
        "plain language"
      ],
      "company_fit": "Decision-centric storytelling."
    },
    {
      "id": "Q226",
      "q": "Performance: what do you check first on a slow page?",
      "type": "tech",
      "a": "Performance Analyzer for the worst visual, then that visual’s measure plan in DAX Studio. Fix the bully before tuning everything else.",
      "category": "Power BI - Performance",
      "difficulty": "Intermediate",
      "keywords": [
        "Performance Analyzer",
        "DAX Studio"
      ],
      "company_fit": "Targets the biggest win quickly."
    },
    {
      "id": "Q227",
      "q": "Design: when to use small multiples?",
      "type": "tech",
      "a": "When the same shape needs comparing across segments. It’s pattern-spotting without slicer gymnastics.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "small multiples",
        "comparison"
      ],
      "company_fit": "Clear patterns drive better calls."
    },
    {
      "id": "Q228",
      "q": "Security: secrets in Power Query—what’s your rule?",
      "type": "tech",
      "a": "Never hardcode. Use parameters/Key Vault and gateway-level credentials. Assume the PBIX will be seen.",
      "category": "Power BI - Security",
      "difficulty": "Advanced",
      "keywords": [
        "secrets",
        "Key Vault",
        "gateway"
      ],
      "company_fit": "Treats security as table stakes."
    },
    {
      "id": "Q229",
      "q": "Behavioral: handling a tense exec review calmly.",
      "type": "beh",
      "a": "Lead with the KPI, show the last refresh, then the driver. If challenged, log the follow-up and give a by-when. Calm beats clever.",
      "category": "Resilience",
      "difficulty": "Beginner",
      "keywords": [
        "exec",
        "follow-up",
        "calm"
      ],
      "company_fit": "Steady under pressure."
    },
    {
      "id": "Q230",
      "q": "Modeling: your date table strategy for multiple timezones.",
      "type": "tech",
      "a": "Store UTC at fact, add local offsets in dims, and let measures render in user’s zone. Avoid mixing zones in the same column.",
      "category": "Power BI - Modeling",
      "difficulty": "Advanced",
      "keywords": [
        "UTC",
        "timezone",
        "facts"
      ],
      "company_fit": "Prevents subtle time bugs."
    },
    {
      "id": "Q231",
      "q": "ETL: quick guardrails for merges/joins in Power Query.",
      "type": "tech",
      "a": "Join on business keys, profile for dupes, and verify row counts post-merge. If it’s wide and slow, push to SQL.",
      "category": "Power BI - ETL",
      "difficulty": "Intermediate",
      "keywords": [
        "merge",
        "keys",
        "pushdown"
      ],
      "company_fit": "Avoids silent data skew."
    },
    {
      "id": "Q232",
      "q": "Leadership: creating a BI intake that works.",
      "type": "beh",
      "a": "A one-page form (question, decision, audience, deadline) and office hours. We funnel ideas, not just tickets.",
      "category": "Leadership",
      "difficulty": "Beginner",
      "keywords": [
        "intake",
        "office hours",
        "decision"
      ],
      "company_fit": "Keeps demand healthy and aligned."
    },
    {
      "id": "Q233",
      "q": "DAX: EARLIER—use it or avoid it?",
      "type": "tech",
      "a": "Avoid when possible; variables and iterators are clearer. EARLIER’s intent is fine, but modern patterns are easier to maintain.",
      "category": "Power BI - DAX",
      "difficulty": "Advanced",
      "keywords": [
        "EARLIER",
        "iterators",
        "maintainability"
      ],
      "company_fit": "Modern, readable solutions."
    },
    {
      "id": "Q234",
      "q": "Design: explaining variance cleanly.",
      "type": "tech",
      "a": "Show actual, target, and Δ with a waterfall for drivers. Keep colors consistent: good vs. bad the same everywhere.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "variance",
        "waterfall",
        "consistency"
      ],
      "company_fit": "Honest, comparable storytelling."
    },
    {
      "id": "Q235",
      "q": "Quality: how do you signal data freshness in-report?",
      "type": "tech",
      "a": "A ‘Data as of’ tile and a green/amber/red recency badge by dataset. Users shouldn’t guess.",
      "category": "Power BI - Quality",
      "difficulty": "Beginner",
      "keywords": [
        "freshness",
        "badge",
        "trust"
      ],
      "company_fit": "Transparent by default."
    },
    {
      "id": "Q236",
      "q": "Architecture: thin reports—your pitch in 10 seconds.",
      "type": "tech",
      "a": "Keep the logic in shared datasets; reports are just the view. You get consistency, speed, and fewer forks.",
      "category": "Power BI - Architecture",
      "difficulty": "Intermediate",
      "keywords": [
        "thin reports",
        "shared dataset"
      ],
      "company_fit": "Reuse over reinvention."
    },
    {
      "id": "Q237",
      "q": "Behavioral: disagreeing with a respected SME.",
      "type": "beh",
      "a": "I mirror their point, show a small A/B demo with numbers, and let the group decide. Respect + evidence works.",
      "category": "Stakeholders",
      "difficulty": "Intermediate",
      "keywords": [
        "disagree",
        "A/B",
        "respect"
      ],
      "company_fit": "Healthy challenge culture."
    },
    {
      "id": "Q238",
      "q": "Security: audit readiness in two moves.",
      "type": "tech",
      "a": "Certified datasets with owners + activity logs wired to a simple audit dashboard. Answers most questions in minutes.",
      "category": "Power BI - Security",
      "difficulty": "Intermediate",
      "keywords": [
        "audit",
        "certified",
        "activity logs"
      ],
      "company_fit": "Compliance without bureaucracy."
    },
    {
      "id": "Q239",
      "q": "Performance: handling super wide fact tables.",
      "type": "tech",
      "a": "Split cold attributes to dims, keep facts skinny, and compress with proper data types. Need it? Prove it.",
      "category": "Power BI - Performance",
      "difficulty": "Advanced",
      "keywords": [
        "wide fact",
        "compression",
        "types"
      ],
      "company_fit": "Cost-aware modeling discipline."
    },
    {
      "id": "Q240",
      "q": "Communication: the 30-second story for a KPI downtrend.",
      "type": "beh",
      "a": "‘KPI fell 8% WoW, mainly from Region West due to two large cancellations. We’re confirming if it’s seasonal or a process issue; update EOD.’",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "KPI",
        "driver",
        "update"
      ],
      "company_fit": "Direct, decision-ready updates."
    },
    {
      "id": "Q241",
      "q": "Flashcard: quick DAX safety habits.",
      "type": "tech",
      "a": "Use DIVIDE, cache with VAR, avoid ALL unless you mean it, and test with weird filters.",
      "category": "Flashcard",
      "difficulty": "Beginner",
      "keywords": [
        "DIVIDE",
        "VAR",
        "ALL"
      ],
      "company_fit": "Few habits, big reliability."
    },
    {
      "id": "Q242",
      "q": "Flashcard: model cleanup checklist.",
      "type": "tech",
      "a": "Remove unused cols, fix data types, hide technical fields, group measures, and re-encode text to ints where possible.",
      "category": "Flashcard",
      "difficulty": "Beginner",
      "keywords": [
        "cleanup",
        "encode",
        "hide"
      ],
      "company_fit": "Keeps the house tidy."
    },
    {
      "id": "Q243",
      "q": "Behavioral: teaching a non-technical partner to self-serve.",
      "type": "beh",
      "a": "I give a 10-minute tour, two curated bookmarks, and a one-pager. Next week, they show me what they did. Confidence compounds.",
      "category": "Leadership",
      "difficulty": "Beginner",
      "keywords": [
        "enablement",
        "bookmarks",
        "one-pager"
      ],
      "company_fit": "Builds durable capability."
    },
    {
      "id": "Q244",
      "q": "Design: when to favor a table despite advice.",
      "type": "tech",
      "a": "When users need exact numbers for a small set and export is part of the workflow. Clarity beats dogma.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "table",
        "export",
        "exact"
      ],
      "company_fit": "Pragmatism over purism."
    },
    {
      "id": "Q245",
      "q": "ETL: late-arriving dimensions—your tactic.",
      "type": "tech",
      "a": "Type 2 dims with effective dating; facts land with ‘unknown’ surrogate then heal on backfill. Track heals for transparency.",
      "category": "Power BI - ETL",
      "difficulty": "Advanced",
      "keywords": [
        "Type 2",
        "unknown member",
        "heal"
      ],
      "company_fit": "Accuracy without downtime."
    },
    {
      "id": "Q246",
      "q": "Security: OLS use case in Power BI.",
      "type": "tech",
      "a": "Hide sensitive attributes (e.g., salary) while keeping row access broad. Pair with RLS for defense in depth.",
      "category": "Power BI - Security",
      "difficulty": "Advanced",
      "keywords": [
        "OLS",
        "sensitive",
        "defense in depth"
      ],
      "company_fit": "Granular protection for regulated data."
    },
    {
      "id": "Q247",
      "q": "Performance: balancing auto date/time vs. custom calendar.",
      "type": "tech",
      "a": "Turn auto off; use one robust calendar table. Less bloat, better control.",
      "category": "Power BI - Performance",
      "difficulty": "Beginner",
      "keywords": [
        "auto date/time",
        "calendar"
      ],
      "company_fit": "Cleaner models, fewer surprises."
    },
    {
      "id": "Q248",
      "q": "Stakeholders: aligning on ‘north star’ metrics.",
      "type": "beh",
      "a": "Workshop to define, pilot a draft, and certify. Publish the metric’s owner front-and-center.",
      "category": "Leadership",
      "difficulty": "Intermediate",
      "keywords": [
        "north star",
        "certify",
        "owner"
      ],
      "company_fit": "Unifies language across programs."
    },
    {
      "id": "Q249",
      "q": "DAX: TOPN vs. RANKX—how do you choose?",
      "type": "tech",
      "a": "TOPN for grabbing a slice; RANKX when you must show position. If I don’t need the number, I don’t compute it.",
      "category": "Power BI - DAX",
      "difficulty": "Intermediate",
      "keywords": [
        "TOPN",
        "RANKX",
        "performance"
      ],
      "company_fit": "Calculates only what’s needed."
    },
    {
      "id": "Q250",
      "q": "Communication: explain composite models to an exec.",
      "type": "tech",
      "a": "We keep history fast and local, and fetch today’s hot data live. It feels instant for old data and current for new—best of both.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "composite",
        "history",
        "live"
      ],
      "company_fit": "Translates architecture into outcomes."
    },
    {
      "id": "Q251",
      "q": "Architecture: pattern for multi-brand theming in one app.",
      "type": "tech",
      "a": "Single semantic model; per-brand report themes and logos via parameters/bookmarks. Data stays one truth, skin adapts.",
      "category": "Power BI - Architecture",
      "difficulty": "Advanced",
      "keywords": [
        "multi-brand",
        "themes",
        "parameters"
      ],
      "company_fit": "Reusability without forking data."
    },
    {
      "id": "Q252",
      "q": "Behavioral: saying ‘I don’t know’ well.",
      "type": "beh",
      "a": "‘I don’t know yet—here’s how I’ll find out and by when.’ Then I hit the date. Confidence without bluffing.",
      "category": "Culture",
      "difficulty": "Beginner",
      "keywords": [
        "ownership",
        "follow-through"
      ],
      "company_fit": "Trust through honesty."
    },
    {
      "id": "Q253",
      "q": "Flashcard: STAR—Will’s cadence in answers.",
      "type": "tech",
      "a": "Set stakes, define goal, show the lever you pulled, end with the number that moved.",
      "category": "Flashcard",
      "difficulty": "Beginner",
      "keywords": [
        "STAR",
        "cadence",
        "impact"
      ],
      "company_fit": "Consistent, crisp delivery."
    },
    {
      "id": "Q254",
      "q": "ETL: query folding—one non-obvious breaker to watch.",
      "type": "tech",
      "a": "Adding an index column too early. I add non-foldable steps last or upstream them.",
      "category": "Power BI - ETL",
      "difficulty": "Intermediate",
      "keywords": [
        "folding",
        "index",
        "ordering"
      ],
      "company_fit": "Protects performance by habit."
    },
    {
      "id": "Q255",
      "q": "Design: handling dense categorical labels.",
      "type": "tech",
      "a": "Top-N + ‘Other’, rotate only if you must, and push detail to drill. Legibility wins.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "Top-N",
        "other",
        "legibility"
      ],
      "company_fit": "Readable by design."
    },
    {
      "id": "Q256",
      "q": "Security: lifecycle for guest access cleanup.",
      "type": "tech",
      "a": "Review quarterly, expire dormant guests, and automate notifications. Least privilege is a cadence, not a one-off.",
      "category": "Power BI - Security",
      "difficulty": "Intermediate",
      "keywords": [
        "guest",
        "review",
        "least privilege"
      ],
      "company_fit": "Operationalizes security hygiene."
    },
    {
      "id": "Q257",
      "q": "Performance: how do you test at scale without fear?",
      "type": "tech",
      "a": "Use prod-like datasets in Test capacity, synthetic data where needed, and capture traces. No surprises at go-live.",
      "category": "Power BI - Performance",
      "difficulty": "Advanced",
      "keywords": [
        "scale test",
        "synthetic",
        "trace"
      ],
      "company_fit": "De-risks launches responsibly."
    },
    {
      "id": "Q258",
      "q": "Behavioral: recovering from a missed estimate.",
      "type": "beh",
      "a": "Own it, reset with a smaller milestone, and show the first win fast. Then review why the miss happened.",
      "category": "Delivery",
      "difficulty": "Beginner",
      "keywords": [
        "estimate",
        "reset",
        "retro"
      ],
      "company_fit": "Accountability with learning."
    },
    {
      "id": "Q259",
      "q": "DAX: SUMX vs. SUM—your mental trigger.",
      "type": "tech",
      "a": "If logic needs row-by-row calculation first, it’s SUMX; otherwise SUM. Iterators are powerful but costly—use intentionally.",
      "category": "Power BI - DAX",
      "difficulty": "Intermediate",
      "keywords": [
        "SUMX",
        "iterator",
        "cost"
      ],
      "company_fit": "Performance-aware calculations."
    },
    {
      "id": "Q260",
      "q": "Communication: making a data caveat visible without scaring people.",
      "type": "tech",
      "a": "A subtle banner with ‘Early read—X pending (±Y%).’ Then show whether Y changes the decision. Calm and clear.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "caveat",
        "banner",
        "decision"
      ],
      "company_fit": "Keeps trust while moving fast."
    },
    {
      "id": "Q261",
      "q": "Migration: walk me through a Tableau → Power BI conversion you led.",
      "type": "beh",
      "a": "We had 30+ Tableau workbooks with conflicting calcs. I cataloged KPIs, mapped them to a clean star schema, and rebuilt thin Power BI reports on a shared dataset. I kept weekly side-by-sides so business could sign off. Result: one certified model, load time down ~35%, and Tableau licenses retired on schedule.",
      "category": "Delivery",
      "difficulty": "Intermediate",
      "keywords": [
        "migration",
        "Tableau",
        "Power BI",
        "certified dataset"
      ],
      "company_fit": "Directly supports AGR's legacy optimization and cost control."
    },
    {
      "id": "Q262",
      "q": "Scale: describe the largest user base you supported and how you kept it reliable.",
      "type": "beh",
      "a": "About 800–1,000 users across finance and ops. I split Dev/Test/Prod with pipelines, moved heavy models to Premium capacity, and added refresh staggering + gateway clustering. A small audit dashboard tracked failures and usage. Incidents dropped to near-zero.",
      "category": "Power BI - Platform",
      "difficulty": "Advanced",
      "keywords": [
        "Premium",
        "pipelines",
        "gateway",
        "refresh"
      ],
      "company_fit": "Operates calmly at enterprise scale in public-sector contexts."
    },
    {
      "id": "Q263",
      "q": "Compliance: a time you tightened security without slowing the team.",
      "type": "beh",
      "a": "We had ad-hoc share links. I moved access to AAD groups, implemented dynamic RLS, and added sensitivity labels. To keep velocity, I created a 10-minute ‘request access’ form with auto-provisioning. Security improved; dev speed didn’t tank.",
      "category": "Power BI - Security",
      "difficulty": "Advanced",
      "keywords": [
        "AAD",
        "RLS",
        "labels",
        "provisioning"
      ],
      "company_fit": "Pairs governance with delivery—AGR’s sweet spot."
    },
    {
      "id": "Q264",
      "q": "Stakeholders: an executive asked for an impossible timeline. What happened?",
      "type": "beh",
      "a": "I offered a same-day ‘decision slice’—top KPIs, one driver chart, and a caveat banner—then the full build in a week. The thin slice answered the meeting’s question and bought us time to do it right.",
      "category": "Stakeholders",
      "difficulty": "Intermediate",
      "keywords": [
        "MVP",
        "caveat",
        "thin slice"
      ],
      "company_fit": "Delivers fast without compromising integrity."
    },
    {
      "id": "Q266",
      "q": "Performance: a DAX measure you materially sped up.",
      "type": "beh",
      "a": "A rolling-12 calc used nested FILTERs. I cached with VAR, used CALCULATE with KEEPFILTERS, and swapped to a pre-aggregated table. Visual time dropped from ~2.6s to ~450ms without changing the number.",
      "category": "Power BI - Performance",
      "difficulty": "Advanced",
      "keywords": [
        "VAR",
        "KEEPFILTERS",
        "pre-aggregate"
      ],
      "company_fit": "Turns complex DAX into production-grade performance."
    },
    {
      "id": "Q267",
      "q": "Paginated: a regulatory output you delivered cleanly.",
      "type": "beh",
      "a": "Finance needed a PDF that matched legacy pack formatting exactly. I created a paginated report against the shared dataset so numbers matched dashboards. We scheduled it to email divisions each month. Zero manual assembly after launch.",
      "category": "Power BI - Platform",
      "difficulty": "Intermediate",
      "keywords": [
        "paginated",
        "PDF",
        "shared dataset"
      ],
      "company_fit": "Meets strict compliance without duplicating logic."
    },
    {
      "id": "Q268",
      "q": "Row-level security: a tricky scenario you solved.",
      "type": "beh",
      "a": "Field managers needed multi-region access; reps could only see one. I built a user-to-region mapping table and dynamic RLS that supported multiple memberships. Testing roles with real personas caught edge cases early.",
      "category": "Power BI - Security",
      "difficulty": "Advanced",
      "keywords": [
        "dynamic RLS",
        "mapping",
        "personas"
      ],
      "company_fit": "Granular security for complex org charts."
    },
    {
      "id": "Q269",
      "q": "Fabric/Lakehouse: how you used open storage to improve BI.",
      "type": "beh",
      "a": "We landed source data in Delta, transformed once, and pointed the semantic model at curated tables. Teams analyzed in notebooks or BI with the same truth. It cut duplicate prep and sped up new asks.",
      "category": "Power BI - Architecture",
      "difficulty": "Advanced",
      "keywords": [
        "Delta",
        "curated",
        "semantic"
      ],
      "company_fit": "Future-ready patterns with today’s benefits."
    },
    {
      "id": "Q270",
      "q": "Definitions: aligning warring KPIs quickly.",
      "type": "beh",
      "a": "Sales vs. Finance disagreed on ‘active customer.’ I ran a 45-minute workshop, drafted a joint definition, and built a quick compare page showing the impact. The shared definition stuck once they saw tradeoffs.",
      "category": "Power BI - Governance",
      "difficulty": "Intermediate",
      "keywords": [
        "definition",
        "workshop",
        "compare"
      ],
      "company_fit": "Unifies language so decisions travel."
    },
    {
      "id": "Q271",
      "q": "DirectQuery: a case where you kept it fast enough.",
      "type": "beh",
      "a": "For near-real-time ops, we kept a small import snapshot for history and DirectQuery for the hot hour. I limited visuals and pre-joined with a view. Users got freshness without the spinning wheel.",
      "category": "Power BI - Performance",
      "difficulty": "Advanced",
      "keywords": [
        "DirectQuery",
        "hybrid",
        "view"
      ],
      "company_fit": "Makes pragmatic ‘real-time’ actually usable."
    },
    {
      "id": "Q272",
      "q": "Accessibility: how you improved an existing report for all users.",
      "type": "beh",
      "a": "I swapped to a high-contrast theme, added alt text, and simplified slicers. A quick keyboard-nav pass caught two traps. Feedback from color-blind users was immediate and positive.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "contrast",
        "alt text",
        "keyboard"
      ],
      "company_fit": "Inclusive by default increases adoption."
    },
    {
      "id": "Q273",
      "q": "Self-service: enabling analysts without chaos.",
      "type": "beh",
      "a": "I published a certified dataset with measure dictionary + templates. Analysts built thin reports; changes to definitions happened centrally via a small review. Speed increased, and we kept one truth.",
      "category": "Power BI - Governance",
      "difficulty": "Intermediate",
      "keywords": [
        "certified",
        "templates",
        "dictionary"
      ],
      "company_fit": "Empowers teams while protecting consistency."
    },
    {
      "id": "Q274",
      "q": "Incident: Monday-morning refresh failure story.",
      "type": "beh",
      "a": "I posted status in 10 minutes, shipped partial pages fed by a healthy dataset, and hot-fixed the broken source step by noon. Afterward, I added a folding check and retry policy to prevent repeats.",
      "category": "Resilience",
      "difficulty": "Intermediate",
      "keywords": [
        "status",
        "partial",
        "folding"
      ],
      "company_fit": "Steady incident playbook, no drama."
    },
    {
      "id": "Q275",
      "q": "Cost: an optimization that saved money.",
      "type": "beh",
      "a": "We pruned unused columns, moved a heavy calc upstream, and tightened refresh windows. Capacity metrics dropped, and we avoided a capacity upgrade entirely.",
      "category": "Power BI - Platform",
      "difficulty": "Intermediate",
      "keywords": [
        "model size",
        "refresh",
        "capacity"
      ],
      "company_fit": "Measurable impact through efficiency."
    },
    {
      "id": "Q276",
      "q": "Mentoring: growing a junior analyst through a real deliverable.",
      "type": "beh",
      "a": "We co-built a ‘revenue variance’ feature. I handled modeling; they owned the visual and tooltip. They demoed to stakeholders the next week. Confidence and quality both rose.",
      "category": "Leadership",
      "difficulty": "Beginner",
      "keywords": [
        "pairing",
        "demo",
        "ownership"
      ],
      "company_fit": "Builds client capability, not dependency."
    },
    {
      "id": "Q277",
      "q": "Thin reports: a success you’re proud of.",
      "type": "beh",
      "a": "We moved ten PBIX files off duplicated logic to one semantic model. Dev time for new pages halved, and KPI consistency issues disappeared.",
      "category": "Power BI - Architecture",
      "difficulty": "Intermediate",
      "keywords": [
        "semantic",
        "thin",
        "consistency"
      ],
      "company_fit": "Standardization that accelerates delivery."
    },
    {
      "id": "Q278",
      "q": "Visualization: turning a busy page into a decision page.",
      "type": "beh",
      "a": "I cut visuals from 16 to 8, added a top-row KPI band with trends, and pushed detailed tables to drill-through. Reviews went faster; questions got clearer.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "declutter",
        "KPI band",
        "drill-through"
      ],
      "company_fit": "Clarity under time pressure."
    },
    {
      "id": "Q279",
      "q": "Audit: how you made audits easy for a BI estate.",
      "type": "beh",
      "a": "I built an admin page showing dataset owners, last refresh, sensitivity, and top consumers. When audit came, answers were on one screen.",
      "category": "Power BI - Governance",
      "difficulty": "Intermediate",
      "keywords": [
        "ownership",
        "sensitivity",
        "audit"
      ],
      "company_fit": "Compliance readiness with low overhead."
    },
    {
      "id": "Q280",
      "q": "Time intelligence: handling a fiscal calendar edge case.",
      "type": "beh",
      "a": "A 4-4-5 calendar didn’t line up to month ends. I built a robust date table with fiscal weeks and used USERELATIONSHIP in two measures. Numbers finally matched Finance’s books.",
      "category": "Power BI - DAX",
      "difficulty": "Advanced",
      "keywords": [
        "4-4-5",
        "USERELATIONSHIP",
        "fiscal"
      ],
      "company_fit": "Accuracy over edge cases that matter in audits."
    },
    {
      "id": "Q281",
      "q": "Storytelling: turning a metric dip into action.",
      "type": "beh",
      "a": "I showed the 8% dip, identified West region cancellations, and added a ‘what changed’ view. Ops targeted the specific driver within a day; the next week, we recovered half the dip.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "driver",
        "action",
        "recovery"
      ],
      "company_fit": "Insights that trigger measurable responses."
    },
    {
      "id": "Q282",
      "q": "Many-to-many: a clean pattern you used in production.",
      "type": "beh",
      "a": "Products spanned multiple categories. I introduced a bridge table and used TREATAS in a couple of measures. Totals stabilized, and we kept performance tight.",
      "category": "Power BI - Modeling",
      "difficulty": "Advanced",
      "keywords": [
        "bridge",
        "TREATAS",
        "totals"
      ],
      "company_fit": "Balances correctness with speed."
    },
    {
      "id": "Q283",
      "q": "Change management: preventing silent KPI changes.",
      "type": "beh",
      "a": "We added a quick ‘definition change’ checklist and a weekly 15-minute steward review. Any change updated the measure dictionary and pinged subscribers.",
      "category": "Power BI - Governance",
      "difficulty": "Intermediate",
      "keywords": [
        "stewardship",
        "dictionary",
        "notifications"
      ],
      "company_fit": "No surprises for leadership metrics."
    },
    {
      "id": "Q284",
      "q": "Usage analytics: how you iterated post-launch.",
      "type": "beh",
      "a": "I watched which pages users visited and which slicers they used. The next release promoted those flows and archived dead weight. Load times and satisfaction improved together.",
      "category": "Power BI - Quality",
      "difficulty": "Beginner",
      "keywords": [
        "telemetry",
        "iteration",
        "adoption"
      ],
      "company_fit": "Evidence-led improvements."
    },
    {
      "id": "Q285",
      "q": "Power Query: a folding break you fixed.",
      "type": "beh",
      "a": "A custom column added mid-stream killed folding. I pushed that logic upstream into SQL and moved remaining non-foldable steps to the end. Refresh time dropped by half.",
      "category": "Power BI - ETL",
      "difficulty": "Intermediate",
      "keywords": [
        "folding",
        "SQL pushdown",
        "ordering"
      ],
      "company_fit": "ETL choices that save real minutes and dollars."
    },
    {
      "id": "Q286",
      "q": "Targets: making targets maintainable across segments.",
      "type": "beh",
      "a": "I separated targets into a tidy table by segment and period with effective dates. Updating targets became a 2-minute data change, not a DAX rewrite.",
      "category": "Power BI - Modeling",
      "difficulty": "Intermediate",
      "keywords": [
        "targets",
        "effective dating",
        "maintainability"
      ],
      "company_fit": "Reduces friction in quarterly planning cycles."
    },
    {
      "id": "Q287",
      "q": "Bookmarks: creating curated stories for execs.",
      "type": "beh",
      "a": "I built three bookmarks: overview, risk, and driver deep-dive. Execs could step through in meetings without hunting for filters.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "bookmarks",
        "navigation",
        "story"
      ],
      "company_fit": "Time-respectful exec experience."
    },
    {
      "id": "Q288",
      "q": "Fabric value: one outcome you achieved using lakehouse + BI.",
      "type": "beh",
      "a": "We cut duplicate ETL by exposing curated Delta tables to analysts and BI. Onboarding new metrics dropped from weeks to days because data prep wasn’t reinvented.",
      "category": "Power BI - Architecture",
      "difficulty": "Advanced",
      "keywords": [
        "lakehouse",
        "Delta",
        "reuse"
      ],
      "company_fit": "Modernizes while reducing cycle time."
    },
    {
      "id": "Q289",
      "q": "Ops KPI: keeping SLAs visible in the report itself.",
      "type": "beh",
      "a": "I added a small SLA band and a ‘days since last breach’ counter. When we slipped, it was obvious—and it focused the right conversation.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "SLA",
        "band",
        "counter"
      ],
      "company_fit": "Drives accountability with design."
    },
    {
      "id": "Q290",
      "q": "Training: raising data literacy during rollout.",
      "type": "beh",
      "a": "I ran 30-minute ‘new report’ sessions—five slides on definitions, a live demo, and a Q&A. We recorded them and linked inside the app. Support tickets went down noticeably.",
      "category": "Leadership",
      "difficulty": "Beginner",
      "keywords": [
        "training",
        "definitions",
        "enablement"
      ],
      "company_fit": "Smooth adoption across busy teams."
    },
    {
      "id": "Q291",
      "q": "Matrix vs. chart: a time you chose the table on purpose.",
      "type": "beh",
      "a": "Finance needed exact monthly amounts by cost center for export. We led with a small KPI chart but put the matrix on a drill-through. They got precision without clutter.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "matrix",
        "export",
        "drill-through"
      ],
      "company_fit": "Practical design choices for real workflows."
    },
    {
      "id": "Q292",
      "q": "Gateway: keeping on-prem connectivity stable.",
      "type": "beh",
      "a": "I set up a gateway cluster, aligned driver versions, and staggered heavy jobs. We monitored CPU and query duration with alerts. Stability became boring—in a good way.",
      "category": "Power BI - Platform",
      "difficulty": "Advanced",
      "keywords": [
        "gateway cluster",
        "drivers",
        "monitoring"
      ],
      "company_fit": "Production-minded engineering for critical data paths."
    },
    {
      "id": "Q293",
      "q": "North-star metric: getting to a single definition.",
      "type": "beh",
      "a": "We interviewed leaders, drafted a definition, and piloted it on a dashboard for two weeks. With results and tradeoffs visible, sign-off was unanimous.",
      "category": "Power BI - Governance",
      "difficulty": "Intermediate",
      "keywords": [
        "north star",
        "pilot",
        "sign-off"
      ],
      "company_fit": "Measurable impact through shared language."
    },
    {
      "id": "Q294",
      "q": "Exports: reducing the urge to ‘dump to Excel’.",
      "type": "beh",
      "a": "I added one ‘analysis’ page with flexible pivots and a clean export. Because the page answered 90% of ad-hoc questions, exports dropped naturally.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "export",
        "analysis page",
        "ad-hoc"
      ],
      "company_fit": "Designs to user behavior, not against it."
    },
    {
      "id": "Q295",
      "q": "Variance: making green/red consistent across the estate.",
      "type": "beh",
      "a": "We standardized a color scale and baked it into templates and calculation groups. New reports matched instantly; users stopped relearning meanings.",
      "category": "Power BI - Design",
      "difficulty": "Intermediate",
      "keywords": [
        "color standard",
        "templates",
        "calc groups"
      ],
      "company_fit": "Consistency that lowers cognitive load."
    },
    {
      "id": "Q296",
      "q": "Estimating: how you avoided optimism bias on a big ask.",
      "type": "beh",
      "a": "I scoped by ‘vertical slices’—data prep, one KPI, one drill. We estimated each slice from past benchmarks. The final timeline landed within 10% of plan.",
      "category": "Delivery",
      "difficulty": "Intermediate",
      "keywords": [
        "estimation",
        "benchmarks",
        "slicing"
      ],
      "company_fit": "Predictable commitments for executive programs."
    },
    {
      "id": "Q297",
      "q": "Mobile: making a report truly useful on phones.",
      "type": "beh",
      "a": "I built a mobile layout with top three KPIs and a single driver chart. Tap targets were large; slicers minimal. Execs used it between meetings because it respected their context.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "mobile layout",
        "KPI",
        "driver"
      ],
      "company_fit": "Optimizes for real-world consumption."
    },
    {
      "id": "Q298",
      "q": "Upstream partnership: getting DBAs on your side.",
      "type": "beh",
      "a": "I brought them a before/after query plan and asked for an index, not a blank check. We scheduled heavy loads off-peak. They saw fewer complaints; we saw faster refreshes.",
      "category": "Stakeholders",
      "difficulty": "Intermediate",
      "keywords": [
        "DBA",
        "index",
        "off-peak"
      ],
      "company_fit": "Cross-team empathy that unlocks performance."
    },
    {
      "id": "Q299",
      "q": "Risk: calling out an uncomfortable caveat in a high-stakes meeting.",
      "type": "beh",
      "a": "I stated the number and immediately flagged the missing slice and its likely effect. I offered a timeline for the final read. It kept us honest—and earned credibility.",
      "category": "Ethics",
      "difficulty": "Beginner",
      "keywords": [
        "caveat",
        "credibility",
        "timeline"
      ],
      "company_fit": "Integrity first, even under pressure."
    },
    {
      "id": "Q300",
      "q": "Outcome: a metric you moved that mattered.",
      "type": "beh",
      "a": "By surfacing late-order drivers and a clean drill path, Ops targeted two root causes and cut late shipments ~12% in six weeks. Same data, better visibility, real result.",
      "category": "Delivery",
      "difficulty": "Intermediate",
      "keywords": [
        "drivers",
        "root cause",
        "reduction"
      ],
      "company_fit": "Shows AGR-style ‘measurable impact’ in action."
    },
    {
      "id": "Q301",
      "q": "Migrations: how did you keep business calm during a BI platform switch?",
      "type": "beh",
      "a": "I kept both tools live for a short overlap with a ‘truth table’ page showing numbers match. Weekly side-by-sides and a sunset date kept everyone comfortable and on track.",
      "category": "Delivery",
      "difficulty": "Intermediate",
      "keywords": [
        "migration",
        "parallel run",
        "adoption"
      ],
      "company_fit": "Reduces change risk while modernizing legacy stacks."
    },
    {
      "id": "Q302",
      "q": "Ownership: a time you picked up a broken report no one owned.",
      "type": "beh",
      "a": "I traced lineage, found the stale dataflow, and added an owner tag and health tile. Once visible, the report stopped breaking because someone was clearly accountable.",
      "category": "Power BI - Governance",
      "difficulty": "Beginner",
      "keywords": [
        "lineage",
        "ownership",
        "health"
      ],
      "company_fit": "Creates clarity and accountability quickly."
    },
    {
      "id": "Q303",
      "q": "Security: how did you prove RLS was safe before go-live?",
      "type": "tech",
      "a": "I built test personas, screen-recorded each view, and had business confirm what they should and shouldn’t see. We saved the clips as evidence for audit.",
      "category": "Power BI - Security",
      "difficulty": "Intermediate",
      "keywords": [
        "RLS",
        "personas",
        "audit"
      ],
      "company_fit": "Auditable, business-validated security."
    },
    {
      "id": "Q304",
      "q": "Accuracy: catching a subtle time-zone bug.",
      "type": "beh",
      "a": "Daily totals looked off around midnight. I aligned gateway/server time, added UTC conversions in ETL, and documented the rule. Nightly numbers stopped drifting.",
      "category": "Power BI - Quality",
      "difficulty": "Intermediate",
      "keywords": [
        "timezone",
        "gateway",
        "UTC"
      ],
      "company_fit": "Sweats details that protect trust."
    },
    {
      "id": "Q305",
      "q": "Stakeholders: nudging a team away from vanity metrics.",
      "type": "beh",
      "a": "I showed how a shiny KPI didn’t change decisions, then proposed one tied to a real action. We switched, and the new KPI actually drove behavior.",
      "category": "Stakeholders",
      "difficulty": "Beginner",
      "keywords": [
        "vanity",
        "decision",
        "reframe"
      ],
      "company_fit": "Keeps focus on outcomes, not optics."
    },
    {
      "id": "Q306",
      "q": "Design: making a cluttered report understandable in 5 seconds.",
      "type": "tech",
      "a": "Top KPI band, one trend, one driver. Everything else moved to drill-through. Bounce rates fell and meeting time focused on actions.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "declutter",
        "KPI band",
        "drill"
      ],
      "company_fit": "Decision-first storytelling."
    },
    {
      "id": "Q307",
      "q": "Performance: keeping a DirectQuery model responsive during demos.",
      "type": "tech",
      "a": "Pre-join in views, limit visuals, and cache a small aggregate table for ‘all up’ KPIs. The demo stayed snappy even on live data.",
      "category": "Power BI - Performance",
      "difficulty": "Advanced",
      "keywords": [
        "DirectQuery",
        "views",
        "aggregate"
      ],
      "company_fit": "Balances freshness with UX under pressure."
    },
    {
      "id": "Q308",
      "q": "Communication: explaining a definition change without drama.",
      "type": "beh",
      "a": "I sent a one-pager: old vs new, why it changed, impact on history, and when it goes live. Stakeholders signed off quickly because there were no surprises.",
      "category": "Power BI - Governance",
      "difficulty": "Beginner",
      "keywords": [
        "definitions",
        "change log",
        "sign-off"
      ],
      "company_fit": "Transparent change management."
    },
    {
      "id": "Q309",
      "q": "Leadership: accelerating a slow review cycle.",
      "type": "beh",
      "a": "I moved to weekly 15-minute show-and-tell with two clear decisions per session. We cut rework and shipped twice as fast.",
      "category": "Leadership",
      "difficulty": "Beginner",
      "keywords": [
        "cadence",
        "reviews",
        "decisions"
      ],
      "company_fit": "Light process, fast outcomes."
    },
    {
      "id": "Q310",
      "q": "ETL: preventing silent schema breakages.",
      "type": "tech",
      "a": "I added column-presence checks and type asserts in Power Query. If a column vanished, the job failed loudly with a clear error.",
      "category": "Power BI - ETL",
      "difficulty": "Intermediate",
      "keywords": [
        "schema drift",
        "asserts",
        "alerts"
      ],
      "company_fit": "Proactive protection for production loads."
    },
    {
      "id": "Q311",
      "q": "Ethics: presenting an uncomfortable early read.",
      "type": "beh",
      "a": "I led with the number, showed the missing input, and gave a range for likely movement. We aligned on decisions safe to make now and what to wait on.",
      "category": "Ethics",
      "difficulty": "Intermediate",
      "keywords": [
        "early read",
        "range",
        "decision"
      ],
      "company_fit": "Protects credibility while moving forward."
    },
    {
      "id": "Q312",
      "q": "Architecture: avoiding duplicate models across teams.",
      "type": "tech",
      "a": "We published a conformed shared dataset and tagged it ‘Certified’. Thin reports referenced it. Duplication dropped and fixes propagated instantly.",
      "category": "Power BI - Architecture",
      "difficulty": "Intermediate",
      "keywords": [
        "shared dataset",
        "thin reports",
        "certified"
      ],
      "company_fit": "Consistency at scale with low overhead."
    },
    {
      "id": "Q313",
      "q": "Resilience: recovering from a bad deployment.",
      "type": "beh",
      "a": "I rolled back, posted a brief status, and shipped a fixed build with a test to catch that edge case. We added a checklist step so it wouldn’t repeat.",
      "category": "Resilience",
      "difficulty": "Beginner",
      "keywords": [
        "rollback",
        "postmortem",
        "guardrail"
      ],
      "company_fit": "Mature incident response habits."
    },
    {
      "id": "Q314",
      "q": "Modeling: simplifying a many-to-many tangle.",
      "type": "tech",
      "a": "I introduced a bridge and standardized keys. A couple of measures used TREATAS; totals stabilized and DAX got simpler.",
      "category": "Power BI - Modeling",
      "difficulty": "Advanced",
      "keywords": [
        "bridge",
        "keys",
        "TREATAS"
      ],
      "company_fit": "Clean semantics for reliable KPIs."
    },
    {
      "id": "Q315",
      "q": "UX: helping users avoid filter mistakes.",
      "type": "tech",
      "a": "I added a ‘Reset’ button, showed active filters prominently, and replaced high-cardinality slicers with pre-set buttons. Support tickets dropped.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "filters",
        "reset",
        "presets"
      ],
      "company_fit": "Design removes friction."
    },
    {
      "id": "Q316",
      "q": "Coaching: lifting a teammate’s DAX quality fast.",
      "type": "beh",
      "a": "We refactored one measure together using VAR, CALCULATE, and a naming pattern. They reused the template across the model and performance jumped.",
      "category": "Leadership",
      "difficulty": "Beginner",
      "keywords": [
        "mentoring",
        "templates",
        "VAR"
      ],
      "company_fit": "Raises the team’s floor and ceiling."
    },
    {
      "id": "Q317",
      "q": "Cost: a capacity tuning you’re proud of.",
      "type": "beh",
      "a": "We trimmed model size, cut duplicate visuals, and narrowed refresh windows. Capacity stayed flat even as usage grew.",
      "category": "Power BI - Platform",
      "difficulty": "Intermediate",
      "keywords": [
        "capacity",
        "model size",
        "refresh"
      ],
      "company_fit": "Measurable savings without cutting value."
    },
    {
      "id": "Q318",
      "q": "Discovery: turning vague goals into a concrete backlog.",
      "type": "beh",
      "a": "I ran a short workshop, mapped decisions to metrics, and sketched a wireframe. We left with an ordered list and owners for each slice.",
      "category": "Stakeholders",
      "difficulty": "Beginner",
      "keywords": [
        "workshop",
        "decisions",
        "wireframe"
      ],
      "company_fit": "Faster starts, fewer resets."
    },
    {
      "id": "Q319",
      "q": "Testing: your lean checklist before launch.",
      "type": "tech",
      "a": "Source vs. report totals, slowest page time, top three filter paths, and mobile layout sanity. If those pass, we’re usually safe.",
      "category": "Power BI - Quality",
      "difficulty": "Beginner",
      "keywords": [
        "checklist",
        "totals",
        "mobile"
      ],
      "company_fit": "Practical, repeatable quality gates."
    },
    {
      "id": "Q320",
      "q": "Enablement: reducing ‘export to Excel’ dependence.",
      "type": "beh",
      "a": "I added an analysis page with flexible pivots and a clean export button. Most ad-hoc needs stayed in the app.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "analysis page",
        "export",
        "self-service"
      ],
      "company_fit": "Meets users where they are, safely."
    },
    {
      "id": "Q321",
      "q": "Data freshness: setting realistic expectations with ops.",
      "type": "beh",
      "a": "We agreed on tiers—15-minute, hourly, daily—based on decision speed. A small ‘Last updated’ tile made the promise visible.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "SLA",
        "tiers",
        "recency"
      ],
      "company_fit": "Clear contracts prevent escalations."
    },
    {
      "id": "Q322",
      "q": "Fabric: one change that improved both BI and data science.",
      "type": "tech",
      "a": "We standardized curated Delta tables. DS notebooks and BI models pulled the same truth. Less duplication, faster iteration on both sides.",
      "category": "Power BI - Architecture",
      "difficulty": "Advanced",
      "keywords": [
        "Delta",
        "curation",
        "interoperability"
      ],
      "company_fit": "Unified platform thinking."
    },
    {
      "id": "Q323",
      "q": "Auditability: surfacing lineage for leadership.",
      "type": "tech",
      "a": "A simple page listed dataset → dataflow → source with owners and refresh times. Leaders could trace a number in seconds.",
      "category": "Power BI - Governance",
      "difficulty": "Beginner",
      "keywords": [
        "lineage",
        "owners",
        "refresh"
      ],
      "company_fit": "Confidence during compliance reviews."
    },
    {
      "id": "Q324",
      "q": "Crisis: the moment a meeting KPI looked wrong.",
      "type": "beh",
      "a": "I showed the definition, refresh timestamp, and driver breakdown. We parked the question, validated after, and followed up with the fix and root cause.",
      "category": "Resilience",
      "difficulty": "Intermediate",
      "keywords": [
        "meeting",
        "follow-up",
        "root cause"
      ],
      "company_fit": "Composed, evidence-first response."
    },
    {
      "id": "Q325",
      "q": "Design: preventing color from carrying all meaning.",
      "type": "tech",
      "a": "I added labels and icons, used patterns where needed, and kept contrast high. Users with color-blindness could read it instantly.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "accessibility",
        "labels",
        "icons"
      ],
      "company_fit": "Inclusive design for broad audiences."
    },
    {
      "id": "Q326",
      "q": "Modeling: managing targets that change mid-quarter.",
      "type": "tech",
      "a": "Targets lived in a versioned table with effective dates. The report let users switch ‘as-of’ vs. ‘current plan’ without rewriting measures.",
      "category": "Power BI - Modeling",
      "difficulty": "Intermediate",
      "keywords": [
        "targets",
        "effective dating",
        "as-of"
      ],
      "company_fit": "Real-world planning support."
    },
    {
      "id": "Q327",
      "q": "Capacity: detecting the silent performance killer.",
      "type": "tech",
      "a": "Usage logs showed one page drawing 12s. Performance Analyzer pointed to a nested iterator. We refactored with VAR and an aggregate—page time dropped to under a second.",
      "category": "Power BI - Performance",
      "difficulty": "Advanced",
      "keywords": [
        "Analyzer",
        "iterators",
        "aggregate"
      ],
      "company_fit": "Methodical, data-driven tuning."
    },
    {
      "id": "Q328",
      "q": "Training: building lasting data literacy.",
      "type": "beh",
      "a": "I run short ‘how to read this report’ sessions and link recordings in the app. Support tickets decline because users know the playbook.",
      "category": "Leadership",
      "difficulty": "Beginner",
      "keywords": [
        "training",
        "enablement",
        "recordings"
      ],
      "company_fit": "Scales knowledge across busy teams."
    },
    {
      "id": "Q329",
      "q": "Ethics: pressure to hide a bad trend.",
      "type": "beh",
      "a": "I declined, showed the number with context, and offered actions that could change it. We focused on the fix, not the optics.",
      "category": "Ethics",
      "difficulty": "Intermediate",
      "keywords": [
        "transparency",
        "context",
        "action"
      ],
      "company_fit": "Integrity aligned with public trust."
    },
    {
      "id": "Q330",
      "q": "DAX: explaining CALCULATE to a non-technical sponsor.",
      "type": "tech",
      "a": "It’s like asking the calculator to answer ‘given these filters.’ Change the lens, the answer updates—no new code.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "CALCULATE",
        "analogy",
        "filters"
      ],
      "company_fit": "Bridges technical and business language."
    },
    {
      "id": "Q331",
      "q": "Ops: keeping refreshes from colliding overnight.",
      "type": "tech",
      "a": "We staggered heavy jobs, set priority order, and added alerts on long-running queries. Mornings stopped starting with red banners.",
      "category": "Power BI - Platform",
      "difficulty": "Intermediate",
      "keywords": [
        "scheduling",
        "priority",
        "alerts"
      ],
      "company_fit": "Quiet, reliable mornings for leadership."
    },
    {
      "id": "Q332",
      "q": "Change control: de-risking a big model refactor.",
      "type": "beh",
      "a": "I created a shadow build, ran regression checks, and did a staged rollout. Business saw zero disruption—only faster pages.",
      "category": "Delivery",
      "difficulty": "Advanced",
      "keywords": [
        "shadow build",
        "regression",
        "staged"
      ],
      "company_fit": "Refactors without surprises."
    },
    {
      "id": "Q333",
      "q": "UX: making drill-through discoverable.",
      "type": "tech",
      "a": "I added a subtle ‘Explore details’ button and consistent right-click hints. Click-throughs doubled because users knew the path.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "drill-through",
        "affordance",
        "hints"
      ],
      "company_fit": "Reduces training needs via design."
    },
    {
      "id": "Q334",
      "q": "Governance: ensuring KPI changes don’t blindside execs.",
      "type": "tech",
      "a": "We routed changes through a 15-minute steward review and auto-notified subscribers. The dictionary updated with examples.",
      "category": "Power BI - Governance",
      "difficulty": "Intermediate",
      "keywords": [
        "steward",
        "notifications",
        "dictionary"
      ],
      "company_fit": "Stable definitions under active change."
    },
    {
      "id": "Q335",
      "q": "Performance: when did you choose aggregations over hardware?",
      "type": "beh",
      "a": "Before requesting more capacity, I added a summary table and set up aggregation mappings. Queries hit the small table first—cost avoided.",
      "category": "Power BI - Performance",
      "difficulty": "Advanced",
      "keywords": [
        "aggregations",
        "mappings",
        "cost"
      ],
      "company_fit": "Smart design before spend."
    },
    {
      "id": "Q336",
      "q": "Communication: giving execs a 60-second story.",
      "type": "beh",
      "a": "One number, short trend, one driver, and the action we took. Links for detail. It respects their time and gets decisions made.",
      "category": "Leadership",
      "difficulty": "Beginner",
      "keywords": [
        "executive",
        "brevity",
        "actions"
      ],
      "company_fit": "Concise, decision-ready updates."
    },
    {
      "id": "Q337",
      "q": "Modeling: handling dual calendars (fiscal and calendar) cleanly.",
      "type": "tech",
      "a": "I used one date table with both sets of columns and toggled relationships with USERELATIONSHIP in measures. Users switched views without confusion.",
      "category": "Power BI - DAX",
      "difficulty": "Advanced",
      "keywords": [
        "dual calendar",
        "USERELATIONSHIP",
        "date table"
      ],
      "company_fit": "Accuracy across accounting realities."
    },
    {
      "id": "Q338",
      "q": "Ops: making failures self-diagnosing.",
      "type": "tech",
      "a": "Error logs included dataset, step, last good run, and suspected source. The alert linked straight to the failing query. MTTR dropped sharply.",
      "category": "Power BI - ETL",
      "difficulty": "Intermediate",
      "keywords": [
        "error logging",
        "context",
        "MTTR"
      ],
      "company_fit": "Fast recovery for mission-critical analytics."
    },
    {
      "id": "Q339",
      "q": "Design: encouraging healthy comparisons without noise.",
      "type": "tech",
      "a": "Small multiples with the same scale, consistent annotation, and a ‘top mover’ callout. Users spotted patterns, not confetti.",
      "category": "Power BI - Design",
      "difficulty": "Intermediate",
      "keywords": [
        "small multiples",
        "scale",
        "annotation"
      ],
      "company_fit": "Clear comparisons drive action."
    },
    {
      "id": "Q340",
      "q": "Career: a moment you shifted from ‘report builder’ to ‘product mindset’.",
      "type": "beh",
      "a": "I stopped taking chart orders and started asking, ‘What decision changes?’ That shift led to shared datasets, faster cycles, and dashboards that stuck.",
      "category": "Career Narrative",
      "difficulty": "Beginner",
      "keywords": [
        "product mindset",
        "decisions",
        "stickiness"
      ],
      "company_fit": "Thinks in durable, scalable products."
    },
    {
      "id": "Q341",
      "q": "Migration: convincing finance to trust the new Power BI numbers.",
      "type": "beh",
      "a": "I paired a finance analyst with me for a week, recreated their Excel pivots against the shared dataset, and proved parity on five months. Once they owned a measure name, adoption followed.",
      "category": "Stakeholders",
      "difficulty": "Intermediate",
      "keywords": [
        "finance",
        "trust",
        "Excel parity"
      ],
      "company_fit": "Builds allies by co-owning definitions with domain experts."
    },
    {
      "id": "Q342",
      "q": "Performance: shrinking a 1.2GB model without losing fidelity.",
      "type": "tech",
      "a": "Pruned unused columns, split long text, changed data types, and moved a derived calc upstream. Model dropped under 400MB and load times fell instantly.",
      "category": "Power BI - Performance",
      "difficulty": "Advanced",
      "keywords": [
        "model size",
        "encoding",
        "upstream"
      ],
      "company_fit": "Optimizes cost and speed for enterprise scale."
    },
    {
      "id": "Q343",
      "q": "Security: implementing dynamic RLS for regional leaders.",
      "type": "tech",
      "a": "Built a User→Region bridge, filtered facts via USERPRINCIPALNAME(), and added an ‘auditor’ role for testing. Leaders saw only their region; audit saw all.",
      "category": "Power BI - Security",
      "difficulty": "Advanced",
      "keywords": [
        "dynamic RLS",
        "bridge",
        "USERPRINCIPALNAME"
      ],
      "company_fit": "Granular control without multiplying reports."
    },
    {
      "id": "Q344",
      "q": "Quality: stopping phantom duplicates at source.",
      "type": "beh",
      "a": "I traced duplicate invoices to a late-arriving update path. We added a unique key check in ETL and a quarantine table. Downstream totals stabilized overnight.",
      "category": "Power BI - Quality",
      "difficulty": "Intermediate",
      "keywords": [
        "duplicates",
        "quarantine",
        "keys"
      ],
      "company_fit": "Fixes root causes, not just the symptoms."
    },
    {
      "id": "Q345",
      "q": "Design: making a page readable for 65\" conference screens.",
      "type": "tech",
      "a": "Increased font hierarchy, fewer visuals, thicker lines, and high-contrast theme. I tested from the back of a room—if I can’t read it, it doesn’t ship.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "readability",
        "contrast",
        "presentation"
      ],
      "company_fit": "Designs for real-world consumption contexts."
    },
    {
      "id": "Q346",
      "q": "Governance: preventing measure drift across business units.",
      "type": "tech",
      "a": "Created a ‘certified’ folder with base measures, locked naming, and PR-style review for changes. Variants lived in a clearly labeled ‘regional’ folder.",
      "category": "Power BI - Governance",
      "difficulty": "Intermediate",
      "keywords": [
        "certified",
        "folders",
        "review"
      ],
      "company_fit": "Keeps one truth while allowing sanctioned flexibility."
    },
    {
      "id": "Q347",
      "q": "Resilience: handling a gateway patch that broke drivers.",
      "type": "beh",
      "a": "We failed over to a paired node, pinned a driver version, and scheduled a maintenance window to re-align. I posted a short RCA with the fix and prevention.",
      "category": "Power BI - Platform",
      "difficulty": "Intermediate",
      "keywords": [
        "gateway",
        "failover",
        "RCA"
      ],
      "company_fit": "Operational maturity under tight SLAs."
    },
    {
      "id": "Q348",
      "q": "Architecture: splitting a monolithic dataset safely.",
      "type": "tech",
      "a": "Identified conformed dims, extracted two subject-area datasets, and pointed thin reports via shared connections. We kept KPIs consistent and refreshes faster.",
      "category": "Power BI - Architecture",
      "difficulty": "Advanced",
      "keywords": [
        "shared dataset",
        "subject area",
        "split"
      ],
      "company_fit": "Scales without fragmenting definitions."
    },
    {
      "id": "Q349",
      "q": "Communication: calming execs during an outage.",
      "type": "beh",
      "a": "I sent a two-line status: scope, workaround, ETA. Then a follow-up with root cause and prevention. The concise loop kept attention on decisions, not drama.",
      "category": "Leadership",
      "difficulty": "Beginner",
      "keywords": [
        "outage",
        "status",
        "ETA"
      ],
      "company_fit": "Clear, timely comms in high-visibility moments."
    },
    {
      "id": "Q350",
      "q": "Learning: turning a weekend prototype into value at work.",
      "type": "beh",
      "a": "I prototyped calculation groups for time views on sample data, then pitched a tiny pilot. We cut 40 duplicate measures and standardized time logic in a day.",
      "category": "Growth",
      "difficulty": "Intermediate",
      "keywords": [
        "prototype",
        "calculation groups",
        "standardize"
      ],
      "company_fit": "Curiosity converted into pragmatic modernization."
    },
    {
      "id": "Q351",
      "q": "Describe a time you had to re-engineer a report pipeline on short notice.",
      "type": "beh",
      "a": "At Quilt Software, a data feed for daily sales broke after a schema change. I cloned the failing Power Query, patched the schema in SQL, and rebuilt dependencies to restore refreshes within a day. Afterward I scheduled an alert and added schema monitoring to avoid repeats.",
      "category": "Delivery",
      "difficulty": "Intermediate",
      "keywords": [
        "schema change",
        "pipeline",
        "alerting"
      ],
      "company_fit": "Shows calm triage and permanent fixes—AGR values dependability."
    },
    {
      "id": "Q352",
      "q": "How did you translate complex metrics into executive language?",
      "type": "beh",
      "a": "At Waste Management I rebuilt route efficiency KPIs in Power BI. Instead of DAX jargon, I explained them as ‘minutes saved per driver per route.’ The simplicity helped non-technical managers champion the dashboard company-wide.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "translation",
        "executive",
        "clarity"
      ],
      "company_fit": "Aligns with AGR’s emphasis on plain-language decision support."
    },
    {
      "id": "Q353",
      "q": "When did you automate something that changed team velocity?",
      "type": "beh",
      "a": "While freelancing for Quilt Software, I automated Salesforce opportunity exports with SQL and Power Automate. What took two hours daily dropped to ten minutes. Sales leaders could view live dashboards instead of stale spreadsheets.",
      "category": "Efficiency",
      "difficulty": "Intermediate",
      "keywords": [
        "automation",
        "SQL",
        "Power Automate"
      ],
      "company_fit": "Demonstrates measurable modernization impact."
    },
    {
      "id": "Q354",
      "q": "Describe how you validated large datasets before visualization.",
      "type": "tech",
      "a": "I profiled distributions in SQL, compared aggregates between staging and Power BI, and spot-checked anomalies. When counts drifted, I traced to ETL join logic before publishing. It’s part of my pre-flight ritual for every model.",
      "category": "Power BI - Quality",
      "difficulty": "Intermediate",
      "keywords": [
        "validation",
        "profiling",
        "aggregates"
      ],
      "company_fit": "Ensures accuracy before storytelling—key in federal analytics."
    },
    {
      "id": "Q355",
      "q": "A situation where visuals improved compliance reporting.",
      "type": "beh",
      "a": "At Peregrine Advisors I visualized SEC filing timeliness by issuer using red-yellow-green bars and deadlines. Compliance officers spotted lags instantly, cutting late submissions 25% in a quarter.",
      "category": "Power BI - Design",
      "difficulty": "Intermediate",
      "keywords": [
        "compliance",
        "visuals",
        "timeliness"
      ],
      "company_fit": "Turns governance into clear, proactive insight."
    },
    {
      "id": "Q356",
      "q": "How did you manage refresh failures for critical dashboards?",
      "type": "tech",
      "a": "I created retry logic with Power Automate, added status tiles for last refresh, and a Teams alert channel. Stakeholders saw transparency and no longer emailed at 6 a.m. asking if data was live.",
      "category": "Power BI - Platform",
      "difficulty": "Intermediate",
      "keywords": [
        "refresh",
        "monitoring",
        "alerting"
      ],
      "company_fit": "Builds confidence through visibility and communication."
    },
    {
      "id": "Q357",
      "q": "Give an example of applying dashboard design principles.",
      "type": "tech",
      "a": "In my sales performance dashboard I used contrast for KPI emphasis, alignment for readability, and consistent spacing to reduce noise. Color encoded only variance, not decoration. It guided attention naturally without explanation.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "contrast",
        "alignment",
        "color use"
      ],
      "company_fit": "Reflects AGR’s clarity-first presentation standards."
    },
    {
      "id": "Q358",
      "q": "When did you handle conflicting feedback from multiple managers?",
      "type": "beh",
      "a": "At New Beginnings, operations wanted granular attendance metrics while leadership wanted trends. I built toggles so both views lived on one page. The compromise built trust and saved me from maintaining two reports.",
      "category": "Stakeholders",
      "difficulty": "Intermediate",
      "keywords": [
        "feedback",
        "compromise",
        "toggle"
      ],
      "company_fit": "Balances stakeholder needs efficiently."
    },
    {
      "id": "Q359",
      "q": "Describe a time you integrated SharePoint or Power Apps with Power BI.",
      "type": "tech",
      "a": "I built a Power App for staff feedback that wrote to SharePoint, then visualized submissions in Power BI with refresh every 30 minutes. Managers could act on feedback the same day without emailing forms around.",
      "category": "Power BI - Platform",
      "difficulty": "Intermediate",
      "keywords": [
        "Power Apps",
        "SharePoint",
        "integration"
      ],
      "company_fit": "Cross-platform skill within Microsoft ecosystem."
    },
    {
      "id": "Q360",
      "q": "When did storytelling improve adoption?",
      "type": "beh",
      "a": "For a public education project I framed the dashboard around one teacher’s day rather than data tables. Opening with a relatable narrative boosted engagement and made metrics memorable.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "storytelling",
        "engagement",
        "adoption"
      ],
      "company_fit": "Human-centered communication, a hallmark of AGR partnerships."
    },
    {
      "id": "Q361",
      "q": "Tell me about a time you improved an existing Power BI dashboard without being asked.",
      "type": "beh",
      "a": "At Quilt Software I noticed an executive dashboard took 20 seconds to load. I restructured DAX with pre-calculated tables, optimized visuals, and removed redundant slicers. Load time dropped to under 5 seconds, and the VP started showcasing it in weekly meetings.",
      "category": "Power BI - Performance",
      "difficulty": "Intermediate",
      "keywords": [
        "optimization",
        "proactivity",
        "executive dashboard"
      ],
      "company_fit": "Shows initiative and performance tuning under pressure."
    },
    {
      "id": "Q362",
      "q": "Describe a situation where you had to balance data transparency with privacy.",
      "type": "beh",
      "a": "At New Beginnings Family Academy, I visualized student data while protecting personal identifiers. I aggregated results by class and used icons instead of names. Transparency improved, and we stayed FERPA-compliant.",
      "category": "Ethics",
      "difficulty": "Intermediate",
      "keywords": [
        "privacy",
        "aggregation",
        "FERPA"
      ],
      "company_fit": "Respects compliance while maintaining clarity."
    },
    {
      "id": "Q363",
      "q": "How did you handle a case where the stakeholder disagreed with your data findings?",
      "type": "beh",
      "a": "When a director disputed sales trend numbers at Quilt Software, I walked her through the SQL joins and filters step-by-step. Once she saw the data lineage, we fixed a mismatch in one source and aligned our definitions going forward.",
      "category": "Stakeholders",
      "difficulty": "Intermediate",
      "keywords": [
        "data lineage",
        "definition alignment",
        "conflict resolution"
      ],
      "company_fit": "Demonstrates diplomacy and technical grounding."
    },
    {
      "id": "Q364",
      "q": "Give an example of applying design thinking to improve usability.",
      "type": "tech",
      "a": "In a dashboard for route optimization, I reduced the initial clutter by grouping metrics by question: 'Where?', 'When?', 'How much?'. Each question had one visual. Engagement tripled because the design matched natural thought flow.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "design thinking",
        "usability",
        "grouping"
      ],
      "company_fit": "Applies clarity and purpose to user experience."
    },
    {
      "id": "Q366",
      "q": "Explain how you prioritize metrics for an executive dashboard.",
      "type": "tech",
      "a": "I align with leadership’s top three decisions per month, then design visuals answering those directly. Every metric must connect to a goal or initiative—no filler KPIs.",
      "category": "Power BI - Design",
      "difficulty": "Intermediate",
      "keywords": [
        "prioritization",
        "executive",
        "decision-driven"
      ],
      "company_fit": "Ensures dashboards serve outcomes, not vanity metrics."
    },
    {
      "id": "Q367",
      "q": "What’s your approach to improving report refresh speed?",
      "type": "tech",
      "a": "I measure refresh time per step, push transformations upstream to SQL, reduce merge complexity, and enable incremental refresh. Documenting foldable steps helps future optimization.",
      "category": "Power BI - Performance",
      "difficulty": "Advanced",
      "keywords": [
        "folding",
        "SQL optimization",
        "incremental refresh"
      ],
      "company_fit": "Focuses on scalability and maintainability."
    },
    {
      "id": "Q368",
      "q": "When did you have to learn a new client’s data domain quickly?",
      "type": "beh",
      "a": "At Peregrine Advisors, I joined a financial data project with 10K+ SEC filings. I built a glossary of terms, traced workflows, and shadowed analysts for context. Within a week, I was modeling compliance KPIs independently.",
      "category": "Growth",
      "difficulty": "Intermediate",
      "keywords": [
        "learning curve",
        "domain knowledge",
        "adaptability"
      ],
      "company_fit": "Rapid onboarding aligns with AGR’s agile delivery model."
    },
    {
      "id": "Q369",
      "q": "Explain how you would modernize a legacy Excel reporting process.",
      "type": "tech",
      "a": "I’d import the workbook into Power BI, clean formulas with Power Query, and replace cross-sheet links with a relational model. Then I’d automate refresh via a gateway and publish to the Service for shared access.",
      "category": "Modernization",
      "difficulty": "Intermediate",
      "keywords": [
        "Excel migration",
        "Power Query",
        "automation"
      ],
      "company_fit": "Matches AGR’s mission of pragmatic modernization."
    },
    {
      "id": "Q370",
      "q": "Describe a moment when you had to present technical results to a non-technical audience.",
      "type": "beh",
      "a": "At Waste Management I explained routing analytics to operations teams using color-coded route maps and short narratives instead of formulas. They adopted data-driven route planning within two weeks.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "presentation",
        "translation",
        "visual storytelling"
      ],
      "company_fit": "Bridges the gap between analytics and action."
    },
    {
      "id": "Q371",
      "q": "Tell me about a time you handled incomplete or inconsistent data.",
      "type": "beh",
      "a": "For a municipal reporting dashboard, some departments used different fiscal calendars. I normalized dates and flagged incomplete records with warnings, so leadership could still view accurate partial trends.",
      "category": "Power BI - Quality",
      "difficulty": "Intermediate",
      "keywords": [
        "incomplete data",
        "normalization",
        "warnings"
      ],
      "company_fit": "Balances transparency and usability."
    },
    {
      "id": "Q372",
      "q": "How do you balance aesthetics with performance in Power BI design?",
      "type": "tech",
      "a": "I design layouts for clarity first: fewer visuals, aligned grids, and minimal animation. Beauty follows simplicity. I test performance before adding decorative elements.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "aesthetics",
        "performance",
        "simplicity"
      ],
      "company_fit": "Balances design excellence with operational performance."
    },
    {
      "id": "Q373",
      "q": "Describe a time you collaborated across departments to deliver insights.",
      "type": "beh",
      "a": "At New Beginnings, I built a dashboard combining HR and attendance data. Collaboration revealed absentee trends linked to scheduling issues, leading to a 12% attendance improvement.",
      "category": "Stakeholders",
      "difficulty": "Intermediate",
      "keywords": [
        "cross-functional",
        "collaboration",
        "insight delivery"
      ],
      "company_fit": "Embodies AGR’s partnership model between teams."
    },
    {
      "id": "Q374",
      "q": "What’s your approach when a stakeholder requests conflicting KPIs?",
      "type": "beh",
      "a": "I restate both goals, create a prototype for each, and facilitate a quick comparison meeting. Once the team sees trade-offs visually, consensus follows naturally.",
      "category": "Stakeholders",
      "difficulty": "Intermediate",
      "keywords": [
        "conflicting KPIs",
        "alignment",
        "visual prototypes"
      ],
      "company_fit": "Resolves ambiguity through evidence and facilitation."
    },
    {
      "id": "Q375",
      "q": "Tell me about a dashboard you’re most proud of.",
      "type": "beh",
      "a": "I’m proud of a logistics dashboard that visualized pickup delays across regions. It turned hours of manual checks into live visual insights and reduced complaint calls by half within a month.",
      "category": "Career Narrative",
      "difficulty": "Beginner",
      "keywords": [
        "logistics",
        "automation",
        "impact"
      ],
      "company_fit": "Delivers measurable outcomes through data storytelling."
    },
    {
      "id": "Q376",
      "q": "How do you encourage data literacy in teams you work with?",
      "type": "beh",
      "a": "I host short ‘dashboard walkthroughs’ where I show how filters change numbers and explain measures in plain English. Repetition builds comfort, and soon users explore confidently on their own.",
      "category": "Leadership",
      "difficulty": "Beginner",
      "keywords": [
        "data literacy",
        "training",
        "walkthrough"
      ],
      "company_fit": "Empowers teams rather than guarding expertise."
    },
    {
      "id": "Q377",
      "q": "What principles do you apply to ensure dashboard accessibility?",
      "type": "tech",
      "a": "High contrast, keyboard navigation, labeled visuals, and testing with color-blind simulators. Accessibility isn’t optional—it’s professional design.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "accessibility",
        "contrast",
        "labels"
      ],
      "company_fit": "Ensures inclusivity across AGR’s client base."
    },
    {
      "id": "Q378",
      "q": "When did you have to act as both analyst and engineer?",
      "type": "beh",
      "a": "At Peregrine Advisors I designed SQL transformations and Power BI models myself. Owning both sides meant faster debugging and higher data trust. It also built my full-stack BI mindset.",
      "category": "Power BI - Architecture",
      "difficulty": "Intermediate",
      "keywords": [
        "full-stack",
        "engineering",
        "data trust"
      ],
      "company_fit": "Cross-functional fluency reduces bottlenecks."
    },
    {
      "id": "Q379",
      "q": "Describe a time you used analytics to drive a decision rather than just report it.",
      "type": "beh",
      "a": "At Waste Management, I identified inefficiencies in route timing that saved the fleet 8% in fuel. We used that insight to redesign shifts, turning analytics into operational policy.",
      "category": "Impact",
      "difficulty": "Intermediate",
      "keywords": [
        "fuel savings",
        "operational efficiency",
        "decision support"
      ],
      "company_fit": "Embodies AGR’s measurable impact philosophy."
    },
    {
      "id": "Q380",
      "q": "What motivates you about modernizing legacy data systems?",
      "type": "beh",
      "a": "I enjoy helping teams move from manual chaos to elegant automation. Watching someone trust the dashboard more than their spreadsheet for the first time is deeply satisfying.",
      "category": "Motivation",
      "difficulty": "Beginner",
      "keywords": [
        "modernization",
        "automation",
        "trust"
      ],
      "company_fit": "Perfectly aligned with AGR’s modernization ethos."
    },
    {
      "id": "Q381",
      "q": "Describe a time you created a custom DAX measure that solved a complex business question.",
      "type": "tech",
      "a": "At Quilt Software, I built a DAX measure for weighted conversion rates across multiple sales tiers. It used CALCULATE with a filter context on dynamic tier weights. The result exposed which reps improved efficiency despite smaller pipelines, leading to fairer bonuses.",
      "category": "Power BI - DAX",
      "difficulty": "Advanced",
      "keywords": [
        "CALCULATE",
        "filter context",
        "conversion rate"
      ],
      "company_fit": "Delivers nuanced insight through advanced modeling."
    },
    {
      "id": "Q382",
      "q": "How do you manage project timelines when requirements keep shifting?",
      "type": "beh",
      "a": "I break the work into short, reviewable sprints with clear acceptance criteria. When a change request comes, I map its impact visibly. This keeps discussions about tradeoffs, not blame.",
      "category": "Project Management",
      "difficulty": "Intermediate",
      "keywords": [
        "agile",
        "scope change",
        "tradeoffs"
      ],
      "company_fit": "Reflects AGR’s collaborative, pragmatic delivery culture."
    },
    {
      "id": "Q383",
      "q": "When did you have to make a data model scalable for many users?",
      "type": "tech",
      "a": "For a city operations dashboard, I split heavy tables into dimension and fact sets, built aggregations, and published a shared dataset. Dozens of analysts could then reuse without performance loss.",
      "category": "Power BI - Architecture",
      "difficulty": "Advanced",
      "keywords": [
        "aggregation",
        "shared dataset",
        "scalability"
      ],
      "company_fit": "Designs sustainable solutions for enterprise scale."
    },
    {
      "id": "Q384",
      "q": "Explain a time you used Power Query creatively.",
      "type": "tech",
      "a": "I once parsed nested JSON API calls for a weather-adjusted sales forecast. Power Query flattened the hierarchy and merged with sales data elegantly, saving me from a Python ETL.",
      "category": "Power BI - ETL",
      "difficulty": "Intermediate",
      "keywords": [
        "Power Query",
        "API",
        "flatten JSON"
      ],
      "company_fit": "Resourcefulness within Microsoft ecosystem tools."
    },
    {
      "id": "Q385",
      "q": "Tell me about a professional risk you took that paid off.",
      "type": "beh",
      "a": "At Waste Management, I pitched converting manual Excel trackers to a Power BI prototype even though no one asked. After the demo, management sponsored full rollout—it became a standard reporting tool.",
      "category": "Leadership",
      "difficulty": "Intermediate",
      "keywords": [
        "initiative",
        "innovation",
        "prototype"
      ],
      "company_fit": "Encourages proactive modernization ideas."
    },
    {
      "id": "Q386",
      "q": "How do you balance competing data priorities when multiple departments need dashboards?",
      "type": "beh",
      "a": "I quantify urgency and reach: how many decisions depend on the data and what risk delays pose. Then I communicate that matrix transparently. It turns prioritization into logic, not politics.",
      "category": "Stakeholders",
      "difficulty": "Intermediate",
      "keywords": [
        "prioritization",
        "risk",
        "transparency"
      ],
      "company_fit": "Organizes competing needs into structured priorities."
    },
    {
      "id": "Q387",
      "q": "Explain your approach to creating a consistent data dictionary.",
      "type": "tech",
      "a": "I store measure definitions in a SharePoint list synced to Power BI metadata. When updating logic, I refresh the list automatically so everyone references the same truth.",
      "category": "Power BI - Governance",
      "difficulty": "Intermediate",
      "keywords": [
        "data dictionary",
        "SharePoint",
        "metadata"
      ],
      "company_fit": "Promotes cross-department alignment and clarity."
    },
    {
      "id": "Q388",
      "q": "Describe how you handle presenting negative results to stakeholders.",
      "type": "beh",
      "a": "I present them as insights, not failures—'Here’s what we learned, here’s what we’ll adjust.' I back every problem with a next step so the room feels progress, not blame.",
      "category": "Power BI - Communication",
      "difficulty": "Beginner",
      "keywords": [
        "presentation",
        "resilience",
        "stakeholder trust"
      ],
      "company_fit": "Keeps discussions solution-focused and professional."
    },
    {
      "id": "Q389",
      "q": "How do you stay current with Power BI updates and ecosystem changes?",
      "type": "growth",
      "a": "I subscribe to the Power BI blog, follow enterprise feature previews, and test in a sandbox tenant monthly. Hands-on exploration keeps me fluent and creative.",
      "category": "Growth",
      "difficulty": "Beginner",
      "keywords": [
        "learning",
        "sandbox",
        "updates"
      ],
      "company_fit": "Encourages continuous improvement and curiosity."
    },
    {
      "id": "Q390",
      "q": "Tell me about a time you built trust quickly with a skeptical stakeholder.",
      "type": "beh",
      "a": "At Peregrine Advisors, a finance director doubted automated dashboards. I delivered a small, accurate proof within two days. The next week she requested five more. Quick credibility built long trust.",
      "category": "Stakeholders",
      "difficulty": "Intermediate",
      "keywords": [
        "trust",
        "pilot project",
        "credibility"
      ],
      "company_fit": "Earns buy-in through reliability and delivery."
    },
    {
      "id": "Q391",
      "q": "When did you need to coordinate analytics with an external partner?",
      "type": "beh",
      "a": "While freelancing for Quilt, I integrated partner CRM exports into our warehouse. Weekly syncs clarified field mappings and reduced mismatched data by 70%.",
      "category": "Collaboration",
      "difficulty": "Intermediate",
      "keywords": [
        "CRM",
        "integration",
        "collaboration"
      ],
      "company_fit": "Manages vendor alignment for complex data ecosystems."
    },
    {
      "id": "Q392",
      "q": "How do you ensure that dashboards remain useful months after delivery?",
      "type": "tech",
      "a": "I add feedback forms directly into the report, review usage metrics quarterly, and version dashboards instead of overwriting. This ensures evolution without confusion.",
      "category": "Maintenance",
      "difficulty": "Intermediate",
      "keywords": [
        "usage metrics",
        "versioning",
        "feedback loop"
      ],
      "company_fit": "Focuses on long-term value, not one-off deliverables."
    },
    {
      "id": "Q393",
      "q": "What are the key elements of good dashboard storytelling?",
      "type": "design",
      "a": "Clarity, flow, and emotion. Each visual answers one question, layouts move from overview to detail, and color encodes intent. A dashboard should read like a story, not a spreadsheet.",
      "category": "Power BI - Design",
      "difficulty": "Beginner",
      "keywords": [
        "storytelling",
        "layout",
        "color"
      ],
      "company_fit": "Embodies AGR’s clarity and communication excellence."
    },
    {
      "id": "Q394",
      "q": "Describe a time you led a team through a tough delivery timeline.",
      "type": "beh",
      "a": "At New Beginnings, a grant dashboard had to go live in three days. I divided work by data source, held 30-minute standups, and pushed a minimal viable release on time. We added enhancements later.",
      "category": "Leadership",
      "difficulty": "Intermediate",
      "keywords": [
        "tight deadline",
        "team coordination",
        "MVP"
      ],
      "company_fit": "Shows composure and results orientation under pressure."
    },
    {
      "id": "Q395",
      "q": "How do you measure success for your analytics projects?",
      "type": "beh",
      "a": "I measure adoption rate, decision impact, and time saved. For instance, one dashboard reduced monthly manual reporting hours by 80%. That’s real success.",
      "category": "Impact",
      "difficulty": "Beginner",
      "keywords": [
        "metrics",
        "impact",
        "time savings"
      ],
      "company_fit": "Focuses on tangible business outcomes."
    },
    {
      "id": "Q396",
      "q": "What is your approach to documentation?",
      "type": "tech",
      "a": "Concise, visual, and close to the source. I keep diagrams in OneNote linked to Power BI workspaces so anyone can onboard in minutes.",
      "category": "Power BI - Governance",
      "difficulty": "Beginner",
      "keywords": [
        "documentation",
        "diagram",
        "workspace"
      ],
      "company_fit": "Ensures continuity and collaboration across teams."
    },
    {
      "id": "Q397",
      "q": "When did you find a data issue no one else noticed?",
      "type": "beh",
      "a": "While auditing waste collection records, I found negative volume values caused by a sensor bug. Fixing it prevented false profit-loss alarms for an entire region.",
      "category": "Power BI - Quality",
      "difficulty": "Intermediate",
      "keywords": [
        "audit",
        "anomaly detection",
        "sensor data"
      ],
      "company_fit": "Attention to detail prevents larger failures."
    },
    {
      "id": "Q398",
      "q": "What’s your favorite feature in Power BI and why?",
      "type": "tech",
      "a": "Calculation groups—they cut redundancy and simplify maintenance. It’s elegance through abstraction, which appeals to my engineer mindset.",
      "category": "Power BI - DAX",
      "difficulty": "Intermediate",
      "keywords": [
        "calculation groups",
        "efficiency",
        "abstraction"
      ],
      "company_fit": "Reflects preference for maintainable design."
    },
    {
      "id": "Q399",
      "q": "How do you approach stress during major deliverables?",
      "type": "beh",
      "a": "I focus on structure: clear task lists, visible progress, and small wins. I also keep perspective—stress means the project matters.",
      "category": "Resilience",
      "difficulty": "Beginner",
      "keywords": [
        "stress",
        "focus",
        "discipline"
      ],
      "company_fit": "Shows composure and maturity in delivery."
    },
    {
      "id": "Q400",
      "q": "Why do you want to work with AGR?",
      "type": "behavioral",
      "a": "AGR’s balance of modernization and mission focus resonates with me. I like that it values impact over hype, and that aligns with how I’ve always approached data—clarity, purpose, and accountability.",
      "category": "Career Narrative",
      "difficulty": "Beginner",
      "keywords": [
        "motivation",
        "fit",
        "values"
      ],
      "company_fit": "Authentically aligns with AGR’s pragmatic transformation ethos."
    },
    {
      "id": "Q401",
      "q": "Walk me through your end-to-end Power BI development process.",
      "type": "tech",
      "category": "Power BI Lifecycle",
      "difficulty": "Intermediate",
      "keywords": [
        "Power BI",
        "process",
        "ETL",
        "data model",
        "deployment"
      ],
      "company_fit": "Demonstrates structured and reliable delivery method for public-sector BI projects.",
      "a": "I start with discovery sessions to clarify requirements and KPIs, then map data sources and plan data models. Next I design and transform data in Power Query, ensuring clean relationships and efficient schemas. I build visuals in Power BI Desktop with DAX measures, validate results with sample data, and publish to the Power BI Service. Before deployment, I run user acceptance testing, set up RLS, and document logic for stakeholders."
    },
    {
      "id": "Q402",
      "q": "What steps do you take to ensure your Power BI reports perform well at scale?",
      "type": "tech",
      "category": "Performance Optimization",
      "difficulty": "Advanced",
      "keywords": [
        "DAX optimization",
        "query folding",
        "aggregations"
      ],
      "company_fit": "Shows technical rigor under enterprise-scale reporting conditions.",
      "a": "I optimize by minimizing visuals per page, enabling query folding, and preferring measures over calculated columns. I use DAX variables to reduce repeated scans, pre-aggregate large fact tables, and test query plans in DAX Studio. Incremental refresh and proper model relationships also help keep refresh times predictable even with millions of records."
    },
    {
      "id": "Q403",
      "q": "How do you manage stakeholder expectations when project scope keeps changing?",
      "type": "beh",
      "category": "Stakeholder Management",
      "difficulty": "Intermediate",
      "keywords": [
        "communication",
        "change management",
        "expectations"
      ],
      "company_fit": "Aligns with AGR’s emphasis on transparent client communication.",
      "a": "When scope shifts, I pause to reclarify priorities and impact. I summarize the requested changes, estimate timeline and effort, and propose options — like phasing or trimming low-value items. I keep notes in shared docs so everyone has the same reference, and I use regular check-ins to manage shifting expectations constructively."
    },
    {
      "id": "Q404",
      "q": "Explain filter propagation in Power BI relationships.",
      "type": "tech",
      "category": "DAX & Modeling",
      "difficulty": "Advanced",
      "keywords": [
        "filter context",
        "relationship direction",
        "bi-directional"
      ],
      "company_fit": "Tests deep modeling competence under complex reporting structures.",
      "a": "Filter propagation defines how filters move through related tables. In a one-to-many relationship, filters flow from one to many. Enabling bi-directional filtering allows reverse flow but risks ambiguity. I use it selectively—usually only in bridge tables or many-to-many setups—because it can affect performance and calculation accuracy."
    },
    {
      "id": "Q405",
      "q": "How would you present a data quality issue to leadership under tight deadlines?",
      "type": "beh",
      "category": "Power BI - Communication",
      "difficulty": "Intermediate",
      "keywords": [
        "data quality",
        "leadership",
        "communication"
      ],
      "company_fit": "Emphasizes integrity and clear communication—core to AGR’s consulting model.",
      "a": "I’d present it factually with options. For example, I’d explain what’s wrong, how much data is affected, and whether we can still deliver partial results. I’d share a timeline for correction and mitigation. Clear, unemotional communication keeps trust intact while showing ownership of the solution."
    },
    {
      "id": "Q406",
      "q": "What’s your approach to designing KPIs for executive dashboards?",
      "type": "tech",
      "category": "Dashboard Design",
      "difficulty": "Intermediate",
      "keywords": [
        "KPI",
        "executive reporting",
        "design principles"
      ],
      "company_fit": "Shows focus on high-level decision-making impact for executives.",
      "a": "I start with the business objective and derive metrics that reflect outcomes, not just activity. Each KPI includes a clear target and trend indicator. I design them with simplicity—large fonts, consistent colors, and contextual cues. I keep the layout clean, grouping KPIs logically and ensuring each one answers a critical question."
    },
    {
      "id": "Q407",
      "q": "Describe how you ensure your ETL logic is auditable and maintainable.",
      "type": "tech",
      "category": "ETL & Data Engineering",
      "difficulty": "Advanced",
      "keywords": [
        "ETL",
        "auditing",
        "logging",
        "documentation"
      ],
      "company_fit": "Highlights Will’s structured approach aligned with governance standards.",
      "a": "I modularize Power Query steps and document each transformation inline. I create staging layers with timestamps, use validation tables to track row counts, and log refresh durations. Naming conventions and comments make it easy for others to audit transformations. I keep data lineage mapped so issues can be traced quickly."
    },
    {
      "id": "Q408",
      "q": "What’s one Power BI feature you find underrated and why?",
      "type": "tech",
      "category": "Power BI Features",
      "difficulty": "Intermediate",
      "keywords": [
        "dataflows",
        "parameters",
        "deployment pipelines"
      ],
      "company_fit": "Shows continuous learning and curiosity about the platform.",
      "a": "I’d say dataflows are underrated. They centralize transformation logic, improve reusability, and reduce duplication across reports. Using them helps standardize KPIs and ensures consistency across teams. It’s a powerful way to scale data preparation without needing separate ETL tools."
    },
    {
      "id": "Q409",
      "q": "Tell me about a time when you had to adapt quickly to a new data system or platform.",
      "type": "beh",
      "category": "Adaptability",
      "difficulty": "Intermediate",
      "keywords": [
        "adaptability",
        "learning",
        "technical onboarding"
      ],
      "company_fit": "Matches AGR’s value of fast-learning consultants in complex environments.",
      "a": "When I joined a new engagement using Snowflake instead of SQL Server, I quickly reviewed schema differences and query optimizations. I built a mini test dataset and validated my DAX queries against Snowflake views. Within a week, I was building performant reports and training others on how to use the new connection efficiently."
    },
    {
      "id": "Q410",
      "q": "How would you handle a stakeholder pushing for a metric you believe is misleading?",
      "type": "beh",
      "category": "Ethics & Data Integrity",
      "difficulty": "Advanced",
      "keywords": [
        "ethics",
        "stakeholders",
        "metrics",
        "communication"
      ],
      "company_fit": "Evaluates integrity and ethical decision-making—critical for government contracts.",
      "a": "I’d clarify their intent—often they want to highlight progress but don’t realize the metric misrepresents reality. I’d show side-by-side views: one accurate, one distorted, explaining the difference. By aligning the discussion on outcomes rather than optics, we can find a truthful, data-backed compromise that preserves integrity."
    },
    {
      "id": "Q411",
      "q": "Describe how you use design thinking when developing dashboards.",
      "type": "tech",
      "category": "UX & Design",
      "difficulty": "Intermediate",
      "keywords": [
        "design thinking",
        "user experience",
        "visual hierarchy"
      ],
      "company_fit": "Shows human-centered mindset fitting AGR’s pragmatic modernization ethos.",
      "a": "I treat dashboards like products, not reports. I start with empathy—what the user needs and how they’ll consume it. I sketch layouts, test prototypes with users, and refine based on feedback. My guiding principles are clarity, context, and consistency—design should make insight effortless."
    },
    {
      "id": "Q412",
      "q": "Have you ever automated manual data tasks? How?",
      "type": "tech",
      "category": "Automation",
      "difficulty": "Intermediate",
      "keywords": [
        "automation",
        "Power Query",
        "Power Automate"
      ],
      "company_fit": "Shows initiative and process improvement focus.",
      "a": "At Quilt Software I automated weekly sales pipeline updates that used to take hours. I built Power Query scripts to extract CRM data, cleaned it automatically, and refreshed the dashboard on a schedule. It cut reporting time from 4 hours to 10 minutes and eliminated copy-paste errors."
    },
    {
      "id": "Q413",
      "q": "What’s your philosophy on data storytelling?",
      "type": "beh",
      "category": "Storytelling",
      "difficulty": "Intermediate",
      "keywords": [
        "storytelling",
        "communication",
        "visualization"
      ],
      "company_fit": "Reflects AGR’s focus on data-driven narratives for executive decision-making.",
      "a": "I think good storytelling blends accuracy with empathy. Data on its own doesn’t persuade—it needs context and emotion. I structure insights like a narrative: problem, evidence, implication, and recommendation. The goal is to move the audience from awareness to action."
    },
    {
      "id": "Q414",
      "q": "How do you ensure security when handling sensitive datasets?",
      "type": "tech",
      "category": "Power BI - Security",
      "difficulty": "Advanced",
      "keywords": [
        "RLS",
        "data security",
        "governance"
      ],
      "company_fit": "Critical for government compliance and public trust.",
      "a": "I apply role-level security for user segmentation, use Azure AD for access control, and ensure datasets follow least privilege principles. I monitor activity logs for anomalies and encrypt connections through gateways. Documentation and consistent review cycles keep the system compliant."
    },
    {
      "id": "Q415",
      "q": "Describe a project where you had to balance multiple stakeholder interests.",
      "type": "beh",
      "category": "Collaboration",
      "difficulty": "Intermediate",
      "keywords": [
        "stakeholders",
        "collaboration",
        "compromise"
      ],
      "company_fit": "Demonstrates diplomacy and client empathy.",
      "a": "At Waste Management, finance wanted budget dashboards while operations needed daily KPIs. I ran workshops, mapped overlapping data, and built modular dashboards—finance saw monthly rollups, ops saw daily detail. Delivering shared value to both sides built lasting trust."
    },
    {
      "id": "Q416",
      "q": "How do you decide when to use DirectQuery vs Import mode?",
      "type": "tech",
      "category": "Performance & Modeling",
      "difficulty": "Advanced",
      "keywords": [
        "DirectQuery",
        "Import",
        "data modeling"
      ],
      "company_fit": "Validates architectural judgment for enterprise-scale BI systems.",
      "a": "If freshness is critical and latency acceptable, I use DirectQuery. If speed and complex modeling matter more, I use Import. For hybrid needs, composite models balance both. I also assess gateway load, row volume, and transformation complexity before deciding."
    },
    {
      "id": "Q417",
      "q": "What’s one time you turned a failed report into a learning moment?",
      "type": "beh",
      "category": "Resilience",
      "difficulty": "Intermediate",
      "keywords": [
        "failure",
        "resilience",
        "learning"
      ],
      "company_fit": "Shows humility and growth mindset.",
      "a": "Once a dashboard refresh failed overnight due to schema changes. I owned it, traced the root cause, and rebuilt the query with dynamic schema detection. Then I wrote a checklist for schema validation before refresh. The issue never repeated and became team standard practice."
    },
    {
      "id": "Q418",
      "q": "How do you approach documentation for your BI solutions?",
      "type": "tech",
      "category": "Governance & Maintenance",
      "difficulty": "Intermediate",
      "keywords": [
        "documentation",
        "knowledge transfer",
        "governance"
      ],
      "company_fit": "Highlights maintainability and transparency in delivery.",
      "a": "I document everything—data sources, transformation logic, key measures, refresh cadence, and assumptions. I use Markdown docs or Confluence pages, linking visuals to underlying logic. This ensures future developers can trace logic quickly and prevents knowledge silos."
    },
    {
      "id": "Q419",
      "q": "Describe your ideal team culture.",
      "type": "beh",
      "category": "Culture Fit",
      "difficulty": "Basic",
      "keywords": [
        "teamwork",
        "culture",
        "values"
      ],
      "company_fit": "Confirms alignment with AGR’s collaborative, mission-driven environment.",
      "a": "I thrive in teams that balance autonomy with accountability. I like open communication, where ideas and concerns are discussed early. A culture where quality matters but people still help each other out when things get tough—that’s where I do my best work."
    },
    {
      "id": "Q420",
      "q": "What advice would you give a junior analyst joining your team?",
      "type": "beh",
      "category": "Mentorship",
      "difficulty": "Basic",
      "keywords": [
        "mentoring",
        "teamwork",
        "growth"
      ],
      "company_fit": "Reflects leadership potential and willingness to teach.",
      "a": "Start by understanding the business context behind every query. Always validate your data before visualizing it, and ask questions early. Learn DAX fundamentals, version control your files, and don’t be afraid to show drafts—it’s better to iterate together than perfect alone."
    },
    {
      "id": "Q421",
      "q": "Tell me about a time you improved a process that others had accepted as 'just the way things are.'",
      "type": "beh",
      "category": "Process Improvement",
      "difficulty": "Intermediate",
      "keywords": [
        "efficiency",
        "automation",
        "change"
      ],
      "company_fit": "Demonstrates proactive mindset and innovation in legacy modernization contexts.",
      "a": "At New Beginnings, monthly attendance reports took days to reconcile. I automated the process using Excel macros and SQL queries that flagged discrepancies instantly. The new workflow cut reporting time from 10 hours to under one and improved data accuracy."
    },
    {
      "id": "Q422",
      "q": "Describe a time you had to influence without authority.",
      "type": "beh",
      "category": "Leadership",
      "difficulty": "Advanced",
      "keywords": [
        "influence",
        "collaboration",
        "communication"
      ],
      "company_fit": "Aligns with AGR’s matrixed project environments where persuasion matters.",
      "a": "When leading data migration at Quilt Software, I wasn’t a manager but coordinated sales ops and IT. I built a small demo showing performance benefits of centralizing data. That tangible example helped secure buy-in and alignment without formal authority."
    },
    {
      "id": "Q423",
      "q": "How do you approach making decisions under uncertainty?",
      "type": "beh",
      "category": "Decision Making",
      "difficulty": "Advanced",
      "keywords": [
        "uncertainty",
        "judgment",
        "risk management"
      ],
      "company_fit": "Reflects sound decision-making needed for government-facing analytics.",
      "a": "I identify what’s known, what’s uncertain, and what’s critical to decide now. I use small experiments or partial data to narrow uncertainty. Then I communicate tradeoffs clearly. The goal is to make the best informed choice while minimizing downstream risk."
    },
    {
      "id": "Q424",
      "q": "If your manager asked for an unrealistic deadline, what would you do?",
      "type": "beh",
      "category": "Conflict Resolution",
      "difficulty": "Intermediate",
      "keywords": [
        "communication",
        "deadlines",
        "scope negotiation"
      ],
      "company_fit": "Shows maturity and transparency under delivery pressure.",
      "a": "I’d clarify the goal behind the deadline, then break tasks into phases. If the scope truly can’t fit, I’d propose a minimal viable version first and share clear impact of rushing quality. Most of the time, once they see structured reasoning, we find a fair compromise."
    },
    {
      "id": "Q425",
      "q": "Tell me about a project that failed to meet expectations. What did you learn?",
      "type": "beh",
      "category": "Reflection",
      "difficulty": "Intermediate",
      "keywords": [
        "failure",
        "learning",
        "accountability"
      ],
      "company_fit": "Demonstrates humility and self-awareness, valued in consulting.",
      "a": "An early dashboard I built at Waste Management looked great but wasn’t user-friendly. Users struggled with filters. After feedback, I rebuilt it around user workflows, not metrics. It taught me design isn’t just visuals—it’s empathy for how people use data daily."
    },
    {
      "id": "Q426",
      "q": "What’s your method for handling incomplete or inconsistent data sources?",
      "type": "tech",
      "category": "Data Quality",
      "difficulty": "Intermediate",
      "keywords": [
        "data validation",
        "profiling",
        "ETL"
      ],
      "company_fit": "Reinforces Will’s structured analytical approach to data reliability.",
      "a": "I start with profiling to assess patterns and missingness. I create validation rules in Power Query and log anomalies for stakeholder review. If gaps persist, I design proxy metrics or data blends that preserve analytical integrity while waiting on fixes."
    },
    {
      "id": "Q427",
      "q": "How would you manage conflicts between technical accuracy and business narrative?",
      "type": "beh",
      "category": "Data Ethics",
      "difficulty": "Advanced",
      "keywords": [
        "data ethics",
        "communication",
        "business pressure"
      ],
      "company_fit": "Tests judgment and communication under ethical tension.",
      "a": "If a narrative oversimplifies data, I’d reframe it—maintaining accuracy but highlighting the story through context and visualization. Transparency matters. I’d rather present a nuanced truth than a simplified distortion that could mislead decisions."
    },
    {
      "id": "Q428",
      "q": "How do you ensure knowledge transfer after delivering a project?",
      "type": "tech",
      "category": "Power BI - Governance",
      "difficulty": "Intermediate",
      "keywords": [
        "documentation",
        "training",
        "handover"
      ],
      "company_fit": "Matches AGR’s emphasis on maintainability and client empowerment.",
      "a": "I prepare user guides, record short walkthrough videos, and hold live Q&A sessions. I also annotate Power BI models and create data dictionaries. This makes handoff smooth and empowers teams to maintain the solution independently."
    },
    {
      "id": "Q429",
      "q": "Tell me about a time you made a mistake that no one else caught.",
      "type": "beh",
      "category": "Integrity",
      "difficulty": "Advanced",
      "keywords": [
        "accountability",
        "integrity"
      ],
      "company_fit": "Tests honesty and self-correction—core to AGR trust culture.",
      "a": "Once I used the wrong fiscal year logic in a DAX measure. I noticed it later and immediately fixed it, documented the correction, and sent a note explaining the change. Admitting it upfront built credibility and prevented confusion later."
    },
    {
      "id": "Q430",
      "q": "What’s your approach to mentoring junior data professionals?",
      "type": "beh",
      "category": "Leadership",
      "difficulty": "Intermediate",
      "keywords": [
        "mentorship",
        "coaching"
      ],
      "company_fit": "Encourages knowledge sharing across project teams.",
      "a": "I start with hands-on shadowing—walking them through thought process, not just code. I give small challenges with clear feedback loops. I also explain mistakes as part of learning, so they gain both confidence and discipline."
    },
    {
      "id": "Q431",
      "q": "If you were leading this BI project, what would you do first?",
      "type": "beh",
      "category": "Leadership Thinking",
      "difficulty": "Advanced",
      "keywords": [
        "leadership",
        "strategy",
        "ownership"
      ],
      "company_fit": "Evaluates readiness for future project lead roles.",
      "a": "I’d start by aligning on the project’s success metrics and stakeholders’ core decisions. Then I’d map data sources, define governance, and establish a feedback cadence. Setting the structure early helps everything else move smoothly later."
    },
    {
      "id": "Q432",
      "q": "What is one principle you always apply to dashboard design?",
      "type": "tech",
      "category": "Design Principles",
      "difficulty": "Basic",
      "keywords": [
        "clarity",
        "visual hierarchy"
      ],
      "company_fit": "Reflects AGR’s design and usability standards.",
      "a": "Clarity above all. Every element should have purpose. Users should find insights in seconds, not minutes. I rely on hierarchy, contrast, and white space to make data intuitive and visually balanced."
    },
    {
      "id": "Q433",
      "q": "What’s a professional achievement you’re proudest of?",
      "type": "beh",
      "category": "Achievements",
      "difficulty": "Basic",
      "keywords": [
        "success",
        "impact"
      ],
      "company_fit": "Lets Will convey meaningful personal wins aligned with impact-driven culture.",
      "a": "At Quilt Software I built a unified revenue dashboard used daily by leadership. It replaced multiple Excel trackers and provided real-time forecasting. Seeing my work directly influence strategic meetings felt incredibly rewarding."
    },
    {
      "id": "Q434",
      "q": "How do you prepare for executive presentations?",
      "type": "beh",
      "category": "Power BI - Communication",
      "difficulty": "Intermediate",
      "keywords": [
        "presentation",
        "communication",
        "stakeholder"
      ],
      "company_fit": "Reveals readiness for high-visibility environments.",
      "a": "I tailor the story for decision-makers—focus on key metrics, trends, and implications. I anticipate likely questions and pre-build visuals to answer them. Simplicity and confidence matter more than technical depth in those settings."
    },
    {
      "id": "Q435",
      "q": "What would you do if data showed your project wasn’t achieving expected results?",
      "type": "beh",
      "category": "Problem Solving",
      "difficulty": "Advanced",
      "keywords": [
        "data-driven",
        "iteration",
        "feedback"
      ],
      "company_fit": "Aligns with AGR’s outcome-based delivery mindset.",
      "a": "I’d diagnose first—check data quality, assumptions, and whether KPIs truly reflect outcomes. I’d collaborate with stakeholders to pivot tactics or metrics if needed. The key is not to defend past work but to reorient toward the right result."
    },
    {
      "id": "Q436",
      "q": "How do you handle ambiguity when defining metrics across departments?",
      "type": "beh",
      "category": "Collaboration",
      "difficulty": "Intermediate",
      "keywords": [
        "alignment",
        "governance",
        "metrics"
      ],
      "company_fit": "Demonstrates cross-functional diplomacy.",
      "a": "I host short working sessions to map metric definitions side by side. Then we align terminology and data sources. Once we sign off, I document the definitions and lock them in as reference metrics for all teams."
    },
    {
      "id": "Q437",
      "q": "What’s your approach to testing before deployment?",
      "type": "tech",
      "category": "Testing",
      "difficulty": "Intermediate",
      "keywords": [
        "testing",
        "validation",
        "UAT"
      ],
      "company_fit": "Highlights attention to quality assurance.",
      "a": "I compare Power BI outputs against source queries in SQL, check row counts, totals, and drill-downs. Then I run user acceptance testing with sample stakeholders to confirm usability and performance. I only publish after all checks pass."
    },
    {
      "id": "Q438",
      "q": "How do you keep users engaged after launching a report?",
      "type": "beh",
      "category": "Adoption",
      "difficulty": "Intermediate",
      "keywords": [
        "adoption",
        "feedback",
        "user engagement"
      ],
      "company_fit": "Ensures long-term value realization.",
      "a": "I schedule follow-up sessions to review new insights users discovered and gather pain points. I track usage metrics and send quick tips or updates through Teams channels. Keeping it alive helps ensure adoption and continuous improvement."
    },
    {
      "id": "Q439",
      "q": "What inspires your approach to analytics?",
      "type": "beh",
      "category": "Motivation",
      "difficulty": "Basic",
      "keywords": [
        "motivation",
        "analytics",
        "vision"
      ],
      "company_fit": "Reflects alignment with data-for-impact culture.",
      "a": "I’m motivated by clarity—helping people see truth in complex systems. When data empowers smarter, faster, and fairer decisions, it feels like technology fulfilling its best purpose."
    },
    {
      "id": "Q440",
      "q": "How do you stay organized when managing multiple projects?",
      "type": "beh",
      "category": "Organization",
      "difficulty": "Intermediate",
      "keywords": [
        "organization",
        "prioritization",
        "planning"
      ],
      "company_fit": "Supports efficiency across concurrent engagements.",
      "a": "I use a combination of Notion and Teams Planner. I list each project’s milestones, dependencies, and key risks. I block focus time for deep work and leave visible status notes so others always know what’s next."
    },
    {
      "id": "Q441",
      "q": "What’s the biggest challenge in public-sector BI projects, in your opinion?",
      "type": "beh",
      "category": "Industry Insight",
      "difficulty": "Advanced",
      "keywords": [
        "public sector",
        "BI",
        "challenges"
      ],
      "company_fit": "Shows understanding of AGR’s main market focus.",
      "a": "Legacy systems and governance layers can slow innovation. The key is patience and documentation—building trust by showing transparency and repeatable results, then scaling once confidence grows."
    },
    {
      "id": "Q442",
      "q": "How do you prioritize learning new technologies?",
      "type": "beh",
      "category": "Growth Mindset",
      "difficulty": "Basic",
      "keywords": [
        "learning",
        "self-development"
      ],
      "company_fit": "Reinforces continual improvement and curiosity.",
      "a": "I focus on tools that directly enhance my workflow—like DAX Studio for debugging or Azure Synapse for scalability. I learn just-in-time for upcoming projects, ensuring what I study immediately applies in practice."
    },
    {
      "id": "Q443",
      "q": "If you had to summarize your professional philosophy in one sentence, what would it be?",
      "type": "beh",
      "category": "Reflection",
      "difficulty": "Basic",
      "keywords": [
        "values",
        "philosophy"
      ],
      "company_fit": "Tests alignment with AGR’s purpose-driven ethos.",
      "a": "Build systems that make good decisions easier for others—reliably, transparently, and with integrity."
    },
    {
      "id": "Q444",
      "q": "What role does empathy play in your analytics work?",
      "type": "beh",
      "category": "Soft Skills",
      "difficulty": "Basic",
      "keywords": [
        "empathy",
        "communication",
        "UX"
      ],
      "company_fit": "Ties to AGR’s 'human-first transformation' value.",
      "a": "Empathy shapes everything—from how I frame metrics to how I design visuals. Understanding the person behind the data ensures insights actually help them, not overwhelm or mislead them."
    },
    {
      "id": "Q445",
      "q": "How do you decide when to build vs buy a BI solution?",
      "type": "tech",
      "category": "Power BI - Architecture",
      "difficulty": "Advanced",
      "keywords": [
        "build vs buy",
        "architecture",
        "decision-making"
      ],
      "company_fit": "Reflects pragmatic decision-making under budget constraints.",
      "a": "I compare total cost of ownership, integration effort, and scalability. If existing solutions meet 80% of needs, I’d adapt them. If flexibility or data ownership matters more, I’d build. The right choice depends on longevity and maintenance costs."
    },
    {
      "id": "Q446",
      "q": "How do you communicate complex technical issues to non-technical clients?",
      "type": "beh",
      "category": "Power BI - Communication",
      "difficulty": "Intermediate",
      "keywords": [
        "communication",
        "translation"
      ],
      "company_fit": "Emphasizes clarity and approachability with clients.",
      "a": "I translate issues into impact—like how a refresh delay affects decision timing. I use visuals, analogies, and avoid jargon. Most clients just want to know: what happened, why, and when it’ll be fixed."
    },
    {
      "id": "Q447",
      "q": "What’s your framework for diagnosing underperforming reports?",
      "type": "tech",
      "category": "Performance Optimization",
      "difficulty": "Advanced",
      "keywords": [
        "troubleshooting",
        "performance",
        "optimization"
      ],
      "company_fit": "Tests systematic problem-solving ability.",
      "a": "I use a four-step check: visuals → DAX → model → data source. Start with Performance Analyzer, then DAX Studio for query time, review relationships, and confirm query folding. Each layer narrows the issue efficiently."
    },
    {
      "id": "Q448",
      "q": "If you could automate one recurring process across AGR’s clients, what would it be?",
      "type": "beh",
      "category": "Innovation",
      "difficulty": "Intermediate",
      "keywords": [
        "automation",
        "innovation",
        "efficiency"
      ],
      "company_fit": "Shows initiative and product-thinking mindset.",
      "a": "I’d automate KPI definition management. Many clients struggle with consistent metrics. A shared Power App that defines, approves, and documents KPIs across teams would eliminate ambiguity and save countless analyst hours."
    },
    {
      "id": "Q449",
      "q": "What’s the most important soft skill for BI consultants?",
      "type": "beh",
      "category": "Soft Skills",
      "difficulty": "Basic",
      "keywords": [
        "consulting",
        "communication",
        "stakeholder management"
      ],
      "company_fit": "Reflects AGR’s consulting DNA.",
      "a": "Active listening. Technical skills matter, but truly understanding what clients are asking—sometimes between the lines—makes all the difference in delivering value."
    },
    {
      "id": "Q450",
      "q": "What motivates you to work in consulting instead of in-house analytics?",
      "type": "beh",
      "category": "Motivation",
      "difficulty": "Intermediate",
      "keywords": [
        "consulting",
        "learning",
        "impact"
      ],
      "company_fit": "Tests enthusiasm for variety and client service.",
      "a": "I like variety and challenge. Consulting exposes me to new systems, industries, and people constantly. It pushes me to stay sharp and adaptable, and I enjoy knowing each project tangibly improves how organizations operate."
    },
    {
      "id": "Q451",
      "q": "What is a primary key in SQL?",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Beginner",
      "keywords": [
        "primary key",
        "unique",
        "non-nullable",
        "identifier"
      ],
      "company_fit": "Essential database knowledge for any data role.",
      "a": "A primary key is a unique, non-nullable identifier for each record in a table. It has three key characteristics: it can't be duplicated among entries in a table, it cannot be blank or null, and each table can only have one primary key. The primary key can be either a single column or a combination of columns."
    },
    {
      "id": "Q452",
      "q": "What is a JOIN in SQL and what are the main types?",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Beginner",
      "keywords": [
        "JOIN",
        "INNER JOIN",
        "LEFT JOIN",
        "RIGHT JOIN",
        "OUTER JOIN"
      ],
      "company_fit": "Core SQL skill for combining data from multiple sources.",
      "a": "A JOIN is a function in SQL that allows you to combine two different tables based on a set of logic and columns that you define. The four main types are: INNER JOIN retrieves records that have matching values in both tables; FULL OUTER JOIN retrieves all records where there is a match in either table, with nulls where there's no match; LEFT JOIN retrieves all records from the left table and matched records from the right table; RIGHT JOIN is the opposite, retrieving all records from the right table and matched records from the left."
    },
    {
      "id": "Q453",
      "q": "What's the difference between SQL and MySQL?",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Beginner",
      "keywords": [
        "SQL",
        "MySQL",
        "RDBMS",
        "language"
      ],
      "company_fit": "Shows understanding of database tools vs. languages.",
      "a": "SQL is a coding language used to interact with relational databases. It's an abstraction—just the syntax and structure of the language itself. MySQL, on the other hand, is a software—a relational database management system (RDBMS) that implements those databases. MySQL provides a graphical interface to update schemas, define data types, manage user permissions, and perform other administrative tasks. SQL is what you write; MySQL is what runs it."
    },
    {
      "id": "Q454",
      "q": "What's the difference between WHERE and HAVING clauses in SQL?",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Intermediate",
      "keywords": [
        "WHERE",
        "HAVING",
        "GROUP BY",
        "filtering"
      ],
      "company_fit": "Demonstrates understanding of aggregation and filtering.",
      "a": "WHERE filters data at the row level before any aggregation happens—it checks each individual row to see if it meets the condition. HAVING filters data after aggregation—it works with GROUP BY statements to filter the grouped results. For example, WHERE population > 10000000 filters individual countries, while HAVING SUM(population) > 100000000 would filter continents based on their total aggregated population. Use WHERE for row-level filtering and HAVING for filtering aggregated groups."
    },
    {
      "id": "Q455",
      "q": "Explain INNER JOIN vs. LEFT JOIN with a practical example.",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Beginner",
      "keywords": [
        "INNER JOIN",
        "LEFT JOIN",
        "matching",
        "nulls"
      ],
      "company_fit": "Tests practical understanding of join behavior.",
      "a": "With an INNER JOIN, you only get rows where both tables have matching values. If you join a customers table to an orders table, you'll only see customers who have placed orders. With a LEFT JOIN, you get all rows from the left table regardless of whether there's a match in the right table. So you'd see all customers, including those who haven't placed orders yet—they'd just have null values in the order columns. LEFT JOIN is useful when you want to preserve all records from your primary table."
    },
    {
      "id": "Q456",
      "q": "When would you use a subquery instead of a JOIN?",
      "type": "tech",
      "category": "SQL Advanced",
      "difficulty": "Advanced",
      "keywords": [
        "subquery",
        "nested query",
        "JOIN",
        "performance"
      ],
      "company_fit": "Shows advanced SQL problem-solving skills.",
      "a": "I use subqueries when I need to filter based on aggregated data from another table, or when the logic is clearer as a nested query. For example, if I want to find all actors who worked with a specific person, I might use a subquery to first get the list of movie IDs that person appeared in, then use that list in an IN clause. Subqueries are also useful when you need to perform calculations in stages. However, if performance is critical, I'd evaluate whether a JOIN would be more efficient, since subqueries can sometimes be slower depending on the database optimizer."
    },
    {
      "id": "Q457",
      "q": "What's the purpose of GROUP BY in SQL?",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Beginner",
      "keywords": [
        "GROUP BY",
        "aggregation",
        "SUM",
        "COUNT"
      ],
      "company_fit": "Essential for reporting and aggregation tasks.",
      "a": "GROUP BY collapses rows with the same values in specified columns into summary rows, allowing you to perform aggregate functions like COUNT, SUM, AVG, MIN, or MAX on each group. For example, if you have a sales table and GROUP BY customer_id, you can get the total sales per customer. It essentially transforms detailed transactional data into summarized reporting data. Any column in the SELECT statement that isn't part of an aggregate function must be included in the GROUP BY clause."
    },
    {
      "id": "Q458",
      "q": "How would you find duplicate records in a SQL table?",
      "type": "tech",
      "category": "SQL Practical",
      "difficulty": "Intermediate",
      "keywords": [
        "duplicates",
        "GROUP BY",
        "HAVING",
        "COUNT"
      ],
      "company_fit": "Common data quality task in any analytics role.",
      "a": "I'd use GROUP BY with a HAVING clause to identify duplicates. For example: SELECT email, COUNT(*) as count FROM users GROUP BY email HAVING COUNT(*) > 1. This groups records by the column you're checking for duplicates, then filters to only show groups with more than one record. You can extend this to multiple columns if you're checking for duplicates across a combination of fields. If you need to see all the duplicate rows with their full details, you could use this query as a subquery or join it back to the original table."
    },
    {
      "id": "Q459",
      "q": "What's the difference between DELETE and TRUNCATE?",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Intermediate",
      "keywords": [
        "DELETE",
        "TRUNCATE",
        "transaction",
        "rollback"
      ],
      "company_fit": "Important for data management and safety.",
      "a": "DELETE removes rows one by one and logs each deletion, so it can be rolled back within a transaction and triggers fire for each row. TRUNCATE removes all rows in one operation by deallocating the data pages, making it much faster for large tables. However, TRUNCATE can't be rolled back in most databases, doesn't fire triggers, and resets auto-increment counters. DELETE can use a WHERE clause to remove specific rows; TRUNCATE removes everything. I use DELETE when I need precision and recoverability, TRUNCATE when I need to quickly clear an entire table and I'm certain about it."
    },
    {
      "id": "Q460",
      "q": "Explain what a foreign key is and why it's important.",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Beginner",
      "keywords": [
        "foreign key",
        "referential integrity",
        "relationship",
        "constraint"
      ],
      "company_fit": "Shows understanding of relational database design.",
      "a": "A foreign key is a column or set of columns in one table that references the primary key in another table. It establishes a link between the two tables and enforces referential integrity—meaning you can't insert a value in the foreign key column unless it exists as a primary key in the referenced table. For example, an order table might have a customer_id foreign key that references the customer table's primary key. This prevents orphaned records and ensures data consistency. Foreign keys are essential for maintaining data quality and defining relationships in a relational database."
    },
    {
      "id": "Q461",
      "q": "What are aggregate functions in SQL? Name the common ones.",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Beginner",
      "keywords": [
        "aggregate functions",
        "COUNT",
        "SUM",
        "AVG",
        "MIN",
        "MAX"
      ],
      "company_fit": "Basic SQL knowledge for reporting and analysis.",
      "a": "Aggregate functions perform calculations on a set of rows and return a single value. The most common ones are COUNT (counts rows), SUM (adds up values), AVG (calculates average), MIN (finds minimum value), and MAX (finds maximum value). They're typically used with GROUP BY to calculate statistics for each group, like total sales per region or average order value per customer. These functions ignore NULL values except for COUNT(*), which counts all rows including those with NULLs."
    },
    {
      "id": "Q462",
      "q": "What's the difference between UNION and UNION ALL?",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Intermediate",
      "keywords": [
        "UNION",
        "UNION ALL",
        "duplicates",
        "combine"
      ],
      "company_fit": "Useful for combining data from multiple sources.",
      "a": "UNION combines the results of two or more SELECT statements and automatically removes duplicate rows, while UNION ALL combines results and keeps all duplicates. UNION ALL is faster because it doesn't have to perform the deduplication step. I use UNION when I need a distinct set of results from multiple queries, like combining customer lists from different regions where the same customer might appear in both. I use UNION ALL when I know there are no duplicates or when I want to keep them, like combining transaction logs from different time periods."
    },
    {
      "id": "Q463",
      "q": "How would you get the second highest salary from an employees table?",
      "type": "tech",
      "category": "SQL Practical",
      "difficulty": "Intermediate",
      "keywords": [
        "ranking",
        "ORDER BY",
        "LIMIT",
        "OFFSET",
        "subquery"
      ],
      "company_fit": "Classic interview question testing SQL problem-solving.",
      "a": "There are several approaches. One simple way is using ORDER BY with LIMIT and OFFSET: SELECT DISTINCT salary FROM employees ORDER BY salary DESC LIMIT 1 OFFSET 1. Another approach uses a subquery: SELECT MAX(salary) FROM employees WHERE salary < (SELECT MAX(salary) FROM employees). In SQL Server or databases with window functions, I'd use DENSE_RANK() to handle ties properly: SELECT salary FROM (SELECT salary, DENSE_RANK() OVER (ORDER BY salary DESC) as rank FROM employees) WHERE rank = 2. The best approach depends on how you want to handle ties and which database you're using."
    },
    {
      "id": "Q464",
      "q": "What's the purpose of indexes in SQL and when should you use them?",
      "type": "tech",
      "category": "SQL Performance",
      "difficulty": "Advanced",
      "keywords": [
        "indexes",
        "performance",
        "query optimization",
        "trade-offs"
      ],
      "company_fit": "Shows understanding of performance optimization.",
      "a": "Indexes are data structures that improve query performance by allowing the database to find rows faster without scanning the entire table—similar to an index in a book. I create indexes on columns that are frequently used in WHERE clauses, JOIN conditions, or ORDER BY statements. However, indexes have trade-offs: they speed up reads but slow down writes (INSERT, UPDATE, DELETE) because the index needs to be maintained. They also consume storage space. I typically index primary keys, foreign keys, and columns used in frequent queries, but avoid over-indexing. For high-cardinality columns that are searched often, indexes provide the most benefit."
    },
    {
      "id": "Q465",
      "q": "Explain the concept of NULL in SQL and how to handle it.",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Beginner",
      "keywords": [
        "NULL",
        "IS NULL",
        "COALESCE",
        "missing data"
      ],
      "company_fit": "Critical for accurate data analysis and reporting.",
      "a": "NULL represents the absence of a value—it's not zero, not an empty string, it's unknown or undefined. NULLs behave differently in SQL: any comparison with NULL (=, <, >) returns UNKNOWN, not true or false. To check for NULL, you must use IS NULL or IS NOT NULL. Aggregate functions like SUM and AVG ignore NULLs. To handle NULLs, I use COALESCE to provide default values: COALESCE(phone_number, 'N/A'), or ISNULL/NULLIF depending on the database. Understanding NULL behavior is crucial because ignoring it can lead to incorrect query results, especially in JOINs and WHERE clauses."
    },
    {
      "id": "Q466",
      "q": "What's the difference between DDL and DML commands?",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Beginner",
      "keywords": [
        "DDL",
        "DML",
        "CREATE",
        "ALTER",
        "DROP",
        "INSERT",
        "UPDATE",
        "DELETE",
        "rollback"
      ],
      "company_fit": "Core SQL knowledge about command types.",
      "a": "DDL stands for Data Definition Language and deals with changing the structure of tables—commands like CREATE, ALTER, and DROP. DML stands for Data Manipulation Language and deals with manipulating the data itself—commands like INSERT, UPDATE, and DELETE. The most important difference is that DML commands can be rolled back if you need to undo changes, whereas DDL commands cannot be rolled back. When you DROP or TRUNCATE a table, it's gone permanently. This distinction is critical for data safety and recovery."
    },
    {
      "id": "Q467",
      "q": "What is COALESCE and when would you use it?",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Intermediate",
      "keywords": [
        "COALESCE",
        "NULL",
        "default value",
        "JOINs"
      ],
      "company_fit": "Practical function for handling missing data.",
      "a": "COALESCE is a function that replaces NULL values with a default value you specify. For example, COALESCE(sales_amount, 0) would replace any NULL sales with zero. This is especially useful when joining tables—if a customer hasn't made a purchase, the order amount will be NULL, but you can replace it with 0 for cleaner reporting. It's also critical for calculations: you can't calculate an average if you have NULLs, but if you replace them with zeros using COALESCE, the calculation works. It takes the first non-NULL value from a list of arguments."
    },
    {
      "id": "Q468",
      "q": "What is a composite key?",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Intermediate",
      "keywords": [
        "composite key",
        "primary key",
        "multiple columns",
        "unique identifier"
      ],
      "company_fit": "Understanding of complex primary key scenarios.",
      "a": "A composite key is a primary key that consists of two or more columns combined together to uniquely identify each row. For example, in an enrollment table, neither student_id nor course_id alone might be unique (since one student takes multiple courses and one course has multiple students), but the combination of student_id and course_id together forms a unique identifier for each enrollment. This is still considered one primary key for the table, just made up of multiple columns. It's commonly used in many-to-many relationship junction tables."
    },
    {
      "id": "Q469",
      "q": "How many JOINs do you need to combine N tables?",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Beginner",
      "keywords": [
        "JOIN",
        "multiple tables",
        "n-1 formula"
      ],
      "company_fit": "Tests understanding of join mechanics.",
      "a": "You need N minus 1 joins to combine N tables. For example, to join 3 tables, you need 2 joins. To join 8 tables, you need 7 joins. The formula is always N-1. This is because each JOIN operation connects one table to the existing result set—the first table doesn't need a join, and each subsequent table needs one join to connect to what you've already built. It's a straightforward but important concept that shows you understand how joins chain together."
    },
    {
      "id": "Q470",
      "q": "What is a CROSS JOIN and when would you use it?",
      "type": "tech",
      "category": "SQL Advanced",
      "difficulty": "Advanced",
      "keywords": [
        "CROSS JOIN",
        "Cartesian product",
        "combinations",
        "use cases"
      ],
      "company_fit": "Understanding of specialized join types.",
      "a": "A CROSS JOIN produces the Cartesian product of two tables—every row from the first table is combined with every row from the second table. If table A has 3 rows and table B has 4 rows, the result will have 12 rows. A practical example: if you have a table of t-shirt sizes (Small, Medium, Large) and a table of colors (Red, Blue, Green), a CROSS JOIN would give you all possible combinations—9 unique t-shirt options. Use cases include generating test data, creating all possible combinations for scenarios, or building dimension tables. However, be cautious—cross joins can create massive result sets very quickly."
    },
    {
      "id": "Q471",
      "q": "What is a self JOIN and when would you use it?",
      "type": "tech",
      "category": "SQL Advanced",
      "difficulty": "Advanced",
      "keywords": [
        "self JOIN",
        "same table",
        "hierarchical data",
        "employee-manager"
      ],
      "company_fit": "Shows ability to handle complex relationships.",
      "a": "A self JOIN is when you join a table to itself, typically using table aliases to treat it as two separate tables. The classic example is an employee table where each employee has a manager_id that references another employee_id in the same table. To get each employee's name along with their manager's name, you'd self-join: SELECT e.name as employee, m.name as manager FROM employees e LEFT JOIN employees m ON e.manager_id = m.employee_id. Self joins are perfect for hierarchical data, finding duplicates, or comparing rows within the same table. You need to use different aliases to distinguish between the two 'copies' of the table."
    },
    {
      "id": "Q472",
      "q": "What is the order of execution in a SQL query?",
      "type": "tech",
      "category": "SQL Advanced",
      "difficulty": "Advanced",
      "keywords": [
        "execution order",
        "FROM",
        "WHERE",
        "GROUP BY",
        "HAVING",
        "SELECT",
        "ORDER BY",
        "LIMIT"
      ],
      "company_fit": "Deep understanding of how SQL processes queries.",
      "a": "The order of execution is: FROM → WHERE → GROUP BY → HAVING → SELECT → ORDER BY → LIMIT. It's not the order you write it, but the order SQL processes it. First, FROM identifies the tables. Then WHERE filters individual rows. GROUP BY groups the filtered rows. HAVING filters the grouped results. SELECT determines which columns to return. ORDER BY sorts the results. Finally, LIMIT restricts how many rows to return. This is why you can't reference a column alias from SELECT in your WHERE clause—WHERE executes before SELECT. Understanding this helps you write more efficient queries and troubleshoot errors."
    },
    {
      "id": "Q473",
      "q": "What are window functions in SQL?",
      "type": "tech",
      "category": "SQL Advanced",
      "difficulty": "Advanced",
      "keywords": [
        "window functions",
        "analytical functions",
        "ROW_NUMBER",
        "RANK",
        "DENSE_RANK",
        "LEAD",
        "LAG",
        "OVER",
        "PARTITION BY"
      ],
      "company_fit": "Advanced SQL skill for complex analytics.",
      "a": "Window functions perform calculations across a set of rows related to the current row, without collapsing the result set like GROUP BY does. Common window functions include ROW_NUMBER (assigns unique sequential numbers), RANK (assigns ranks with gaps for ties), DENSE_RANK (assigns ranks without gaps), LEAD (accesses subsequent rows), and LAG (accesses previous rows). They use the OVER clause with optional PARTITION BY to define the window. For example, RANK() OVER (PARTITION BY department ORDER BY salary DESC) ranks employees by salary within each department. Window functions are powerful for running totals, moving averages, and ranking scenarios where you need to keep all rows visible."
    },
    {
      "id": "Q474",
      "q": "What's the difference between RANK and DENSE_RANK?",
      "type": "tech",
      "category": "SQL Advanced",
      "difficulty": "Advanced",
      "keywords": [
        "RANK",
        "DENSE_RANK",
        "window functions",
        "ties",
        "gaps"
      ],
      "company_fit": "Shows understanding of ranking behavior.",
      "a": "Both functions assign ranks, but they handle ties differently. RANK skips numbers after ties—if two people score 98 and get rank 2, the next rank will be 4 (skipping 3). DENSE_RANK never skips numbers—after two people at rank 2, the next rank will be 3. Example: scores 99, 98, 98, 97 would get RANK values 1, 2, 2, 4 but DENSE_RANK values 1, 2, 2, 3. Use DENSE_RANK when you want consecutive rank numbers regardless of ties, like ranking top 5 products where you always want exactly 5 ranks. Use RANK when you want to show the true position, reflecting that if two people tie for second place, no one gets third place."
    },
    {
      "id": "Q475",
      "q": "What is a VIEW and how is it different from a table?",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Intermediate",
      "keywords": [
        "VIEW",
        "virtual table",
        "query storage",
        "no data storage"
      ],
      "company_fit": "Understanding of database objects and optimization.",
      "a": "A VIEW is a virtual table that stores a query, not data. When you query a view, it executes the underlying SQL and returns results dynamically. A table physically stores data on disk. Views are useful for several reasons: they simplify complex queries by encapsulating joins and logic, provide a security layer by exposing only certain columns, and save storage space since they don't duplicate data. However, views can be slower than tables for complex queries since they execute every time. You create a view like: CREATE VIEW customer_orders AS SELECT c.name, o.total FROM customers c JOIN orders o ON c.id = o.customer_id. Then you can simply SELECT * FROM customer_orders."
    },
    {
      "id": "Q476",
      "q": "What is a CTE (Common Table Expression)?",
      "type": "tech",
      "category": "SQL Advanced",
      "difficulty": "Advanced",
      "keywords": [
        "CTE",
        "WITH clause",
        "temporary result set",
        "readability"
      ],
      "company_fit": "Advanced technique for cleaner, more maintainable queries.",
      "a": "A CTE is a temporary named result set that exists only for the duration of a query. You define it using the WITH clause: WITH sales_summary AS (SELECT customer_id, SUM(amount) as total FROM orders GROUP BY customer_id) SELECT * FROM sales_summary WHERE total > 1000. CTEs make complex queries more readable by breaking them into logical steps. Unlike temporary tables, CTEs don't require explicit creation or cleanup—they're automatically disposed after the query. You can chain multiple CTEs together and even create recursive CTEs for hierarchical data. They're perfect for simplifying nested subqueries and making your code more maintainable."
    },
    {
      "id": "Q477",
      "q": "What's the difference between SQL and PL/SQL?",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Intermediate",
      "keywords": [
        "SQL",
        "PL/SQL",
        "procedural",
        "programming language",
        "stored procedures"
      ],
      "company_fit": "Understanding of database programming capabilities.",
      "a": "SQL is a declarative language for querying and manipulating data—you write commands line by line to tell the database what you want. PL/SQL (Procedural Language/SQL) extends SQL with programming constructs like variables, loops (FOR, WHILE), conditional statements (IF-THEN-ELSE), and exception handling. With PL/SQL, you can write stored procedures, functions, and triggers that execute as blocks of code rather than individual statements. This is useful for complex business logic that needs to run on the database server. SQL is for data operations; PL/SQL is for programming logic. For example, you'd use SQL to query data but PL/SQL to write a procedure that processes millions of records with complex conditional logic."
    },
    {
      "id": "Q478",
      "q": "How would you find the third highest salary in a table?",
      "type": "tech",
      "category": "SQL Practical",
      "difficulty": "Intermediate",
      "keywords": [
        "Nth highest",
        "RANK",
        "DENSE_RANK",
        "subquery",
        "ORDER BY"
      ],
      "company_fit": "Classic interview problem testing analytical skills.",
      "a": "I'd use DENSE_RANK to handle ties properly: SELECT salary FROM (SELECT salary, DENSE_RANK() OVER (ORDER BY salary DESC) as rank FROM employees) WHERE rank = 3. This assigns ranks without gaps and filters to the third rank. Another approach uses LIMIT with OFFSET: SELECT DISTINCT salary FROM employees ORDER BY salary DESC LIMIT 1 OFFSET 2. Or with a correlated subquery: SELECT MIN(salary) FROM employees WHERE salary IN (SELECT DISTINCT TOP 3 salary FROM employees ORDER BY salary DESC). The window function approach is cleanest and most maintainable. For the Nth highest, just change the rank filter or offset value."
    },
    {
      "id": "Q479",
      "q": "How do you remove duplicate records from a table?",
      "type": "tech",
      "category": "SQL Practical",
      "difficulty": "Intermediate",
      "keywords": [
        "duplicates",
        "DELETE",
        "ROW_NUMBER",
        "GROUP BY",
        "HAVING"
      ],
      "company_fit": "Common data cleaning task in analytics.",
      "a": "First, identify duplicates using GROUP BY: SELECT email, COUNT(*) FROM users GROUP BY email HAVING COUNT(*) > 1. To remove them, use ROW_NUMBER with a CTE: WITH cte AS (SELECT *, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) as rn FROM users) DELETE FROM cte WHERE rn > 1. This keeps the first occurrence and deletes the rest. Another approach: DELETE FROM users WHERE id NOT IN (SELECT MIN(id) FROM users GROUP BY email). The ROW_NUMBER method is more flexible because you can choose which duplicate to keep by changing the ORDER BY. Always backup data before deleting duplicates, and consider why duplicates exist in the first place—you might need better constraints."
    },
    {
      "id": "Q480",
      "q": "How would you get every alternate row from a table?",
      "type": "tech",
      "category": "SQL Practical",
      "difficulty": "Intermediate",
      "keywords": [
        "alternate rows",
        "even/odd",
        "modulus",
        "ROW_NUMBER"
      ],
      "company_fit": "Tests understanding of modulus and row numbering.",
      "a": "Use ROW_NUMBER with modulus to filter even or odd rows: SELECT * FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY id) as row_num FROM table_name) WHERE row_num % 2 = 0 for even rows, or WHERE row_num % 2 = 1 for odd rows. The modulus operator (%) returns the remainder of division—dividing by 2 gives you 0 for even numbers and 1 for odd numbers. This is useful for sampling data, creating test datasets, or analyzing patterns. You can also modify this to get every third row (% 3 = 0), every fourth row, etc. Just make sure you have a clear ordering column to make the 'alternate' selection meaningful."
    },
    {
      "id": "Q481",
      "q": "How would you find records from the last 30 days or last 6 months?",
      "type": "tech",
      "category": "SQL Practical",
      "difficulty": "Beginner",
      "keywords": [
        "date filtering",
        "date functions",
        "CURRENT_DATE",
        "DATE_SUB",
        "INTERVAL"
      ],
      "company_fit": "Common requirement for time-based reporting.",
      "a": "For the last 30 days: SELECT * FROM orders WHERE order_date >= CURRENT_DATE - INTERVAL 30 DAY or WHERE order_date >= DATE_SUB(CURRENT_DATE, INTERVAL 30 DAY). For the last 6 months, use INTERVAL 6 MONTH. You can also use date arithmetic: WHERE order_date >= DATEADD(day, -30, GETDATE()) in SQL Server. For more specific filtering, use EXTRACT or DATE_PART: WHERE EXTRACT(MONTH FROM order_date) = EXTRACT(MONTH FROM CURRENT_DATE) for the current month. Always be aware of time zones and whether your date columns include time components—you might need to use DATE() function to strip time for accurate comparisons."
    },
    {
      "id": "Q482",
      "q": "What's the difference between DBMS and RDBMS?",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Beginner",
      "keywords": [
        "DBMS",
        "RDBMS",
        "database management",
        "relational",
        "tables",
        "relationships"
      ],
      "company_fit": "Foundational understanding of database systems.",
      "a": "DBMS (Database Management System) is a basic way to store data in individual files with no connections between them—like storing student information in separate files for each attribute. RDBMS (Relational Database Management System) stores data in interconnected tables with relationships between them, like MySQL or SQL Server. The key differences: RDBMS allows faster data retrieval through relationships, reduces redundancy by storing data once, supports multiple users with high security, and is optimized for larger datasets. RDBMS uses structured tables with rows and columns that can be joined, while DBMS uses flat file storage. Think of DBMS as separate filing cabinets and RDBMS as an organized database where everything is linked together."
    },
    {
      "id": "Q483",
      "q": "What's the difference between DELETE, DROP, and TRUNCATE?",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Intermediate",
      "keywords": [
        "DELETE",
        "DROP",
        "TRUNCATE",
        "data removal",
        "rollback",
        "structure"
      ],
      "company_fit": "Critical for understanding data management safety.",
      "a": "Think of it like a bookshelf: DELETE removes specific books based on conditions (like all red-covered books) and can be rolled back—it's selective and reversible. You use WHERE clauses to specify what to delete. TRUNCATE quickly empties the entire shelf, removing all books but leaving the shelf intact—it's fast, removes all rows, but cannot be rolled back and doesn't allow WHERE clauses. DROP removes the entire shelf and all its books permanently—the table structure is gone and cannot be recovered. Use DELETE when you need precision and recoverability, TRUNCATE when you need to quickly clear all data from a table you'll reuse, and DROP only when you're certain you'll never need the table again."
    },
    {
      "id": "Q484",
      "q": "What's the difference between GROUP BY and ORDER BY?",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Beginner",
      "keywords": [
        "GROUP BY",
        "ORDER BY",
        "aggregation",
        "sorting",
        "summarization"
      ],
      "company_fit": "Essential for data analysis and reporting.",
      "a": "GROUP BY groups rows into summary buckets for aggregation—like grouping all employees by department to calculate average salary per department. It's used with aggregate functions (SUM, AVG, COUNT) to get summarized data. ORDER BY simply sorts the results in ascending or descending order—like sorting employees by salary from highest to lowest. For example: SELECT department, AVG(salary) FROM employees GROUP BY department ORDER BY AVG(salary) DESC. Here, GROUP BY creates summary rows for each department, and ORDER BY sorts those summaries by average salary. GROUP BY changes the structure of your results (fewer rows, summarized), while ORDER BY just rearranges the display order of existing rows."
    },
    {
      "id": "Q485",
      "q": "What is a clustered index and how does it differ from a regular index?",
      "type": "tech",
      "category": "SQL Performance",
      "difficulty": "Advanced",
      "keywords": [
        "clustered index",
        "index",
        "primary key",
        "data organization",
        "performance"
      ],
      "company_fit": "Advanced performance optimization knowledge.",
      "a": "A clustered index physically organizes the actual data rows in the table in sorted order—like organizing papers themselves by employee ID from smallest to largest. The data is stored in the order of the clustered index. A table can have only ONE clustered index because the data can only be physically sorted one way. When searching for employee ID 1120, the database uses the clustered index to skip entire sections that don't match and jumps directly to the range containing that ID. A non-clustered index, in contrast, is like a separate reference guide that points to where data is located, but doesn't reorganize the data itself. Clustered indexes are typically created on primary keys and provide the fastest access for range queries and sorting operations."
    },
    {
      "id": "Q486",
      "q": "What is database normalization and what are the normal forms?",
      "type": "tech",
      "category": "Database Design",
      "difficulty": "Advanced",
      "keywords": [
        "normalization",
        "1NF",
        "2NF",
        "3NF",
        "BCNF",
        "redundancy",
        "data integrity"
      ],
      "company_fit": "Essential for proper database design and architecture.",
      "a": "Normalization organizes data efficiently to minimize redundancy and prevent insertion, deletion, and update anomalies. The normal forms are progressive levels: 1NF (First Normal Form) requires each cell to contain a single value and each column to have a unique name—no multiple hobbies in one cell. 2NF requires 1NF plus all non-key attributes must depend on the entire primary key—teacher name should depend on class, not student ID. 3NF requires 2NF plus no transitive dependencies—non-key attributes shouldn't depend on other non-key attributes. BCNF (Boyce-Codd) is stricter—every determinant must be a candidate key. For example, instead of storing teacher name in the student table (which violates 3NF), create a separate class-teacher table. Normalization reduces data duplication, improves data integrity, and makes updates easier."
    },
    {
      "id": "Q487",
      "q": "What are SQL triggers and when would you use them?",
      "type": "tech",
      "category": "SQL Advanced",
      "difficulty": "Advanced",
      "keywords": [
        "triggers",
        "automatic actions",
        "INSERT",
        "UPDATE",
        "DELETE",
        "events",
        "BEFORE",
        "AFTER"
      ],
      "company_fit": "Shows understanding of advanced database automation.",
      "a": "Triggers are automatic actions that run when specific events (INSERT, UPDATE, DELETE) occur in a table. They're like reflexes—set them up once and they respond automatically. For example, in a library system, when a book is borrowed (INSERT into borrowed_books), a trigger can automatically decrease the available count in the books table: CREATE TRIGGER update_book_stock AFTER INSERT ON borrowed_books FOR EACH ROW BEGIN UPDATE books SET available_count = available_count - 1 WHERE book_id = NEW.book_id; END. Triggers run BEFORE or AFTER the event. Use cases include: maintaining audit logs, enforcing complex business rules, updating related tables automatically, validating data before insertion, and maintaining running totals. However, use them carefully—they can make debugging harder and impact performance if overused."
    },
    {
      "id": "Q488",
      "q": "How do you convert a string to a date format in SQL?",
      "type": "tech",
      "category": "SQL Practical",
      "difficulty": "Beginner",
      "keywords": [
        "STR_TO_DATE",
        "date conversion",
        "date format",
        "CAST",
        "CONVERT"
      ],
      "company_fit": "Common data transformation task.",
      "a": "Use STR_TO_DATE in MySQL or CAST/CONVERT in other databases. For example, to convert '27-10-2024' to a date: SELECT STR_TO_DATE('27-10-2024', '%d-%m-%Y') which reads the string using the format: %d for day, %m for month, %Y for year (4-digit). In SQL Server, use CONVERT(DATE, '27-10-2024', 105) or CAST('2024-10-27' AS DATE) for ISO format. In Oracle, use TO_DATE('27-10-2024', 'DD-MM-YYYY'). Always specify the format to match your input string pattern. Common format codes: %Y (4-digit year), %y (2-digit year), %m (month), %d (day), %H (hour), %i (minute), %s (second). This is essential when importing data from CSV files or external systems where dates come as strings."
    },
    {
      "id": "Q489",
      "q": "What are the main types of constraints in SQL?",
      "type": "tech",
      "category": "SQL Fundamentals",
      "difficulty": "Beginner",
      "keywords": [
        "constraints",
        "NOT NULL",
        "UNIQUE",
        "PRIMARY KEY",
        "FOREIGN KEY",
        "CHECK",
        "DEFAULT",
        "data integrity"
      ],
      "company_fit": "Fundamental for ensuring data quality and integrity.",
      "a": "Constraints are rules that enforce data integrity. The main types are: NOT NULL ensures a column can't be empty (like requiring a roll number for every student). UNIQUE ensures no duplicates (like email addresses—each must be distinct). PRIMARY KEY combines NOT NULL and UNIQUE (like roll number—unique identifier for each student). FOREIGN KEY links tables together (like using roll number to connect student table to course table). CHECK enforces conditions (like ensuring voting age > 18). DEFAULT provides automatic values when none specified (like setting country to 'India' if not provided). For example: CREATE TABLE students (roll_number INT PRIMARY KEY, email VARCHAR(100) UNIQUE, age INT CHECK (age >= 18), country VARCHAR(50) DEFAULT 'India'). Constraints prevent bad data from entering your database and maintain relationships between tables."
    }
  ]
}